 ------------------------
| Analyseur de fichiers  |
| Créé par Mael Clesse   |
 ------------------------
 
[01:04:03 WARN]:        at com.github.toxuin.griswold.Interactor.interact(Interactor.java:200)
[01:04:03 WARN]:        at com.github.toxuin.griswold.EventListener.onPlayerInteractEntity(EventListener.java:51)
2015-02-22 15:46:37 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
java.io.FileNotFoundException: https://raw.githubusercontent.com/CoFH/ThermalExpansion/master/VERSION
( Please submit this report to https://github.com/TechnicPack/TechnicLauncher/issues )
	                  <a href="https://github.com/yahoo/pure/releases/">Releases</a><br><br>
	                  <a href="http://yui.github.io/skinbuilder/?mode=pure">Skin Builder</a><br><br>
 * https://github.com/Diaoliu/Rekursive-Datenstrukturen
2015-02-22 19:13:19 [INFORMATION] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
Author: Martin Harris <github@nakomis.com>
Author: Martin Harris <github@nakomis.com>
Author: Martin Harris <github@nakomis.com>
     {:dotenv, github: "avdi/dotenv_elixir"}]
sync-uri = git@github.com:Sabayon-Labs/spike-community-overlay.git::::::::::::::
2015-02-22 19:18:32 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
https://github.com/FPtje/DarkRP/blob/master/gamemode/config/jobrelated.lua
2015-02-22 15:41:46 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
2015-02-23 20:47:15 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
// @require       https://gist.github.com/chrahunt/4843f0258c516882eea0/raw/8d5f273ca484e3c480ec0fde70cdc5861344388a/loopback.user.js
 > git config remote.origin.url https://github.com/JohnLangford/vowpal_wabbit.git
Fetching upstream changes from https://github.com/JohnLangford/vowpal_wabbit.git
 > git fetch --tags --progress https://github.com/JohnLangford/vowpal_wabbit.git +refs/heads/*:refs/remotes/origin/*
HEAD is now at 1be940e Merge branch 'master' of github.com:JohnLangford/vowpal_wabbit
2015-02-23 14:42:03 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/ModMobSupport.json
2015-02-23 14:42:03 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/NBTStripper.json
2015-02-23 13:55:46 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
https://github.com/hammackj/wintools/blob/master/examples/random/readprocessmemoryfromkernel.c
a54dd05 Merge branch 'cm-12.0' of github.com:CyanogenMod/android_frameworks_base into HEAD
6e9ea04 Merge branch 'L5' of https://github.com/VanirAOSP/platform_manifest into HEAD
80a61b8 Merge branch 'L5' of https://github.com/VanirAOSP/vendor_vanir into HEAD
406fdab Merge branch 'cm-12.0' of https://github.com/CyanogenMod/android_kernel_oneplus_msm8974 into L5
[14:16:52] [Client thread/INFO] [Waila]: Receiving registration request from [ secretroomsmod ] for method com.github.abrarsyed.secretroomsmod.client.waila.WailaProvider.register
[14:16:57] [Client thread/INFO] [extrautils]: Checking class for special block breaking code: com.github.abrarsyed.secretroomsmod.blocks.BlockTorchLever
[14:16:57] [Client thread/INFO] [extrautils]: Detected special block breaking code in class: com.github.abrarsyed.secretroomsmod.blocks.BlockTorchLever
[14:16:57] [Client thread/INFO] [extrautils]: Checking class for special block breaking code: com.github.abrarsyed.secretroomsmod.blocks.BlockOneWay
[14:16:57] [Client thread/INFO] [extrautils]: Checking class for special block breaking code: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoGate
[14:16:57] [Client thread/INFO] [extrautils]: Detected special block breaking code in class: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoGate
[14:16:57] [Client thread/INFO] [extrautils]: Checking class for special block breaking code: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoDummy
[14:16:57] [Client thread/INFO] [extrautils]: Checking class for special block breaking code: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoFull
[14:16:57] [Client thread/INFO] [extrautils]: Checking class for special block breaking code: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoTrapDoor
[14:16:57] [Client thread/INFO] [extrautils]: Detected special block breaking code in class: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoTrapDoor
[14:16:57] [Client thread/INFO] [extrautils]: Checking class for special block breaking code: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoDoor
[14:16:57] [Client thread/INFO] [extrautils]: Detected special block breaking code in class: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoDoor
[14:16:57] [Client thread/INFO] [extrautils]: Checking class for special block breaking code: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoGhost
[14:16:57] [Client thread/INFO] [extrautils]: Checking class for special block breaking code: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoLever
[14:16:57] [Client thread/INFO] [extrautils]: Detected special block breaking code in class: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoLever
[14:16:57] [Client thread/INFO] [extrautils]: Checking class for special block breaking code: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoWire
[14:16:57] [Client thread/INFO] [extrautils]: Detected special block breaking code in class: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoWire
[14:16:57] [Client thread/INFO] [extrautils]: Checking class for special block breaking code: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoButton
[14:16:57] [Client thread/INFO] [extrautils]: Checking class for special block breaking code: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoPlate
[14:16:57] [Client thread/INFO] [extrautils]: Detected special block breaking code in class: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoPlate
[14:16:57] [Client thread/INFO] [extrautils]: Checking class for special block breaking code: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoPlateWeighted
[14:16:57] [Client thread/INFO] [extrautils]: Checking class for special block breaking code: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoStair
[14:16:57] [Client thread/INFO] [extrautils]: Checking class for special block breaking code: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoChest
[14:16:57] [Client thread/INFO] [extrautils]: Detected special block breaking code in class: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoChest
[14:16:57] [Client thread/INFO] [extrautils]: Checking class for special block breaking code: com.github.abrarsyed.secretroomsmod.blocks.BlockCamoLightDetector
[14:16:57] [Client thread/INFO] [extrautils]: Checking class for special block breaking code: com.github.abrarsyed.secretroomsmod.blocks.BlockSolidAir
[14:17:11] [Client thread/INFO] [Waila]: Trying to reflect com.github.abrarsyed.secretroomsmod.client.waila.WailaProvider register
01-02-15 16:20:02 [DEBUG] [redirect] Following redirect to https://github.com/xrage/songspk-bulksong-downloader
01-02-15 16:20:10 [ERROR] ERROR: Unsupported URL: https://github.com/xrage/songspk-bulksong-downloader; please report this issue on https://yt-dl.org/bug . Make sure you are using the latest version; type  youtube-dl -U  to update. Be sure to call youtube-dl with the --verbose flag and include its complete output.
01-02-15 16:20:15 [WARNING] Server does not support HTTPRANGE! [https://github.com/xrage/songspk-bulksong-downloader.git]
01-02-15 16:20:15 [ERROR] self.songObj.bitrate is 0. skipping on <Song 'https://github.com/xrage/songspk-bulksong-downloader.git'>...
java -cp /usr/share/ceylon/1.1.0/repo/com/redhat/ceylon/typechecker/1.1.0/com.redhat.ceylon.typechecker-1.1.0.jar:/usr/share/ceylon/1.1.0/repo/org/antlr/stringtemplate/3.2.1/org.antlr.stringtemplate-3.2.1.jar:/usr/share/ceylon/1.1.0/repo/org/slf4j/api/1.6.1/org.slf4j.api-1.6.1.jar:/usr/share/ceylon/1.1.0/repo/net/minidev/json-smart/1.1.1/net.minidev.json-smart-1.1.1.jar:/usr/share/ceylon/1.1.0/repo/com/redhat/ceylon/compiler/java/1.1.0/com.redhat.ceylon.compiler.java-1.1.0.jar:/usr/share/ceylon/1.1.0/repo/com/redhat/ceylon/common/1.1.0/com.redhat.ceylon.common-1.1.0.jar:/usr/share/ceylon/1.1.0/repo/com/redhat/ceylon/compiler/js/1.1.0/com.redhat.ceylon.compiler.js-1.1.0.jar:/usr/share/ceylon/1.1.0/repo/org/apache/httpcomponents/httpcore/4.3.2/org.apache.httpcomponents.httpcore-4.3.2.jar:/usr/share/ceylon/1.1.0/repo/org/apache/commons/codec/1.8/org.apache.commons.codec-1.8.jar:/usr/share/ceylon/1.1.0/repo/com/github/rjeschke/txtmark/0.11/com.github.rjeschke.txtmark-0.11.jar:modules/default/default.car:/usr/share/ceylon/1.1.0/repo/org/jboss/jandex/1.0.3.Final/org.jboss.jandex-1.0.3.Final.jar:/usr/share/ceylon/1.1.0/repo/org/antlr/antlr/2.7.7/org.antlr.antlr-2.7.7.jar:/usr/share/ceylon/1.1.0/repo/org/jboss/modules/1.3.3.Final/org.jboss.modules-1.3.3.Final.jar:/usr/share/ceylon/1.1.0/repo/com/redhat/ceylon/module-resolver/1.1.0/com.redhat.ceylon.module-resolver-1.1.0.jar:/usr/share/ceylon/1.1.0/repo/com/redhat/ceylon/maven-support/2.0/com.redhat.ceylon.maven-support-2.0.jar:/usr/share/ceylon/1.1.0/repo/com/github/lookfirst/sardine/5.1/com.github.lookfirst.sardine-5.1.jar:/usr/share/ceylon/1.1.0/repo/org/apache/commons/logging/1.1.1/org.apache.commons.logging-1.1.1.jar:/usr/share/ceylon/1.1.0/repo/org/apache/httpcomponents/httpclient/4.3.2/org.apache.httpcomponents.httpclient-4.3.2.jar:/usr/share/ceylon/1.1.0/repo/ceylon/language/1.1.0/ceylon.language-1.1.0.car:/usr/share/ceylon/1.1.0/repo/org/antlr/runtime/3.4/org.antlr.runtime-3.4.jar:/usr/share/ceylon/1.1.0/repo/org/tautua/markdownpapers/core/1.2.7/org.tautua.markdownpapers.core-1.2.7.jar com.redhat.ceylon.compiler.java.runtime.Main default run_::::::::::::::
2015-02-22 19:40:46 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
androick 	5.35048d7 	A python tool to help in forensics analysis on android. 	https://github.com/Flo354/Androick
android-udev-rules 	135.d5aeca6 	Android udev rules. 	https://github.com/bbqlinux/android-udev-rules
arpwner 	26.f300fdf 	GUI-based python tool for arp posioning and dns poisoning attacks. 	https://github.com/ntrippar/ARPwner
azazel 	10.401e3aa 	A userland rootkit based off of the original LD_PRELOAD technique from Jynx rootkit. 	https://github.com/chokepoint/azazel
backcookie 	44.cbf5b8b 	Small backdoor using cookie. 	https://github.com/mrjopino/backcookie
backdoor-factory 	118.6237b9f 	Patch win32/64 binaries with shellcode. 	https://github.com/secretsquirrel/the-backdoor-factory
backfuzz 	36.8e54ed6 	A network protocol fuzzing toolkit. 	https://github.com/localh0t/backfuzz
bamf-framework 	35.30d2b4b 	A modular framework designed to be a platform to launch attacks against botnets. 	https://github.com/bwall/BAMF
bbqsql 	1.2 	SQL injection exploitation tool. 	https://github.com/neohapsis/bbqsql
bdfproxy 	58.79edcb2 	Patch Binaries via MITM: BackdoorFactory + mitmProxy 	https://github.com/secretsquirrel/BDFProxy
beeswarm 	1154.29273e6 	Honeypot deployment made easy http://www.beeswarm-ids.org/ 	https://github.com/honeynet/beeswarm/
beleth 	36.0963699 	A Multi-threaded Dictionary based SSH cracker. 	https://github.com/chokepoint/Beleth
binwally 	4.0aabd8b 	Binary and Directory tree comparison tool using the Fuzzy Hashing concept (ssdeep). 	https://github.com/bmaia/binwally
birp 	60.1d7c49f 	A tool that will assist in the security assessment of mainframe applications served over TN3270. 	https://github.com/sensepost/birp
bluebox-ng 	82.22fd93e 	A GPL VoIP/UC vulnerability scanner. 	https://github.com/jesusprubio/bluebox-ng
bowcaster 	0.1 	This framework, implemented in Python, is intended to aid those developing exploits by providing useful set of tools and modules, such as payloads, encoders, connect-back servers, etc. Currently the framework is focused on the MIPS CPU architecture, but the design is intended to be modular enough to support arbitrary architectures. 	https://github.com/zcutlip/bowcaster
bulk-extractor 	1.5.5 	Bulk Email and URL extraction tool. 	https://github.com/simsong/bulk_extractor
buttinsky 	138.1a2a1b2 	Provide an open source framework for automated botnet monitoring. 	https://github.com/buttinsky/buttinsky
bytecode-viewer 	79.bde746b 	A Java 8/Android APK Reverse Engineering Suite. 	https://github.com/Konloch/bytecode-viewer
cangibrina 	87.fcbc952 	Dashboard Finder. 	https://github.com/fnk0c/cangibrina
cansina 	109.be98c12 	A python-based Web Content Discovery Tool. 	https://github.com/deibit/cansina
cdpsnarf 	0.1.6 	Cisco discovery protocol sniffer. 	https://github.com/Zapotek/cdpsnarf
cecster 	5.15544cb 	A tool to perform security testing against the HDMI CEC (Consumer Electronics Control) and HEC (HDMI Ethernet Channel) protocols 	https://github.com/nccgroup/CECster
centry 	72.6de2868 	Cold boot & DMA protection 	https://github.com/0xPoly/Centry
chapcrack 	17.ae2827f 	A tool for parsing and decrypting MS-CHAPv2 network handshakes. 	https://github.com/moxie0/chapcrack
cheetah 	19.a937193 	Complete penetration testing suite (port scanning, brute force attacks, services discovery, common vulnerabilities searching, reporting etc.) 	https://github.com/bl4de/Cheetah
chromefreak 	22.336e323 	A Cross-Platform Forensic Framework for Google Chrome 	http://osandamalith.github.io/ChromeFreak/
ciphertest 	14.7f49ea7 	A better SSL cipher checker using gnutls. 	https://github.com/OpenSecurityResearch/ciphertest
ciphr 	105.db79691 	A CLI tool for encoding, decoding, encryption, decryption, and hashing streams of data. 	https://github.com/frohoff/ciphr
cisco-snmp-enumeration 	2.e9b1f93 	Automated Cisco SNMP Enumeration, Brute Force, Configuration Download and Password Cracking. 	https://github.com/nccgroup/cisco-snmp-enumeration
cisco-snmp-slap 	5.daf0589 	IP address spoofing tool in order to bypass an ACL protecting an SNMP service on Cisco IOS devices. 	https://github.com/nccgroup/cisco-snmp-slap
cisco5crack 	2.c4b228c 	Crypt and decrypt the cisco enable 5 passwords. 	https://github.com/madrisan/cisco7crack
cisco7crack 	2.f1c21dd 	Crypt and decrypt the cisco enable 7 passwords. 	https://github.com/madrisan/cisco7crack
climber 	23.f614304 	Check UNIX/Linux systems for privilege escalation. 	https://github.com/raffaele-forte/climber
clusterd 	129.0f04a49 	Automates the fingerprinting, reconnaissance, and exploitation phases of an application server attack. 	https://github.com/hatRiot/clusterd
crackhor 	2.ae7d83f 	A Password cracking utility. 	https://github.com/CoalfireLabs/crackHOR
crackle 	39.3e93196 	Crack and decrypt BLE encryption 	https://github.com/mikeryan/crackle/
crackserver 	33.e5763ab 	An XMLRPC server for password cracking. 	https://github.com/averagesecurityguy/crack
create_ap 	117.3460580 	This script creates a NATed or Bridged WiFi Access Point. 	https://github.com/oblique/create_ap
creds 	17.1ec8297 	Harvest FTP/POP/IMAP/HTTP/IRC credentials along with interesting data from each of the protocols. 	https://github.com/DanMcInerney/creds.py
creepy 	137.9f60449 	A geolocation information gatherer. Offers geolocation information gathering through social networking platforms. 	http://github.com/ilektrojohn/creepy.git
crowbar 	39.839c62b 	A brute forcing tool that can be used during penetration tests. It is developed to support protocols that are not currently supported by thc-hydra and other popular brute forcing tools. 	https://github.com/galkan/crowbar
crypthook 	17.0728cd1 	TCP/UDP symmetric encryption tunnel wrapper. 	https://github.com/chokepoint/CryptHook
damm 	28.9af34b4 	Differential Analysis of Malware in Memory. 	https://github.com/504ensicsLabs/DAMM
darkmysqli 	1.6 	Multi-Purpose MySQL Injection Tool 	https://github.com/BlackArch/darkmysqli
dbd 	1.50 	A Netcat-clone, designed to be portable and offer strong encryption. It runs on Unix-like operating systems and on Microsoft Win32. 	https://github.com/gitdurandal/dbd
depdep 	2.0 	A merciless sentinel which will seek sensitive files containing critical info leaking through your network. 	https://github.com/galkan/depdep
detect-it-easy 	32.bfbeac1 	A program for determining types of files. 	https://github.com/horsicq/Detect-It-Easy
device-pharmer 	35.c1d449e 	Opens 1K+ IPs or Shodan search results and attempts to login. 	https://github.com/DanMcInerney/device-pharmer
dhcpig 	69.cc4109a 	Enumerates hosts, subdomains, and emails from a given domain using google 	https://github.com/kamorin/DHCPig
dirs3arch 	130.8f37c7d 	HTTP(S) directory/file brute forcer. 	https://github.com/maurosoria/dirs3arch
dns-reverse-proxy 	11.ef9d062 	A reverse DNS proxy written in Go. 	https://github.com/StalkR/dns-reverse-proxy
dns-spoof 	12.3918a10 	Yet another DNS spoof utility. 	https://github.com/maurotfilho/dns-spoof
dnsbrute 	2.b1dc84a 	Multi-theaded DNS bruteforcing, average speed 80 lookups/second with 40 threads. 	https://github.com/d4rkcat/dnsbrute
dnsrecon 	0.8.9 	Python script for enumeration of hosts, subdomains and emails from a given domain using google. 	https://github.com/darkoperator/dnsrecon
doona 	127.06cd178 	A fork of the Bruteforce Exploit Detector Tool (BED). 	https://github.com/wireghoul/doona
dpscan 	0.1 	Drupal Vulnerabilty Scanner. 	https://github.com/insaneisnotfree/Blue-Sky-Information-Security
dscanner 	715.63ba816 	Swiss-army knife for D source code. 	https://github.com/Hackerpilot/Dscanner
dsd 	84.60807e0 	Digital Speech Decoder 	https://github.com/szechyjs/dsd
dumb0 	19.1493e74 	A simple tool to dump users in popular forums and CMS. 	https://github.com/0verl0ad/Dumb0
dump1090 	386.bff92c4 	A simple Mode S decoder for RTLSDR devices. 	https://github.com/MalcolmRobb/dump1090
dvcs-ripper 	12.b4dc17a 	Rip web accessible (distributed) version control systems: SVN/GIT/... 	https://github.com/kost/dvcs-ripper
easy-creds 	3.9 	A bash script that leverages ettercap and other tools to obtain credentials. 	https://github.com/brav0hax/easy-creds
easyda 	7.0867f9b 	Easy Windows Domain Access Script. 	https://github.com/nccgroup/easyda
elite-proxy-finder 	44.29143ad 	Finds public elite anonymity proxies and concurrently tests them. 	https://github.com/DanMcInerney/elite-proxy-finder
enum-shares 	7.97cba5a 	Tool that enumerates shared folders across the network and under a custom user account. 	https://github.com/dejanlevaja/enum_shares
ettercap 	0.8.1 	A network sniffer/interceptor/logger for ethernet LANs - console 	http://ettercap.github.com/ettercap/
extracthosts 	14.ec8b89c 	Extracts hosts (IP/Hostnames) from files. 	https://github.com/bwall/ExtractHosts
eyewitness 	308.db7cb97 	Designed to take screenshots of websites, provide some server header info, and identify default credentials if possible. 	https://github.com/ChrisTruncer/EyeWitness
facebot 	23.57f6025 	A facebook profile and reconnaissance system. 	https://github.com/pun1sh3r/facebot
facebrute 	7.ece355b 	This script tries to guess passwords for a given facebook account using a list of passwords (dictionary). 	https://github.com/emerinohdz/FaceBrute
fakedns 	36.90bd7e1 	A regular-expression based python MITM DNS server with correct DNS request passthrough and "Not Found" responses. 	https://github.com/Crypt0s/FakeDns
fakenetbios 	7.b83701e 	A family of tools designed to simulate Windows hosts (NetBIOS) on a LAN. 	https://github.com/mubix/FakeNetBIOS
fang 	16.b5cb86d 	A multi service threaded MD5 cracker. 	https://github.com/evilsocket/fang
fbht 	53.9e515ef 	A Facebook Hacking Tool 	https://github.com/chinoogawa/fbht-linux
fbid 	11.b8106f8 	Show info about the author by facebook photo url. 	https://github.com/guelfoweb/fbid
fernmelder 	6.c6d4ebe 	Asynchronous mass DNS scanner. 	https://github.com/stealth/fernmelder
filibuster 	161.37b7f9c 	A Egress filter mapping application with additional functionality. 	https://github.com/subinacls/Filibuster
firstexecution 	6.a275793 	A Collection of different ways to execute code outside of the expected entry points. 	https://github.com/nccgroup/firstexecution
flowinspect 	94.01c8921 	A network traffic inspection tool. 	https://github.com/7h3rAm/flowinspect
fpdns 	20130404 	Program that remotely determines DNS server versions. 	https://github.com/kirei/fpdns
fraud-bridge 	10.775c563 	ICMP and DNS tunneling via IPv4 and IPv6. 	https://github.com/stealth/fraud-bridge
frisbeelite 	1.2 	A GUI-based USB device fuzzer. 	https://github.com/nccgroup/FrisbeeLite
fuzzap 	14.f13932c 	A python script for obfuscating wireless networks. 	https://github.com/lostincynicism/FuzzAP
ghost-py 	0.1b3 	Webkit based webclient (relies on PyQT). 	http://jeanphix.github.com/Ghost.py/
goldeneye 	16.7a38fe9 	A HTTP DoS test tool. Attack Vector exploited: HTTP Keep Alive + NoCache. 	https://github.com/jseidl/GoldenEye
golismero 	2.0 	Opensource web security testing framework. 	https://github.com/golismero/golismero
googlesub 	1.2 	A python script to find domains by using google dorks. 	https://github.com/zombiesam/googlesub
hasere 	1.0 	Discover the vhosts using google and bing. 	https://github.com/galkan/hasere
hasher 	33.17592ed 	A tool that allows you to quickly hash plaintext strings, or compare hashed values with a plaintext locally. 	https://github.com/ChrisTruncer/Hasher
hashfind 	8.e9a9a14 	A tool to search files for matching password hash types and other interesting data. 	https://github.com/rurapenthe/hashfind
hashid 	315.3f9cddf 	Software to identify the different types of hashes used to encrypt data. 	https://github.com/psypanda/hashID
hashpump 	34.0b3c286 	A tool to exploit the hash length extension attack in various hashing algorithms. 	https://github.com/bwall/HashPump
hashtag 	0.41 	A python script written to parse and identify password hashes. 	https://github.com/SmeegeSec/HashTag
haystack 	1035.ac2ffa4 	A Python framework for finding C structures from process memory - heap analysis - Memory structures forensics. 	https://github.com/trolldbois/python-haystack
hdcp-genkey 	18.e8d342d 	Generate HDCP source and sink keys from the leaked master key. 	https://github.com/rjw57/hdcp-genkey
hdmi-sniff 	5.f7fbc0e 	HDMI DDC (I2C) inspection tool. It is designed to demonstrate just how easy it is to recover HDCP crypto keys from HDMI devices. 	https://github.com/ApertureLabsLtd/hdmi-sniff
honeyd 	1.6.7 	A small daemon that creates virtual hosts on a network. 	https://github.com/DataSoft/Honeyd/
hpfeeds 	138.249b2f7 	Honeynet Project generic authenticated datafeed protocol. 	https://github.com/rep/hpfeeds
hqlmap 	35.081395e 	A tool to exploit HQL Injections. 	https://github.com/PaulSec/HQLmap
htrosbif 	134.9dc3f86 	Active HTTP server fingerprinting and recon tool. 	https://github.com/lkarsten/htrosbif
htshells 	760b5e9 	Self contained web shells and other attacks via .htaccess files. 	https://github.com/wireghoul/htshells
hulk 	11.a9b9ad4 	A webserver DoS tool (Http Unbearable Load King) ported to Go with some additional features. 	https://github.com/grafov/hulk
ibrute 	12.3a6a11e 	An AppleID password bruteforce tool. It uses Find My Iphone service API, where bruteforce protection was not implemented. 	https://github.com/hackappcom/ibrute/
imagejs 	48.1faf262 	Small tool to package javascript into a valid image file. 	https://github.com/jklmnn/imagejs
interrogate 	0.0.4 	A proof-of-concept tool for identification of cryptographic keys in binary material (regardless of target operating system), first and foremost for memory dump analysis and forensic usage. 	https://github.com/carmaa/interrogate
intersect 	2.5 	Post-exploitation framework 	https://github.com/ohdae/Intersect.5
iosforensic 	1.0 	iOS forensic tool https://www.owasp.org/index.php/Projects/OWASP_iOSForensic 	https://github.com/Flo354/iOSForensic
ip-https-tools 	5.b22e2b3 	Tools for the IP over HTTPS (IP-HTTPS) Tunneling Protocol. 	https://github.com/takeshixx/ip-https-tools
ircsnapshot 	93.9ba3c6c 	Tool to gather information from IRC servers. 	https://github.com/bwall/ircsnapshot
jadx 	0.5.4 	Dex to Java command line and GUI decompiler tool that produces Java source code from Android Dex and APK files. 	https://github.com/skylot/jadx
jboss-autopwn 	1.3bc2d29 	A JBoss script for obtaining remote shell access. 	https://github.com/SpiderLabs/jboss-autopwn
jigsaw 	1.3 	A simple ruby script for enumerating information about a company's employees. It is useful for Social Engineering or Email Phishing. 	https://github.com/pentestgeek/jigsaw
js-beautify 	1.5.4 	This little beautifier will reformat and reindent bookmarklets, ugly JavaScript, unpack scripts packed by Dean Edward?s popular packer, as well as deobfuscate scripts processed by javascriptobfuscator.com. 	https://github.com/einars/js-beautify
junkie 	1338.baa4524 	A modular packet sniffer and analyzer. 	https://github.com/securactive/junkie
jwscan 	6.b0306f0 	Scanner for Jar to EXE wrapper like Launch4j, Exe4j, JSmooth, Jar2Exe. 	https://github.com/katjahahn/JWScan
kalibrate-rtl 	11.aae11c8 	Fork of http://thre.at/kalibrate/ for use with rtl-sdr devices. 	https://github.com/steve-m/kalibrate-rtl
kautilya 	0.5.5 	Pwnage with Human Interface Devices using Teensy++2.0 and Teensy 3.0 devices. 	https://github.com/samratashok/Kautilya/releases
kippo 	0.9 	A medium interaction SSH honeypot designed to log brute force attacks and most importantly, the entire shell interaction by the attacker. 	https://github.com/desaster/kippo
knock 	27.b1acf04 	Subdomain scanner. 	https://github.com/guelfoweb/knock
laf 	12.7a456b3 	Login Area Finder: scans host/s for login panels. 	https://github.com/takeshixx/laf
lanmap2 	124.4f8afed 	Passive network mapping tool 	http://github.com/rflynn/lanmap2
lans 	164.36797ad 	A Multithreaded asynchronous packet parsing/injecting arp spoofer. 	https://github.com/DanMcInerney/LANs.py
lbmap 	145.93e6b71 	Proof of concept scripts for advanced web application fingerprinting, presented at OWASP AppSecAsia 2012. 	https://github.com/wireghoul/lbmap
ldap-brute 	21.acc06e3 	A semi fast tool to bruteforce values of LDAP injections over HTTP. 	https://github.com/droope/ldap-brute
leroy-jenkins 	0.r3.bdc3965 	A python tool that will allow remote execution of commands on a Jenkins server and its nodes. 	https://github.com/captainhooligan/Leroy-Jenkins
levye 	84.5406303 	A brute force tool which is support sshkey, vnckey, rdp, openvpn. 	https://github.com/galkan/levye
liffy 	63.238ce6d 	A Local File Inclusion Exploitation tool. 	https://github.com/rotlogix/liffy
linenum 	18.b4c2541 	Scripted Local Linux Enumeration & Privilege Escalation Checks 	https://github.com/rebootuser/LinEnum
linset 	9.8746b1f 	Evil Twin Attack Bash script - An automated WPA/WPA2 hacker. 	https://github.com/vk496/linset
linux-exploit-suggester 	32.9db2f5a 	A Perl script that tries to suggest exploits based OS version number. 	https://github.com/PenturaLabs/Linux_Exploit_Suggester
lisa.py 	28.5b3156b 	An Exploit Dev Swiss Army Knife. 	https://github.com/ant4g0nist/lisa.py
lte-cell-scanner 	57.5fa3df8 	LTE SDR cell scanner optimized to work with very low performance RF front ends (8bit A/D, 20dB noise figure). 	https://github.com/Evrytania/LTE-Cell-Scanner
luyten 	0.4.4 	An Open Source Java Decompiler Gui for Procyon. 	https://github.com/deathmarine/Luyten
maclookup 	0.3 	Lookup MAC addresses in the IEEE MA-L/OUI public listing. 	https://github.com/paraxor/maclookup
maltrieve 	175.8c68c7e 	Originated as a fork of mwcrawler. It retrieves malware directly from the sources as listed at a number of sites. 	https://github.com/technoskald/maltrieve
marc4dasm 	6.f11860f 	This python-based tool is a disassembler for the Atmel MARC4 (a 4 bit Harvard micro). 	https://github.com/ApertureLabsLtd/marc4dasm
masscan 	391.a60cc70 	TCP port scanner, spews SYN packets asynchronously, scanning entire Internet in under 5 minutes. 	https://github.com/robertdavidgraham/masscan
meterssh 	10.ebb6f4e 	A way to take shellcode, inject it into memory then tunnel whatever port you want to over SSH to mask any type of communications as a normal SSH connection. 	https://github.com/trustedsec/meterssh
mikrotik-npk 	7.88d7e4b 	Python tools for manipulating Mikrotik NPK format. 	https://github.com/kost/mikrotik-npk
mitmer 	22.b01c7fe 	A man-in-the-middle and phishing attack tool that steals the victim's credentials of some web services like Facebook. 	https://github.com/husam212/MITMer
mitmf 	186.3f6bbb8 	A Framework for Man-In-The-Middle attacks written in Python. 	https://github.com/byt3bl33d3r/MITMf
mkbrutus 	1.0.2 	Password bruteforcer for MikroTik devices or boxes running RouterOS. 	http://mkbrutusproject.github.io/MKBRUTUS/
moloch 	0.9.2 	An open source large scale IPv4 full PCAP capturing, indexing and database system. 	https://github.com/aol/moloch
mptcp-abuse 	6.b0eeb27 	A collection of tools and resources to explore MPTCP on your network. Initially released at Black Hat USA 2014. 	https://github.com/Neohapsis/mptcp-abuse
multitun 	43.9804513 	Tunnel arbitrary traffic through an innocuous WebSocket. 	https://github.com/covertcodes/multitun
mwebfp 	16.a800b98 	Mass Web Fingerprinter. 	https://github.com/falcon-lnhg/mwebfp
mysql2sqlite 	14.e5b2c31 	Converts a mysqldump file into a Sqlite 3 compatible file. 	https://gist.github.com/esperlu/943776
nacker 	23.b67bb39 	A tool to circumvent 802.1x Network Access Control on a wired LAN. 	https://github.com/carmaa/nacker
neighbor-cache-fingerprinter 	83.f1e596f 	An ARP based Operating System version scanner. 	https://github.com/PherricOxide/Neighbor-Cache-Fingerprinter
netcommander 	1.3 	An easy-to-use arp spoofing tool. 	https://github.com/evilsocket/netcommander
network-app-stress-tester 	19.df75391 	Network Application Stress Testing Yammer. 	https://github.com/PherricOxide/Network-App-Stress-Tester
nfspy 	1.0 	A Python library for automating the falsification of NFS credentials when mounting an NFS share. 	https://github.com/bonsaiviking/NfSpy
nimbostratus 	54.c7c206f 	Tools for fingerprintinging and exploiting Amazon cloud infrastructures. 	https://github.com/andresriancho/nimbostratus
nomorexor 	0.1 	Tool to help guess a files 256 byte XOR key by using frequency analysis 	https://github.com/hiddenillusion/NoMoreXOR
onionshare 	440.e78e21a 	Securely and anonymously share a file of any size. 	https://github.com/micahflee/onionshare/
opensvp 	64.56b2b8f 	A security tool implementing "attacks" to be able to the resistance of firewall to protocol level attack. 	https://github.com/regit/opensvp
osueta 	65.90323e2 	A simple Python script to exploit the OpenSSH User Enumeration Timing Attack. 	https://github.com/c0r3dump3d/osueta
owasp-bywaf 	26.e730d1b 	A web application penetration testing framework (WAPTF). 	https://github.com/depasonico/OWASP-ByWaf
packetsender 	7.4a9afa6 	An open source utility to allow sending and receiving TCP and UDP packets. 	https://github.com/dannagle/PacketSender
pacumen 	1.92a0884 	Packet Acumen - Analyse encrypted network traffic and more (side-channel attacks). 	https://github.com/bniemczyk/pacumen
panhunt 	26.cd58866 	Searches for credit card numbers (PANs) in directories. 	https://github.com/Dionach/PANhunt
panoptic 	179.770bc70 	A tool that automates the process of search and retrieval of content for common log and config files through LFI vulnerability. 	https://github.com/lightos/Panoptic
parsero 	56.fc5f7ec 	A robots.txt audit tool. 	https://github.com/behindthefirewalls/Parsero
passcracking 	20131214 	A little python script for sending hashes to passcracking.com and milw0rm 	http://github.com/jensp/passcracking
passhunt 	5.332f374 	Search drives for documents containing passwords. 	https://github.com/Dionach/PassHunt
passivedns 	1.1.3 	A network sniffer that logs all DNS server replies for use in a passive DNS setup. 	https://github.com/gamelinux/passivedns
pastenum 	0.4.1 	Search Pastebins for content, fork from nullthreat corelan pastenum2 	http://github.com/shadowbq/pastenum
patator 	86.5c3cb0a 	A multi-purpose bruteforcer. 	https://github.com/lanjelot/patator
pcredz 	29.05ae40f 	A tool that extracts credit card numbers, NTLM(DCE-RPC, HTTP, SQL, LDAP, etc), Kerberos (AS-REQ Pre-Auth etype 23), HTTP Basic, SNMP, POP, SMTP, FTP, IMAP, and more from a pcap file or from a live interface. 	https://github.com/lgandx/PCredz
peda 	51.327db44 	Python Exploit Development Assistance for GDB. 	https://github.com/longld/peda
peframe 	81.0c4a0d5 	Tool to perform static analysis on (portable executable) malware. 	https://github.com/guelfoweb/peframe
pemcrack 	10.34b0f85 	Cracks SSL PEM files that hold encrypted private keys. Brute forces or dictionary cracks. 	https://github.com/robertdavidgraham/pemcrack
pgdbf 	94.baa1d95 	Convert XBase / FoxPro databases to PostgreSQL 	https://github.com/kstrauser/pgdbf
phemail 	27.7ae21f2 	A python open source phishing email tool that automates the process of sending phishing emails as part of a social engineering test. 	https://github.com/Dionach/PhEmail
php-rfi-payload-decoder 	30.bd42caa 	Decode and analyze RFI payloads developed in PHP. 	https://github.com/bwall/PHP-RFI-Payload-Decoder
phpstress 	5.f987a7e 	A PHP denial of service / stress test for Web Servers running PHP-FPM or PHP-CGI. 	https://github.com/nightlionsecurity/phpstress
pip3line 	30.eae2260 	The Swiss army knife of byte manipulation. 	https://github.com/nccgroup/pip3line
plown 	13.ccf998c 	A security scanner for Plone CMS. 	https://github.com/unweb/plown
pompem 	77.4e77ffd 	A python exploit tool finder. 	https://github.com/rfunix/Pompem
powersploit 	247.8b6f759 	A PowerShell Post-Exploitation Framework. 	https://github.com/mattifestation/PowerSploit
praeda 	37.093d1c0 	An automated data/information harvesting tool designed to gather critical information from various embedded devices. 	https://github.com/percx/Praeda
prometheus 	175.497b2ce 	A Firewall analyzer written in ruby 	https://github.com/averagesecurityguy/prometheus
proxychains-ng 	4.8.1 	A hook preloader that allows to redirect TCP traffic of existing dynamically linked programs through one or more SOCKS or HTTP proxies 	https://github.com/rofl0r/proxychains
pshitt 	21.85cde65 	A lightweight fake SSH server designed to collect authentication data sent by intruders. 	https://github.com/regit/pshitt
pwntools 	2.1.3 	The CTF framework used by #Gallopsled in every CTF. 	https://github.com/Gallopsled/pwntools
pyexfil 	36.978ec43 	A couple of beta stage tools for data exfiltration. 	https://github.com/ytisf/PyExfil
pyfiscan 	1169.6dc0110 	Free web-application vulnerability and version scanner. 	https://github.com/fgeek/pyfiscan
python2-binaryornot 	0.3.0 	Ultra-lightweight pure Python package to check if a file is binary or text. 	https://github.com/audreyr/binaryornot
python2-yara 	3.3.0 	A malware identification and classification tool. 	https://github.com/plusvic/yara
redpoint 	109.0405b90 	Digital Bond's ICS Enumeration Tools. 	https://github.com/digitalbond/Redpoint3
regeorg 	26.22fb8a9 	The successor to reDuh, pwn a bastion webserver and create SOCKS proxies through the DMZ. Pivot and pwn. 	https://github.com/sensepost/reGeorg
responder 	117.6c7a5dd 	A LLMNR and NBT-NS poisoner, with built-in HTTP/SMB/MSSQL/FTP/LDAP rogue authentication server supporting NTLMv1/NTLMv2/LMv2, Extended Security NTLMSSP and Basic HTTP authentication. 	https://github.com/SpiderLabs/Responder/
ridenum 	39.ebbfaca 	A null session RID cycle attack for brute forcing domain controllers. 	https://github.com/trustedsec/ridenum
ropgadget 	5.3 	Lets you search your gadgets on your binaries (ELF format) to facilitate your ROP exploitation. 	https://github.com/JonathanSalwan/ROPgadget
ropper 	91.212d5da 	It can show information about files in different file formats and you can find gadgets to build rop chains for different architectures. For disassembly ropper uses the awesome Capstone Framework. 	https://github.com/sashs/Ropper
roputils 	124.5ab25f5 	A Return-oriented Programming toolkit. 	https://github.com/inaz2/roputils
rpdscan 	2.a71b0f3 	Remmina Password Decoder and scanner. 	https://github.com/freakyclown/RPDscan
rtlamr 	197.03369d1 	An rtl-sdr receiver for smart meters operating in the 900MHz ISM band. 	https://github.com/bemasher/rtlamr/
rtlizer 	34.33e31ba 	Simple spectrum analyzer. 	https://github.com/csete/rtlizer
rtlsdr-scanner 	862.2831e0e 	A cross platform Python frequency scanning GUI for the OsmoSDR rtl-sdr library. 	https://github.com/EarToEarOak/RTLSDR-Scanner
ruby-ronin 	1.5.0 	A Ruby platform for exploit development and security research. 	http://ronin-ruby.github.io/
ruby-ronin-support 	0.5.1 	A support library for Ronin. 	http://ronin-ruby.github.io/
ruby-uri-query_params 	0.7.0 	Access the query parameters of a URI, just like in PHP. 	http://github.com/postmodern/uri-query_params
samydeluxe 	2.2ed1bac 	Automatic samdump creation script. 	http://github.com/jensp/samydeluxe
sandy 	6.531ab16 	An open-source Samsung phone encryption assessment framework 	https://github.com/donctl/sandy
sasm 	3.1.0 	A simple crossplatform IDE for NASM, MASM, GAS and FASM assembly languages. 	https://github.com/Dman95/SASM
sb0x 	19.04f40fe 	A simple and Lightweight framework for Penetration testing. 	https://github.com/levi0x0/sb0x-project
scout2 	208.aaf57b8 	Security auditing tool for AWS environments. 	http://isecpartners.github.io/Scout2/
scrape-dns 	58.3df392f 	Searches for interesting cached DNS entries. 	https://github.com/304GEEK/Scrape-DNS
sees 	67.cd741aa 	Increase the success rate of phishing attacks by sending emails to company users as if they are coming from the very same company's domain. 	https://github.com/galkan/sees/
sergio-proxy 	0.2.1 	A multi-threaded transparent HTTP proxy for manipulating web traffic 	https://github.com/darkoperator/dnsrecon
shellme 	3.8c7919d 	Because sometimes you just need shellcode and opcodes quickly. This essentially just wraps some nasm/objdump calls into a neat script. 	https://github.com/hatRiot/shellme
shellnoob 	2.1 	A toolkit that eases the writing and debugging of shellcode 	https://github.com/reyammer/shellnoob
shocker 	52.4c9df3a 	A tool to find and exploit servers vulnerable to Shellshock. 	https://github.com/nccgroup/shocker
shodan 	1.2.4 	Python library for Shodan (https://developer.shodan.io). 	http://github.com/achillean/shodan-python
sipshock 	6.1d636ab 	A scanner for SIP proxies vulnerable to Shellshock. 	https://github.com/zaf/sipshock
skyjack 	7.5f7a25e 	Takes over Parrot drones, deauthenticating their true owner and taking over control, turning them into zombie drones under your own control. 	https://github.com/samyk/skyjack
skypefreak 	30.14a81cb 	A Cross Platform Forensic Framework for Skype. 	http://osandamalith.github.io/SkypeFreak/
smartphone-pentest-framework 	100.399e6ce 	Repository for the Smartphone Pentest Framework (SPF). 	https://github.com/georgiaw/Smartphone-Pentest-Framework
smbexec 	148.7827616 	A rapid psexec style attack with samba tools. 	https://github.com/pentestgeek/smbexec
snapception 	8.c156f9e 	Intercept and decrypt all snapchats received over your network. 	https://github.com/thebradbain/snapception
snmp-brute 	11.180075b 	SNMP brute force, enumeration, CISCO config downloader and password cracking script. 	https://github.com/SECFORCE/SNMP-Brute
snoopy-ng 	93.e305420 	A distributed, sensor, data collection, interception, analysis, and visualization framework. 	https://github.com/sensepost/snoopy-ng
spiga 	7240.3a804ac 	Configurable web resource scanner 	https://github.com/getdual/scripts-n-tools/blob/master/spiga.py
spipscan 	69.4ad3235 	SPIP (CMS) scanner for penetration testing purpose written in Python. 	https://github.com/PaulSec/SPIPScan
sploitctl 	35.23a18ca 	Fetch, install and search exploit archives from exploit sites like exploit-db and packetstorm. 	https://github.com/BlackArch/sploitctl
sploitego 	153.d9568dc 	Maltego Penetration Testing Transforms. 	https://github.com/allfro/sploitego
ssh-user-enum 	5.3d83131 	SSH User Enumeration Script in Python Using The Timing Attack. 	https://github.com/nccgroup/ssh-user-enum
sshscan 	7401.3bfd4ae 	A horizontal SSH scanner that scans large swaths of IPv4 space for a single SSH user and pass. 	https://github.com/getdual/scripts-n-tools/blob/master/sshscan.py
sshuttle 	198.9ce2fa0 	Transparent proxy server that works as a poor man's VPN. Forwards all TCP packets over ssh (and even DNS requests when using --dns option). Doesn't require admin privileges on the server side. 	https://github.com/apenwarr/sshuttle
ssl-phuck3r 	2.0 	All in one script for Man-In-The-Middle attacks. 	https://github.com/zombiesam/ssl_phuck3r
sslcaudit 	522.5b6be3e 	Utility to perform security audits of SSL/TLS clients. 	https://github.com/grwl/sslcaudit
sslnuke 	5.c5faeaa 	Transparent proxy that decrypts SSL traffic and prints out IRC messages. 	https://github.com/jtripper/sslnuke
sslscan 	239.1328b49 	Tests SSL/TLS enabled services to discover supported cipher suites. 	https://github.com/DinoTools/sslscan
sslyze 	0.10 	Python tool for analyzing the configuration of SSL servers and for identifying misconfigurations. 	https://github.com/nabla-c0d3/sslyze/
stackflow 	2.2af525d 	Universal stack-based buffer overfow exploitation tool. 	https://github.com/d4rkcat/stackflow
starttls-mitm 	7.b257756 	A mitm proxy that will transparently proxy and dump both plaintext and TLS traffic. 	https://github.com/ipopov/starttls-mitm
subbrute 	58.ff00d72 	A python subdomain bruteforce tool for pentesters. 	https://github.com/TheRook/subbrute
sulley 	1.0.cb5e62c 	A pure-python fully automated and unattended fuzzing framework. 	https://github.com/OpenRCE/sulley/
svn-extractor 	28.3af00fb 	A simple script to extract all web resources by means of .SVN folder exposed over network. 	https://github.com/anantshri/svn-extractor
tckfc 	21.a32167e 	TrueCrypt key file cracker. 	https://github.com/Octosec/tckfc
tekdefense-automater 	58.a034193 	IP URL and MD5 OSINT Analysis 	https://github.com/1aN0rmus/TekDefense-Automater
tilt 	90.2bc2ef2 	An easy and simple tool implemented in Python for ip reconnaissance, with reverse ip lookup. 	https://github.com/AeonDave/tilt
tinfoleak 	3.6469eb3 	Get detailed information about a Twitter user activity. 	https://github.com/technoskald/tinfoleak/
tlsenum 	75.6618285 	A command line tool to enumerate TLS cipher-suites supported by a server. 	https://github.com/Ayrx/tlsenum
tlspretense 	0.6.2 	SSL/TLS client testing framework 	https://github.com/iSECPartners/tlspretense
topera 	19.3e230fd 	An IPv6 security analysis toolkit, with the particularity that their attacks can't be detected by Snort. 	https://github.com/toperaproject/topera
tsh-sctp 	2.850a2da 	An open-source UNIX backdoor. 	https://github.com/infodox/tsh-sctp
tunna 	14.953f745 	a set of tools which will wrap and tunnel any TCP communication over HTTP. It can be used to bypass network restrictions in fully firewalled environments. 	https://github.com/SECFORCE/Tunna
uefi-firmware-parser 	103.9d4d220 	Parse BIOS/Intel ME/UEFI firmware related structures: Volumes, FileSystems, Files, etc 	https://github.com/theopolis/uefi-firmware-parser
ufonet 	12.dc92621 	A tool designed to launch DDoS attacks against a target, using 'Open Redirect' vectors on third party web applications, like botnet. 	https://github.com/epsylon/ufonet
umap 	25.3ad8121 	The USB host security assessment tool. 	https://github.com/nccgroup/umap
unibrute 	1.b3fb4b7 	Multithreaded SQL union bruteforcer. 	https://github.com/GDSSecurity/Unibrute
unicorn 	12.fd8cd18 	A simple tool for using a PowerShell downgrade attack and inject shellcode straight into memory. 	https://github.com/trustedsec/unicorn
upnp-pentest-toolkit 	1.1 	UPnP Pentest Toolkit for Windows. 	https://github.com/nccgroup/UPnP-Pentest-Toolkit
usernamer 	7.813139d 	Pentest Tool to generate usernames/logins based on supplied names. 	https://github.com/jseidl/usernamer
v3n0m 	77.cdaf14e 	Popular linux version of Balthazar/NovaCygni's 'v3n0m' scanner. Searches 18k+ dorks over 13 search engines. 	https://github.com/v3n0m-Scanner/V3n0M-Scanner
vane 	1853.9cea741 	A vulnerability scanner which checks the security of WordPress installations using a black box approach. 	https://github.com/delvelabs/vane
vbrute 	1.11dda8b 	Virtual hosts brute forcer. 	https://github.com/nccgroup/vbrute
vega 	1.0 	An open source platform to test the security of web applications 	https://github.com/subgraph/Vega/wiki
veil 	307.63130a3 	A tool designed to generate metasploit payloads that bypass common anti-virus solutions. 	https://github.com/veil-evasion/Veil
viper 	633.e35789e 	A Binary analysis framework. 	https://github.com/botherder/viper
vlan-hopping 	14.b944d17 	Easy 802.1Q VLAN Hopping 	https://github.com/nccgroup/vlan-hopping
waidps 	16.ff8d270 	Wireless Auditing, Intrusion Detection & Prevention System. 	https://github.com/SYWorks/waidps
webhandler 	321.bcd2263 	A handler for PHP system functions & also an alternative 'netcat' handler. 	https://github.com/lnxg33k/webhandler
webpwn3r 	35.3fb27bb 	A python based Web Applications Security Scanner. 	https://github.com/zigoo0/webpwn3r
webrute 	3.3 	Web server directory brute forcer. 	https://github.com/BlackArch/webrute
webshells 	1.c6a790b 	Web Backdoors. 	https://github.com/BlackArch/webshells
websockify 	0.6.0 	WebSocket to TCP proxy/bridge. 	http://github.com/kanaka/websockify
weevely 	1.1 	Stealth tiny web shell 	http://epinna.github.io/Weevely/
wfuzz 	32.db8d1f6 	Utility to bruteforce web applications to find their not linked resources. 	https://github.com/xmendez/wfuzz
wifi-monitor 	0.r22.71340a3 	Prints the IPs on your local network that're sending the most packets 	https://github.com/DanMcInerney/wifi-monitor
wificurse 	0.3.9 	WiFi jamming tool. 	https://github.com/oblique/wificurse
wifijammer 	52.20c9b70 	A python script to continuosly jam all wifi clients within range. 	https://github.com/DanMcInerney/wifijammer
wifiphisher 	71.dc13fe8 	Fast automated phishing attacks against WPA networks. 	https://github.com/sophron/wifiphisher
wifitap 	2b16088 	WiFi injection tool through tun/tap device. 	https://github.com/GDSSecurity/wifitap
wig 	365.e56b2bf 	WebApp Information Gatherer. 	https://github.com/jekyc/wig
wikigen 	8.348aa99 	A script to generate wordlists out of wikipedia pages. 	https://github.com/zombiesam/wikigen
wireless-ids 	24.b132071 	Ability to detect suspicious activity such as (WEP/WPA/WPS) attack by sniffing the air for wireless packets. 	https://github.com/SYWorks/wireless-ids
wordpot 	37.e42eeda 	A Wordpress Honeypot. 	https://github.com/gbrindisi/wordpot
wpa-bruteforcer 	4.d5f8586 	Attacking WPA/WPA encrypted access point without client. 	https://github.com/SYWorks/wpa-bruteforcer
wpbf 	7.11b6ac1 	Multithreaded WordPress brute forcer. 	https://github.com/dejanlevaja/wpbf
xcavator 	5.bd9e2d8 	Man-In-The-Middle and phishing attack tool that steals the victim's credentials of some web services like Facebook. 	https://github.com/nccgroup/xcavator
xortool 	0.96 	A tool to analyze multi-byte xor cipher. 	https://github.com/hellman/xortool/
xssless 	35.9eee648 	An automated XSS payload generator written in python. 	https://github.com/mandatoryprogrammer/xssless
xssscan 	17.7f1ea90 	Command line tool for detection of XSS attacks in URLs. Based on ModSecurity rules from OWASP CRS. 	https://github.com/gwroblew/detectXSSlib
xsssniper 	0.9 	An automatic XSS discovery tool 	https://github.com/gbrindisi/xsssniper
xssya 	13.15ebdfe 	A Cross Site Scripting Scanner & Vulnerability Confirmation. 	https://github.com/yehia-mamdouh/XSSYA
yaaf 	7.4d6273a 	Yet Another Admin Finder. 	https://github.com/Plasticoo/YAAF
yara 	3.3.0 	A malware identification and classification tool. 	https://plusvic.github.io/yara/
zackattack 	5.1f96c14 	A new tool set to do NTLM Authentication relaying unlike any other tool currently out there. 	https://github.com/urbanesec/ZackAttack/
https://github.com/WeeveFerrelaine
Forge Mod Loader (FML) | Version: 7.10.85.1284 | Loaded From forge-1.7.10-10.13.2.1284-universal.jar on 1.7.10-10.13.2.1284 | Website: https://github.com/MinecraftForge/FML/wiki
BetterChests (BetterChests) | Version: 1.1.1.8 | Loaded From BetterChests-1.7.10-1.1.1.8.jar on mods | Website: https://github.com/Aroma1997/BetterChests
Forge Multipart (ForgeMultipart) | Version: 1.1.0.314 | Loaded From ForgeMultipart-1.7.10-1.1.0.314-universal.jar on 1.7.10 | Website: https://github.com/Chicken-Bones/ForgeMultipart
Compact Machines (CompactMachines) | Version: 1.7.10-1.13 | Loaded From compactmachines-1.7.10-1.13.jar on mods | Website: https://github.com/thraaawn/CompactMachines
Cookie Core (cookiecore) | Version: 1.3.0 | Loaded From cookiecore-1.3.0.jar on mods | Website: https://github.com/Ephys/CookieCore/releases
EnderTech (EnderTech) | Version: 1.7.10-0.3.0.364 | Loaded From EnderTech-1.7.10-0.3.0.364.jar on mods | Website: https://github.com/Drayshak/EnderTech
ExtraCells (extracells) | Version: 2.2.24 | Loaded From ExtraCells-1.7.10-2.2.24b44.jar on mods | Website: http://m3gafr3ak.github.io/ExtraCells/
Flaxbeard's Steam Power (Steamcraft) | Version: 0.27.4 | Loaded From FlaxbeardsSteamPower-1.7.10-0.27.4.jar on mods | Website: https://github.com/Flaxbeard/Flaxbeards-Steam-Power
Mantle (Mantle) | Version: 1.7.10-0.3.2.jenkins184 | Loaded From Mantle-1.7.10-0.3.2.jar on mods | Website: https://github.com/SlimeKnights/Mantle
Inventory Tweaks (inventorytweaks) | Version: 1.58-147-645ca10 | Loaded From InventoryTweaks-1.58-147.jar on mods | Website: https://github.com/Kobata/inventory-tweaks
QuarryPlus (QuarryPlus) | Version: 2.0.1 | Loaded From QuarryPlus-1.7.10-2.0.1.jar on mods | Website: https://github.com/yogpstop/QuarryPlus
Tails (Tails) | Version: 1.7.10-1.2.3 | Loaded From Tails-1.7.10-1.2.3.jar on mods | Website: https://github.com/kihira
Thaumic Exploration (ThaumicExploration) | Version: 0.6.0 | Loaded From ThaumicExploration-1.7.10-1.1-34.jar on mods | Website: https://github.com/Flaxbeard/Thaumic_Exploration
Minecraft Multipart Plugin (McMultipart) | Version: 1.1.0.314 | Loaded From ForgeMultipart-1.7.10-1.1.0.314-universal.jar on 1.7.10 | Website: https://github.com/Chicken-Bones/ForgeMultipart
Forge Microblocks (ForgeMicroblock) | Version: 1.1.0.314 | Loaded From ForgeMultipart-1.7.10-1.1.0.314-universal.jar on 1.7.10 | Website: https://github.com/Chicken-Bones/ForgeMultipart
What you can do is decouple the front-end and backend (https://github.com/SpaceCapsule/packmeteor) and write your own DDP server if you don't want to run meteor on backend but want to talk over sockets the meteor way. That'll actually make your life easier. Making the mongo collection reactive without using meteor on backend might (or might not) be hard, I can't comment on that; never tried it. Read this for an overview of how meteor does it: https://www.meteor.com/livequery and read the packages responsible for doing this.
2015-02-23 16:04:33 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/ModMobSupport.json
2015-02-23 16:04:34 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/NBTStripper.json
    var postsResponse = Meteor.http.call("GET","https://raw.githubusercontent.com/djfrsn/frontend-interview-test-long/master/codetest/data/posts.json");
    var usersResponse = Meteor.http.call("GET","https://raw.githubusercontent.com/djfrsn/frontend-interview-test-long/master/codetest/data/users.json");
package io.github.LGCMcLovin.msCulinaryArts;
2015-02-23 19:15:09 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
-Link to the source code: can be found at the github link on this page.::::::::::::::
/usr/share/ceylon/1.1.0/repo/com/redhat/ceylon/typechecker/1.1.0/com.redhat.ceylon.typechecker-1.1.0.jar:/usr/share/ceylon/1.1.0/repo/org/antlr/stringtemplate/3.2.1/org.antlr.stringtemplate-3.2.1.jar:/usr/share/ceylon/1.1.0/repo/org/slf4j/api/1.6.1/org.slf4j.api-1.6.1.jar:/usr/share/ceylon/1.1.0/repo/net/minidev/json-smart/1.1.1/net.minidev.json-smart-1.1.1.jar:/usr/share/ceylon/1.1.0/repo/com/redhat/ceylon/compiler/java/1.1.0/com.redhat.ceylon.compiler.java-1.1.0.jar:/usr/share/ceylon/1.1.0/repo/com/redhat/ceylon/common/1.1.0/com.redhat.ceylon.common-1.1.0.jar:/usr/share/ceylon/1.1.0/repo/com/redhat/ceylon/compiler/js/1.1.0/com.redhat.ceylon.compiler.js-1.1.0.jar:/usr/share/ceylon/1.1.0/repo/org/apache/httpcomponents/httpcore/4.3.2/org.apache.httpcomponents.httpcore-4.3.2.jar:/usr/share/ceylon/1.1.0/repo/org/apache/commons/codec/1.8/org.apache.commons.codec-1.8.jar:/usr/share/ceylon/1.1.0/repo/com/github/rjeschke/txtmark/0.11/com.github.rjeschke.txtmark-0.11.jar:/home/homer/workspace/saloon/modules/default/default.car:/usr/share/ceylon/1.1.0/repo/org/jboss/jandex/1.0.3.Final/org.jboss.jandex-1.0.3.Final.jar:/usr/share/ceylon/1.1.0/repo/org/antlr/antlr/2.7.7/org.antlr.antlr-2.7.7.jar:/usr/share/ceylon/1.1.0/repo/org/jboss/modules/1.3.3.Final/org.jboss.modules-1.3.3.Final.jar:/usr/share/ceylon/1.1.0/repo/com/redhat/ceylon/module-resolver/1.1.0/com.redhat.ceylon.module-resolver-1.1.0.jar:/usr/share/ceylon/1.1.0/repo/com/redhat/ceylon/maven-support/2.0/com.redhat.ceylon.maven-support-2.0.jar:/usr/share/ceylon/1.1.0/repo/com/github/lookfirst/sardine/5.1/com.github.lookfirst.sardine-5.1.jar:/usr/share/ceylon/1.1.0/repo/org/apache/commons/logging/1.1.1/org.apache.commons.logging-1.1.1.jar:/usr/share/ceylon/1.1.0/repo/org/apache/httpcomponents/httpclient/4.3.2/org.apache.httpcomponents.httpclient-4.3.2.jar:/usr/share/ceylon/1.1.0/repo/ceylon/language/1.1.0/ceylon.language-1.1.0.car:/usr/share/ceylon/1.1.0/repo/org/antlr/runtime/3.4/org.antlr.runtime-3.4.jar:/usr/share/ceylon/1.1.0/repo/org/tautua/markdownpapers/core/1.2.7/org.tautua.markdownpapers.core-1.2.7.jar::::::::::::::
- edit-in-place is probably not possible without heavy coding, since it requires relying on github's code
- same for toolbar, for the same reason (github's code)
The url of the template: https://github.com/cyngn/android_packages_themes_Template
Please report this error: https://github.com/tomaka/glium/issues', /home/douglas/.cargo/git/checkouts/glium-cee1c79709e4d1bd/master/src/lib.rs:1053::::::::::::::
2015-02-23 16:52:45 [INFORMATION] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
	"github.com/thoj/go-ircevent"
https://github.com/FPtje/DarkRP/blob/master/gamemode/config/addentities.lua
	at com.github.joelittlejohn.embedmongo.StartEmbeddedMongoMojo.execute(StartEmbeddedMongoMojo.java:271)
2015-02-22 18:14:02 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
2015-02-22 18:16:03 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
source=($pkgname-$pkgver.tar.gz::https://github.com/goetzc/$pkgname/archive/$pkgver.tar.gz)
// @downloadURL http://github.com/PortalGod/fpautoupdate/raw/master/FP_Auto_Update.user.js
2015-02-22 18:05:51 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/ModMobSupport.json
2015-02-22 18:05:53 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/NBTStripper.json
23.02 13:09:39 [Server] INFO at com.github.games647.scoreboardstats.ScoreboardStats.onEnable(ScoreboardStats.java:131) [ScoreboardStats.jar:0.8.5]
23.02 13:09:39 [Server] INFO at com.github.games647.scoreboardstats.SbManager.<init>(SbManager.java:44) [ScoreboardStats.jar:0.8.5]
23.02 13:09:39 [Server] INFO at com.github.games647.scoreboardstats.variables.ReplaceManager.<init>(ReplaceManager.java:61) [ScoreboardStats.jar:0.8.5]
23.02 13:09:39 [Server] INFO at com.github.games647.scoreboardstats.variables.ReplaceManager.addDefaultReplacer(ReplaceManager.java:176) [ScoreboardStats.jar:0.8.5]
23.02 13:09:39 [Server] INFO at com.github.games647.scoreboardstats.variables.ReplaceManager.registerDefault(ReplaceManager.java:192) [ScoreboardStats.jar:0.8.5]
local releases = downloadJSON('https://api.github.com/repos/'..Settings.GitHubUsername..'/'..Settings.GitHubRepoName..'/releases')
local refs = downloadJSON('https://api.github.com/repos/'..Settings.GitHubUsername..'/'..Settings.GitHubRepoName..'/git/refs/tags/'..latestReleaseTag)
local tree = downloadJSON('https://api.github.com/repos/'..Settings.GitHubUsername..'/'..Settings.GitHubRepoName..'/git/trees/'..latestReleaseSha..'?recursive=1').tree
      f = http.get(('https://raw.github.com/'..Settings.GitHubUsername..'/'..Settings.GitHubRepoName..'/'..latestReleaseTag..Settings.InstallPath..v.path):gsub(' ','%%20'))
      error('Downloading failed, try again. '..('https://raw.github.com/'..Settings.GitHubUsername..'/'..Settings.GitHubRepoName..'/'..latestReleaseTag..Settings.InstallPath..v.path):gsub(' ','%%20'))
2015-02-23 15:16:18 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
$git clone https://github.com/....
$git clone http://github.com/...::::::::::::::
2015-02-23 11:59:55 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/ModMobSupport.json
2015-02-23 11:59:57 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/NBTStripper.json
2015-02-23 12:02:52 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/ModMobSupport.json
2015-02-23 12:02:54 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/NBTStripper.json
        // https://github.com/angular/angular.js/issues/9953
        // https://github.com/angular/angular.js/issues/9982
        // https://github.com/angular/angular.js/issues/10205
2015-02-22 18:45:59 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/ModMobSupport.json
2015-02-22 18:46:00 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/NBTStripper.json
curl https://api.github.com/repos/$2/$3 | grep size
curl https://api.github.com/repos/Marijnh/CodeMirror | grep size
<label class="mom_tiny_icon"><input type="radio" name="mom_menu_item_icon" value="momizat-icon-github"><i class="momizat-icon-github"></i></label>
<label class="mom_tiny_icon"><input type="radio" name="mom_menu_item_icon" value="momizat-icon-github2"><i class="momizat-icon-github2"></i></label>
<label class="mom_tiny_icon"><input type="radio" name="mom_menu_item_icon" value="momizat-icon-github3"><i class="momizat-icon-github3"></i></label>
<label class="mom_tiny_icon"><input type="radio" name="mom_menu_item_icon" value="momizat-icon-github4"><i class="momizat-icon-github4"></i></label>
<label class="mom_tiny_icon"><input type="radio" name="mom_menu_item_icon" value="momizat-icon-github5"><i class="momizat-icon-github5"></i></label>
<label class="mom_tiny_icon"><input type="radio" name="mom_menu_item_icon" value="enotype-icon-github"><i class="enotype-icon-github"></i></label>
<label class="mom_tiny_icon"><input type="radio" name="mom_menu_item_icon" value="enotype-icon-github2"><i class="enotype-icon-github2"></i></label>
<label class="mom_tiny_icon"><input type="radio" name="mom_menu_item_icon" value="fa-icon-github-sign"><i class="fa-icon-github-sign"></i></label>
<label class="mom_tiny_icon"><input type="radio" name="mom_menu_item_icon" value="fa-icon-github"><i class="fa-icon-github"></i></label>
<label class="mom_tiny_icon"><input type="radio" name="mom_menu_item_icon" value="fa-icon-github-alt"><i class="fa-icon-github-alt"></i></label>
  116 kb   com/github/lookfirst/sardine/5.1/com.github.lookfirst.sardine-5.1.jar
   50 kb   com/github/rjeschke/txtmark/0.11/com.github.rjeschke.txtmark-0.11.jar
 github <user> <repo> [path] [remote path] [branch]
 Example: github johnsmith hello-world . foo
	local response = http.get("https://api.github.com/repos/"..gUser.."/"..gRepo.."/contents/"..path.."/?ref="..gBranch)
			checkPath = http.get("https://raw.github.com/"..gUser.."/"..gRepo.."/"..gBranch.."/"..fPath[i])
				fileList.files[path] = {"https://raw.github.com/"..gUser.."/"..gRepo.."/"..gBranch.."/"..fPath[i],fName[i]}
				fileList.dirs[path] = {"https://raw.github.com/"..gUser.."/"..gRepo.."/"..gBranch.."/"..fPath[i],fName[i]}
	https://github.com/Foxboron
https://gist.github.com/6efd1c5ec892a7de9905::::::::::::::
                "title": "https://github.com",
                    "url": "https://github.com/",
                            "value": "default-src *; script-src assets-cdn.github.com collector-cdn.github.com; object-src assets-cdn.github.com; style-src 'self' 'unsafe-inline' 'unsafe-eval' assets-cdn.github.com; img-src 'self' data: assets-cdn.github.com identicons.github.com www.google-analytics.com collector.githubapp.com *.githubusercontent.com *.gravatar.com *.wp.com; media-src 'none'; frame-src 'self' render.githubusercontent.com gist.github.com www.youtube.com player.vimeo.com checkout.paypal.com; font-src assets-cdn.github.com; connect-src 'self' ghconduit.com:25035 live.github.com wss://live.github.com uploads.github.com www.google-analytics.com s3.amazonaws.com"
                    "url": "https://assets-cdn.github.com/assets/github-05d3ac147405e5932c9a353ab0c2f804a68056d6023d99e0ee4f1628b65868f1.css",
                            "value": "https://github.com/"
                            "value": "https://github.com"
                    "url": "https://assets-cdn.github.com/assets/github2-a34ea5f36919335b720f812ba66ac87065665d8d6d759d6f237e7129ba34edb6.css",
                            "value": "https://github.com/"
                            "value": "https://github.com"
                    "url": "https://assets-cdn.github.com/images/modules/aws/cloud-1.png",
                            "value": "https://github.com/"
                            "value": "https://github.com"
                    "url": "https://assets-cdn.github.com/images/modules/aws/cloud-2.png",
                            "value": "https://github.com/"
                            "value": "https://github.com"
                    "url": "https://assets-cdn.github.com/images/modules/aws/cloud-3.png",
                            "value": "https://github.com/"
                            "value": "https://github.com"
                    "url": "https://assets-cdn.github.com/images/modules/aws/cloud-4.png",
                            "value": "https://github.com/"
                            "value": "https://github.com"
                    "url": "https://assets-cdn.github.com/images/modules/aws/cloud-5.png",
                            "value": "https://github.com/"
                            "value": "https://github.com"
                    "url": "https://assets-cdn.github.com/images/modules/aws/cloud-6.png",
                            "value": "https://github.com/"
                            "value": "https://github.com"
                    "url": "https://assets-cdn.github.com/images/modules/home/ghfm.png?v=2",
                            "value": "https://github.com/"
                            "value": "https://github.com"
                    "url": "https://assets-cdn.github.com/images/modules/home/gh-windows-app.png",
                            "value": "https://github.com/"
                            "value": "https://github.com"
                    "url": "https://assets-cdn.github.com/assets/frameworks-996268c2962f947579cb9ec2908bd576591bc94b6a2db184a78e78815022ba2c.js",
                            "value": "https://github.com/"
                            "value": "https://github.com"
                            "value": "https://github.com"
                            "value": "https://github.com"
                    "url": "https://assets-cdn.github.com/assets/github-0a28663e8067002ef3d5e903b346b84315474f9f610b826042b8dfe61f623fd1.js",
                            "value": "https://github.com/"
                            "value": "https://github.com"
                            "value": "https://github.com"
                            "value": "https://github.com"
                    "url": "https://assets-cdn.github.com/assets/octicons/octicons/octicons-192e5fbb927be7cdb8bdfa0ecb98d3574bd395e58f9d00e5dcdfce5bc9660ac0.woff",
                            "value": "https://assets-cdn.github.com/assets/github-05d3ac147405e5932c9a353ab0c2f804a68056d6023d99e0ee4f1628b65868f1.css"
                            "value": "https://github.com"
                            "value": "https://github.com"
                            "value": "https://github.com"
                    "url": "https://assets-cdn.github.com/images/modules/home/octicons-bg.png",
                            "value": "https://assets-cdn.github.com/assets/github-05d3ac147405e5932c9a353ab0c2f804a68056d6023d99e0ee4f1628b65868f1.css"
                            "value": "https://github.com"
                    "url": "https://assets-cdn.github.com/images/modules/aws/aws-bg.jpg",
                            "value": "https://assets-cdn.github.com/assets/github-05d3ac147405e5932c9a353ab0c2f804a68056d6023d99e0ee4f1628b65868f1.css"
                            "value": "https://github.com"
                    "url": "https://collector-cdn.github.com/assets/api.js",
                            "value": "https://github.com/"
                    "url": "https://www.google-analytics.com/r/collect?v=1&_v=j30&a=589979574&t=pageview&_s=1&dl=https%3A%2F%2Fgithub.com%2F&ul=it&de=UTF-8&dt=GitHub%20%C2%B7%20Build%20software%20better%2C%20together.&sd=24-bit&sr=1366x768&vp=1020x2754&je=1&fl=15.0%20r0&_u=eACAAAQAM~&jid=198831123&cid=820465093.1424272610&tid=UA-3769691-2&_r=1&cd1=Logged%20Out&z=1873604615",
                            "value": "https://github.com/"
                            "value": "https://github.com/"
                    "url": "https://www.google-analytics.com/collect?v=1&_v=j30&a=589979574&t=event&_s=2&dl=https%3A%2F%2Fgithub.com%2F&ul=it&de=UTF-8&dt=GitHub%20%C2%B7%20Build%20software%20better%2C%20together.&sd=24-bit&sr=1366x768&vp=1020x2754&je=1&fl=15.0%20r0&ec=Rails&ea=view&el=dashboard%23index&_u=eACAAAQEM~&jid=&cid=820465093.1424272610&tid=UA-3769691-2&cd1=Logged%20Out&z=1050774221",
                            "value": "https://github.com/"
                            "value": "https://github.com/"
                    "url": "https://collector.githubapp.com/github/page_view?dimensions[page]=https%3A%2F%2Fgithub.com%2F&dimensions[title]=GitHub%20%C2%B7%20Build%20software%20better%2C%20together.&dimensions[referrer]=&dimensions[user_agent]=Mozilla%2F5.0%20(X11%3B%20Linux%20x86_64)%20AppleWebKit%2F537.36%20(KHTML%2C%20like%20Gecko)%20Chrome%2F38.0.2125.104%20Safari%2F537.36&dimensions[screen_resolution]=1366x768&dimensions[pixel_ratio]=1&dimensions[browser_resolution]=0x0&dimensions[tz_seconds]=3600&dimensions[timestamp]=1424276943010&dimensions[request_id]=971DE701%3A72C6%3A1F428F96%3A54E4BE7D&&measures[performance_timing]=1-360-54--2231-2226-2226-530-54-38-35---0---360-658-527-185--&&&dimensions[cid]=1830442334.1424272610",
                            "value": "https://github.com/"
                            "value": "https://github.com/"
2015-02-23 12:32:15 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
2015-02-23 16:37:03 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/ModMobSupport.json
2015-02-23 16:37:04 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/NBTStripper.json
2015-02-23 20:06:50 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
http.request("https://raw.github.com/Kristaps220/PNearby-Files-LUA/master/PNearby%20V1.1")
   print("Failed to connect to github. Download newest version automatically at ComputerCraft forums PNearby topic")
http.request("https://raw.github.com/Kristaps220/PNearby-Files-LUA/master/updateAvailable")
   print("Failed to connect to github. Download newest version automatically at ComputerCraft forums PNearby topic. ")
2015-02-22 20:35:08 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
2015-02-23 09:21:25 [FINE] [ForgeModLoader] Identified an FMLMod type mod com.github.AbrarSyed.secretroomsmod.common.SecretRooms
2015-02-22 17:06:00 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/ModMobSupport.json
2015-02-22 17:06:01 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/NBTStripper.json
fileref.setAttribute('href', 'http://thevdude.github.io/stylesheets/mm.css');
( Please submit this report to https://github.com/TechnicPack/TechnicLauncher/issues )
GTGitErrorDomain, code: -12, description: "'https://github.com/name/git.git' is not a valid remote name." } }'
   repository:               https://github.com/lxc/lxc.git
X-Mailer: PHPMailer 5.2.9 (https://github.com/PHPMailer/PHPMailer/)
************* Module github_file_system
************* Module github_file_system_provider
************* Module new_github_file_system
2015-02-22 19:16:12 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
2015-02-23 19:41:58 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
https://github.com/suhailsherif/IITG-Transparent-Proxy/blob/master/redsocks/doc/socks4.protocol.txt
https://github.com/X-rus/xNet/blob/master/Net/~Proxy/HttpProxyClient.cs
2015-02-23 02:53:11 [INFOS] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/ModMobSupport.json
2015-02-23 02:53:12 [INFOS] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/NBTStripper.json
( Please submit this report to https://github.com/TechnicPack/TechnicLauncher/issues )
[07:02:16] [Spigot Watchdog Thread/ERROR]: 		com.github.websend.server.CommunicationServer.startServer(CommunicationServer.java:93)
[07:02:16] [Spigot Watchdog Thread/ERROR]: 		com.github.websend.server.CommunicationServer.run(CommunicationServer.java:42)
[07:02:16] [Spigot Watchdog Thread/ERROR]: 		com.github.websend.post.POSTHandlerThread.run(POSTHandlerThread.java:37)
[07:02:16] [Spigot Watchdog Thread/ERROR]: 		com.github.websend.post.POSTHandlerThread.run(POSTHandlerThread.java:37)
[07:02:16] [Spigot Watchdog Thread/ERROR]: 		com.github.websend.post.POSTHandlerThread.run(POSTHandlerThread.java:37)
[07:02:16] [Spigot Watchdog Thread/ERROR]: 		com.github.websend.post.POSTHandlerThread.run(POSTHandlerThread.java:37)
[07:02:16] [Spigot Watchdog Thread/ERROR]: 		com.github.websend.post.POSTHandlerThread.run(POSTHandlerThread.java:37)
// @require        https://raw.githubusercontent.com/ballparts/TagProReplays/master/jquery.js
// @require		   https://gist.githubusercontent.com/ballparts/6a4e635e83ba94f0077b/raw/ac84a0d5c172de5dd3285e3daefb93f24785dac9/ClassyWiggle.min.js
// @require        https://gist.githubusercontent.com/ballparts/6bb586a6ff3168607848/raw/eddfac3bf68b74f99a33b2feebc7a77a45149494/jquery.blockUI.js
2015-02-23 15:30:51 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/ModMobSupport.json
2015-02-23 15:30:53 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/NBTStripper.json
wget http://github.mtv.cloudera.com/gsohn/useful-jenkins/raw/master/test-reports/CM_Systest/pull_smoke_test_results.py
wget http://github.mtv.cloudera.com/gsohn/useful-jenkins/raw/master/test-reports/CM_Systest/key_value_commonality.pl
        'https://github.com/sivel/speedtest-cli')
"   https://github.com/Chewie/configs
<script src="http://cloud.github.com/downloads/processing-js/processing-js/processing-1.4.1.min.js"></script>
  head "https://github.com/official-stockfish/Stockfish.git"
  <project name="CyanogenMod/android_device_qcom_common" path="device/qcom/common" remote="github" revision="cm-11.0" />
  <project name="CyanogenMod/android_hardware_qcom_fm" path="hardware/qcom/fm" remote="github" />
  <project name="CyanogenMod/android_hardware_qcom_display-caf-new" path="hardware/qcom/display-caf-new" remote="github" />
  <project name="CyanogenMod/android_hardware_qcom_media-caf-new" path="hardware/qcom/media-caf-new" remote="github" />
  <project name="motog2014devteam/android_device_motorola_msm8226-common" path="device/motorola/msm8226-common" remote="github" revision="cm-11.0" />
  <project name="motog2014devteam/android_device_motorola_titan" path="device/motorola/titan" remote="github" revision="cm-11.0" />
  <project name="motog2014devteam/android_kernel_motorola_titan-OLD" path="kernel/motorola/titan" remote="github" revision="cm-11.0" />
  <project name="motog2014devteam/proprietary_vendor_motorola" path="vendor/motorola" remote="github" revision="cm-11.0" />
  <project name="motog2014devteam/buildscripts" path="buildscripts" remote="github" revision="cm-11.0" >
  <project path="prebuilts/gcc/linux-x86/arm/arm-eabi-4.8" name="SaberMod/arm-eabi-4.8" remote="github" revision="master" />
  <project path="prebuilts/gcc/linux-x86/arm/arm-linux-androideabi-4.8" name="SaberMod/arm-androideabi-4.8" remote="github" revision="master" />
: git config --file /opt/oe-repo/.repo/projects/meta-sdr.git/config --replace-all remote.balister.url git://github.com/balister/meta-sdr 1>| 2>|
git clone https://gist.github.com/9bdc50271afc49d33e35.git ./map
2015-02-22 21:08:42 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
// @require        https://raw.githubusercontent.com/ballparts/TagProReplays/master/jquery.js
// @require		   https://gist.githubusercontent.com/ballparts/6a4e635e83ba94f0077b/raw/ac84a0d5c172de5dd3285e3daefb93f24785dac9/ClassyWiggle.min.js
// @require        https://gist.githubusercontent.com/ballparts/6bb586a6ff3168607848/raw/eddfac3bf68b74f99a33b2feebc7a77a45149494/jquery.blockUI.js
1. Buka https://github.com/Noxwizard/dnscrypt-winclient
1. Buka https://github.com/alterstep/dnscrypt-osxclient
3. Kalo mau udah jadinya di sini https://github.com/alterstep/dnscrypt-osxclient/releases/
2015-02-22 18:47:30 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
2015-02-23 03:31:21.0694|INFO|thread:11|CommandLineHandler|Another app instance has asked us to clone this repo: 'https://github.com/theohawse/rockdiamond'
2015-02-23 03:31:21.3714|INFO|thread:12|StartupLogging| ***    Email support@github.com     ***
2015-02-23 03:31:21.4984|INFO|thread:12|StartupLogging| ActivationUri: https://github-windows.s3.amazonaws.com/GitHub.application
2015-02-23 03:31:55.7784|INFO|thread: 1|RepositoryHost|Log in from cache for login 'SiLeNTF1NISH' to host 'https://api.github.com/' SUCCEEDED
2015-02-23 03:32:30.0863|INFO|thread:28|ProcessWrapper|Starting: Process - FileName: 'C:\Users\Danny\AppData\Local\GitHub\PortableGit_c2ba306e536fdf878271f7fe636a147ff37326ad\bin\ssh-add.exe', Args: '"C:\Users\Danny\.ssh\github_rsa"', Working Directory: C:\Users\Danny\AppData\Local\Temp\
2015-02-23 03:32:51.0865|INFO|thread:11|CommandLineHandler|Another app instance has asked us to clone this repo: 'https://github.com/theohawse/rockdiamond'
2015-02-23 03:33:01.1931|INFO|thread: 1|RepositoryModel|Cloning repo https://github.com/theohawse/rockdiamond.git
2015-02-23 03:33:01.1931|INFO|thread: 1|GitClient|Cloning 'https://github.com/theohawse/rockdiamond.git' to 'rockdiamond' in directory 'C:\Users\Danny\Desktop
2015-02-23 03:33:01.2041|INFO|thread: 1|ProcessWrapper|Starting: Process - FileName: 'C:\Users\Danny\AppData\Local\GitHub\PortableGit_c2ba306e536fdf878271f7fe636a147ff37326ad\bin\git.exe', Args: 'clone --progress --recursive  --  "https://github.com/theohawse/rockdiamond.git" "rockdiamond" ', Working Directory: C:\Users\Danny\Desktop
curl https://raw.githubusercontent.com/creationix/nvm/v0.16.1/install.sh | bash
	_ "github.com/mattn/go-sqlite3"
GitHub: https://github.com/sandalle/minecraft_bigreactor_control
	https://github.com/sandalle/minecraft_bigreactor_control
	https://github.com/sandalle/minecraft_bigreactor_control
	Big Reactors API code: https://github.com/erogenousbeef/BigReactors/blob/master/erogenousbeef/bigreactors/common/multiblock/tileentity/TileEntityReactorComputerPort.java
  head "https://github.com/official-stockfish/Stockfish.git"
Vamos a la url: https://github.com/senko/python-video-converter
// @downloadURL https://github.com/Kurahen-Premium/Kurahen-Premium/raw/master/kurahenPremium.user.js
git -C C:somePath pull ssh://git@github.com/myaccount/myProject.git::::::::::::::
2015-02-23 06:33:49 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/Universal-Electricity/Universal-Electricity/master/capes/capes.txt
			- make this: http://mbostock.github.io/protovis/ex/splines.html
2015-02-22 20:13:12 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
filetype plugin on " Redundant? Got this from https://github.com/scrooloose/nerdcommenter
var CardData = Java.type("com.github.skiwi2.hearthmonitor.CardData");
2015-02-23 17:56:56 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/ModMobSupport.json
2015-02-23 17:56:57 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/NBTStripper.json
2015-02-23 18:03:04 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/ModMobSupport.json
2015-02-23 18:03:05 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/NBTStripper.json
    # "gist.github.com", "www.pastebin.com"
java.io.FileNotFoundException: https://raw.githubusercontent.com/CoFH/ThermalExpansion/master/VERSION
[21:01:45] [Client thread/INFO] [STDERR]: [java.lang.Throwable$WrappedPrintStream:println:-1]: java.io.FileNotFoundException: http://raw.githubusercontent.com/MrTJP/ProjectRed/master/resources/Changelog
2015-02-23 17:21:59 [INFOS] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/ModMobSupport.json
2015-02-23 17:22:00 [INFOS] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/NBTStripper.json
2015-02-23 17:56:08 [INFOS] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/ModMobSupport.json
2015-02-23 17:56:10 [INFOS] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/NBTStripper.json
2015-02-23 07:41:02 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
    // https://github.com/TalAter/annyang
http://eyeseast.github.io/visible-data/2013/08/28/responsive-charts-with-d3/::::::::::::::
2015-02-23 16:17:52 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
2015-02-23 16:20:49 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
www.cnn.com uses an invalid security certificate. The certificate is only valid for the following names: a.ssl.fastly.net, *.a.ssl.fastly.net, fast.wistia.com, purge.fastly.net, mirrors.fastly.net, *.imgix.net, *.parsecdn.com, *.fastssl.net, voxer.com, www.voxer.com, *.firebase.com, sites.yammer.com, sites.staging.yammer.com, *.skimlinks.com, *.skimresources.com, cdn.thinglink.me, *.fitbit.com, *.hosts.fastly.net, control.fastly.net, *.wikia-inc.com, *.perfectaudience.com, *.wikia.com, f.cloud.github.com, *.digitalscirocco.net, *.etsy.com, *.etsystatic.com, *.addthis.com, *.addthiscdn.com, fast.wistia.net, raw.github.com, www.userfox.com, *.assets-yammer.com, *.staging.assets-yammer.com, assets.huggies-cdn.net, api.kinja.com, orbit.shazamid.com, about.jstor.org, *.global.ssl.fastly.net, web.voxer.com, pypi.python.org, *.12wbt.com, www.holderdeord.no, secured.indn.infolinks.com, play.vidyard.com, play-staging.vidyard.com, secure.img.wfrcdn.com, secure.img.josscdn.com, *.gocardless.com, widgets.pinterest.com, *.7digital.com, *.7static.com, p.datadoghq.com, *.plan3.se, new.mulberry.com, www.safariflow.com, cdn.contentful.com, tools.fastly.net, *.huevosbuenos.com, *.goodeggs.com, *.fastly.picmonkey.com, *.cdn.whipplehill.net, *.whipplehill.net, cdn.media34.whipplehill.net, cdn.media56.whipplehill.net, cdn.media78.whipplehill.net, cdn.media910.whipplehill.net, *.modcloth.com, *.disquscdn.com, *.jstor.org, *.dreamhost.com, www.flinto.com, *.chartbeat.com, *.hipmunk.com, content.beaverbrooks.co.uk, secure.common.csnstores.com, *.vsco.co, www.joinos.com, staging-mobile-collector.newrelic.com, *.modcloth.net, *.foursquare.com, *.shazam.com, *.4sqi.net, *.metacpan.org, *.fastly.com, wikia.com, fastly.com, kinja.com, *.gadventures.com, www.gadventures.com.au, www.gadventures.co.uk, kredo.com, cdn-tags.brainient.com, my.billspringapp.com, rvm.io::::::::::::::
https://github.com/jdlehman/prog_lang_proj/blob/master/parser/gee.py::::::::::::::
2015-02-22 18:09:16 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
2015-02-23 10:31:11 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
// REMEMBER TO INSTALL LiquidCrystal_I2C.h in your ARDUINO library folder: https://github.com/kiyoshigawa/LiquidCrystal_I2C
  // This uses the LiquidTWI2 library v1.2.3 or later ( https://github.com/lincomatic/LiquidTWI2 )
  // This uses the LiquidTWI2 library v1.2.3 or later ( https://github.com/lincomatic/LiquidTWI2 )
[23.02.2015 15:23:27] Bad response from server: (200 [parsererror,getplugins]) <br /> <b>Notice</b>: unserialize(): Error at offset 204 of 355 bytes in <b>/etc/MySB/web/rutorrent/php/cache.php</b> on line <b>65</b><br /> theWebUI.deltaTime = 0; theWebUI.showFlags = 255; theURLs.XMLRPCMountPoint = '/CAPTAINTIB'; theWebUI.systemInfo = {}; theWebUI.systemInfo.php = { canHandleBigFiles : true }; theWebUI.systemInfo.rTorrent = { started: true, iVersion : 2308, version : '0.9.4', libVersion : '0.13.4', apiVersion : 8 }; (function () { var plugin = new rPlugin( 'loginmgr',3.6,'Novik','This plugin is used to login to torrent sites in cases where cookies fail.',256,'http://code.google.com/p/rutorrent/wiki/PluginLoginMgr' ); theWebUI.theAccounts = {'BitGAMER': { login: "", password: "", enabled: 0, auto: 0 },'BitHDTV': { login: "", password: "", enabled: 0, auto: 0 },'BlackcatsGames': { login: "", password: "", enabled: 0, auto: 0 },'BroadcasThe': { login: "", password: "", enabled: 0, auto: 0 },'FtN': { login: "", password: "", enabled: 0, auto: 0 },'HDDream': { login: "", password: "", enabled: 0, auto: 0 },'ILoveTorrents': { login: "", password: "", enabled: 0, auto: 0 },'ImmortalSeed': { login: "", password: "", enabled: 0, auto: 0 },'LostFilm': { login: "", password: "", enabled: 0, auto: 0 },'NNMClub': { login: "", password: "", enabled: 0, auto: 0 },'NovaFilm': { login: "", password: "", enabled: 0, auto: 0 },'RUTracker': { login: "", password: "", enabled: 0, auto: 0 },'TVTorrents': { login: "", password: "", enabled: 0, auto: 0 },'TorrentDamage': { login: "", password: "", enabled: 0, auto: 0 },'TorrentLeech': { login: "", password: "", enabled: 0, auto: 0 },'Torrentech': { login: "", password: "", enabled: 0, auto: 0 },'WhatCD': { login: "", password: "", enabled: 0, auto: 0 },'jpopsuki': { login: "", password: "", enabled: 0, auto: 0 }}; plugin.loadLang(); plugin.loadMainCSS(); if(plugin.canChangeOptions()) { plugin.accaddAndShowSettings = theWebUI.addAndShowSettings; theWebUI.addAndShowSettings = function(arg) { if(plugin.enabled) { $.each( theWebUI.theAccounts, function(name,val) { $('#'+name+'_lmenabled').prop("checked", (val.enabled==1)); $('#'+name+'_lmlogin').val(val.login); $('#'+name+'_lmauto').val(val.auto); $('#'+name+'_lmpassword').val(val.password); $('#'+name+'_lmenabled').change(); }); } plugin.accaddAndShowSettings.call(theWebUI,arg); } plugin.accWasChanged = function() { var ret = false; $.each( theWebUI.theAccounts, function(name,val) { if( ($('#'+name+'_lmenabled').prop("checked") ^ val.enabled) || ($('#'+name+'_lmauto').val()!=val.auto) || ($('#'+name+'_lmlogin').val()!=val.login) || ($('#'+name+'_lmpassword').val()!=val.password)) { ret = true; return(false); } }); return(ret); } plugin.accSettings = theWebUI.setSettings; theWebUI.setSettings = function() { plugin.accSettings.call(this); if(plugin.enabled && plugin.accWasChanged()) this.request("?action=setacc"); } rTorrentStub.prototype.setacc = function() { var s = ''; $.each( theWebUI.theAccounts, function(name,val) { s+=("&"+name+"_enabled="+($('#'+name+'_lmenabled').prop("checked") ? 1 : 0)+ "&"+name+"_auto="+$('#'+name+'_lmauto').val()+ "&"+name+"_login="+encodeURIComponent($.trim($('#'+name+'_lmlogin').val()))+ "&"+name+"_password="+encodeURIComponent($.trim($('#'+name+'_lmpassword').val()))); }); this.content = "mode=set"+s; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/loginmgr/action.php"; this.dataType = "script"; } } plugin.onLangLoaded = function() { var s = ''; $.each( theWebUI.theAccounts, function(name,val) { s+="<fieldset>"+ "<legend>"+name+"</legend>"+ "<table>"+ "<tr>"+ "<td><input type='checkbox' id='"+name+"_lmenabled' onchange=\"linked(this, 0, ['"+name+"_lmlogin','"+name+"_lmpassword','"+name+"_lmauto']);\"/><label for='"+name+"_enabled' id='lbl_"+name+"_lmenabled'>"+theUILang.Enabled+"</label></td>"+ "</tr>"+ "<tr>"+ "<td><label id='lbl_"+name+"_lmlogin' for='"+name+"_lmlogin' class='disabled'>"+theUILang.accLogin+":</label></td>"+ "<td class=\"alr\"><input type='text' id='"+name+"_lmlogin' class='TextboxLarge' maxlength='32' disabled='true' /></td>"+ "</tr>"+ "<tr>"+ "<td><label id='lbl_"+name+"_lmpassword' for='"+name+"_lmpassword' class='disabled'>"+theUILang.accPassword+":</label></td>"+ "<td class=\"alr\"><input type='password' id='"+name+"_lmpassword' class='TextboxLarge' maxlength='32' disabled='true' /></td>"+ "</tr>"+ "<tr>"+ "<td><label id='lbl_"+name+"_lmauto' for='"+name+"_lmauto' class='disabled'>"+theUILang.accAuto+":</label></td>"+ "<td class=\"alr\"><select id='"+name+"_lmauto' class='TextboxLarge' maxlength='32' disabled='true'>"+ "<option value='0'>"+theUILang.acAutoNone+"</option>"+ "<option value='86400'>"+theUILang.acAutoDay+"</option>"+ "<option value='604800'>"+theUILang.acAutoWeek+"</option>"+ "<option value='2592000'>"+theUILang.acAutoMonth+"</option>"+ "</select></td>"+ "</tr>"+ "</table>"+ "</fieldset>"; }); this.attachPageToOptions($("<div>").attr("id","st_loginmgr").html(s)[0],theUILang.accAccounts); } plugin.onRemove = function() { this.removePageFromOptions("st_loginmgr"); } })();(function () { var plugin = new rPlugin( '_getdir',3.6,'dmrom','This plugin provides the possibility of comfortable navigation on a host file system.',256,'http://code.google.com/p/rutorrent/wiki/Plugin_getdir' ); plugin.loadMainCSS(); theWebUI.rDirBrowser = function( dlg_id, edit_id, btn_id, frame_id, withFiles ) { this.edit = $('#'+edit_id); this.btn = $('#'+btn_id); this.scriptName = withFiles ? "getfiles" : "getdirs"; if(!frame_id) frame_id = edit_id+"_frame"; var self = this; this.btn.val("...").on( "click", function() { return(self.toggle()); } ).addClass("browseButton"); this.edit.prop("autocomplete", "off").on( browser.isIE ? "focusin" : "focus", function() { return(self.hide()); } ).addClass("browseEdit"); this.frame = $("<iframe>").attr( {id: frame_id, src: ""} ).css({position: "absolute", width: 0, visibility: "hidden"}).addClass("browseFrame"); this.dlg_id = dlg_id; $('#'+dlg_id).append( this.frame ); } theWebUI.rDirBrowser.prototype.show = function() { var x = this.edit[0].offsetLeft; var y = this.edit[0].offsetTop + this.edit[0].offsetHeight; var parent = this.edit[0].offsetParent; while( parent && parent.id != this.dlg_id ) { x += parent.offsetLeft; y += parent.offsetTop; parent = parent.offsetParent; } this.frame.prop("src","plugins/_getdir/"+this.scriptName+".php?dir="+ encodeURIComponent(this.edit.val()) + "&btn=" + this.btn.attr("id") + "&edit=" + this.edit.attr("id") + "&frame=" + this.frame.attr("id") + "&time=" + (new Date()).getTime()).css( { visibility: "visible", left: x, top: y, width: this.edit.width()+2 }).show(); this.btn.val("X"); theDialogManager.bringToTop(this.frame.attr("id")); this.edit.prop( "read-only", true ); return(false); } theWebUI.rDirBrowser.prototype.hide = function() { if(this.frame.css("visibility")!="hidden") { this.btn.val("..."); this.edit.prop( "read-only", false ); this.frame.css( { visibility: "hidden" } ); this.frame.hide().css( {width: 0} ); } return(false); } theWebUI.rDirBrowser.prototype.toggle = function() { return((this.frame.css("visibility")!="hidden") ? this.hide() : this.show()); } plugin.onRemove = function() { $(".browseButton").remove(); $(".browseFrame").remove(); $(".browseEdit").prop("autocomplete", "on").off( browser.isIE ? "focusin" : "focus" ); } })();(function () { var plugin = new rPlugin( '_noty',3.6,'Novik','This plugin provides the notification functionality for other plugins.',384,'http://code.google.com/p/rutorrent/wiki/Plugin_noty' ); plugin.loadCSS('jquery.noty'); plugin.loadCSS('noty_theme_default'); injectScript(plugin.path+"jquery.noty.js"); })();(function () { var plugin = new rPlugin( 'logoff',1.3,'ScarS','The plug-in allows users to logoff from rutorrent.',256,'' ); plugin.logoffURL = 'http://google.com/';plugin.me = 'captaintib';plugin.users = [];plugin.allowSwitch = 0;plugin.abortMs = 1000;plugin.loadMainCSS(); plugin.loadLang(); plugin.onLangLoaded = function() { var before = (theWebUI.systemInfo.rTorrent.started ? "add" : "settings"); this.addButtonToToolbar("logoff", theUILang.logoff + " (" + plugin.me + ")", "theDialogManager.show('logoffDlg')", before); this.addSeparatorToToolbar(before); var multi = false; if (plugin.allowSwitch) { var options = ""; for (i in plugin.users) options += "<option value=\"" + plugin.users[i] + "\">" + plugin.users[i] + "</option>"; var switchUser = ""; if (options != "") { multi = true; switchUser = ""+ "<div>"+ "<label for=\"login.username\">" + theUILang.logoffUsername + ":</label> "+ "<select id=\"login.username\">"+ options+ "</select>"+ "</div>"+ "<div>"+ "<label for=\"login.password\">" + theUILang.logoffPassword + ":</label> "+ "<input type=\"password\" id=\"login.password\" class=\"Textbox\" /> <span id=\"logoffPassEmpty\"></span>"+ "</div>"; } } theDialogManager.make("logoffDlg", theUILang.logoff, "<div id=\"logoffDlg-content\">"+ (multi ? theUILang.logoffSwitchPrompt + switchUser : theUILang.logoffPrompt)+ "</div>"+ "<div id=\"logoffDlg-buttons\" class=\"aright buttons-list\">"+ (multi ? "<input type=\"button\" class=\"Button\" value=\"" + theUILang.logoffSwitch + "\" id=\"logoffSwitch\">" : "")+ "<input type=\"button\" class=\"Button\" value=\"" + theUILang.logoff + "\" id=\"logoffComplete\">"+ "<input type=\"button\" class=\"Button\" value=\"" + theUILang.Cancel + "\" id=\"logoffCancel\" onclick=\"theDialogManager.hide('logoffDlg');\">"+ "</div>", true); if (multi) { $($$("login.password")).keydown(function(event) { if ((event.which && event.which == 13) || (event.keyCode && event.keyCode == 13)) $("#logoffSwitch").trigger("click"); }); $("#logoffSwitch").click(function() { if ($($$("login.password")).val() == "") { $("#logoffPassEmpty").html(theUILang.logoffEmpty); return(false); } $("#logoffPassEmpty").html(""); $("#logoffSwitch").attr("disabled", "disabled"); try { if (browser.isFirefox) { var xmlhttp = new XMLHttpRequest(); xmlhttp.open("POST", document.location.href, true, $($$("login.username")).val(), $($$("login.password")).val()); xmlhttp.onreadystatechange = function() { if (this.readyState == 4) theWebUI.reload(); }; xmlhttp.send(null); } else { var xmlhttp = new XMLHttpRequest(); xmlhttp.open("POST", this.action, true, $($$("login.username")).val(), $($$("login.password")).val()); xmlhttp.onreadystatechange = function() { if (this.readyState == 4) { document.location = this.action; theWebUI.reload(); } }; xmlhttp.send(null); } } catch (e) { alert("Error: " + e); } }); } $("#logoffComplete").click(function() { $("#logoffComplete").attr("disabled", "disabled"); try { if (browser.isIE7up) { document.execCommand("ClearAuthenticationCache"); document.location = plugin.logoffURL; } else if (browser.isFirefox) { var xmlhttp = new XMLHttpRequest(); xmlhttp.open("POST", document.location.href, true, "logoff", "logoff"); xmlhttp.onreadystatechange = function() { if (this.readyState == 4) document.location = plugin.logoffURL; }; xmlhttp.send(null); if (browser.isFirefox3x) xmlhttp.abort(); } else { var xmlhttp = new XMLHttpRequest(); xmlhttp.open("POST", this.action, true, "logoff", "logoff"); xmlhttp.onreadystatechange = function() { if (this.readyState == 4) document.location = plugin.logoffURL; }; xmlhttp.send(null); window.logoffxmlhttp = xmlhttp; window.setTimeout("logoffxmlhttp.abort()", plugin.abortMs); } } catch (e) { alert("Error: " + e); } }); } plugin.onRemove = function() { theDialogManager.hide("logoffDlg"); this.removeSeparatorFromToolbar(theWebUI.systemInfo.rTorrent.started ? "add" : "settings"); this.removeButtonFromToolbar("logoff"); } })();(function () { var plugin = new rPlugin( 'autotools',3.6,'dmrom','This plugin provides some possibilities on automation.',256,'http://code.google.com/p/rutorrent/wiki/PluginAutotools' ); theWebUI.autotools = { EnableLabel: 0, LabelTemplate: '{DIR}', EnableMove: 0, FileOpType: 'Move', PathToFinished: '', EnableWatch: 0, PathToWatch: '', WatchStart: 0 }; plugin.loadLang(); if(plugin.canChangeOptions()) { plugin.loadMainCSS(); plugin.addAndShowSettings = theWebUI.addAndShowSettings; theWebUI.addAndShowSettings = function( arg ) { if(plugin.enabled) { $$('enable_label').checked = ( theWebUI.autotools.EnableLabel == 1 ); $$('label_template').value = theWebUI.autotools.LabelTemplate; linked( $$('enable_label'), 0, ['label_template'] ); $$('enable_move').checked = ( theWebUI.autotools.EnableMove == 1 ); $$('path_to_finished').value = theWebUI.autotools.PathToFinished; linked( $$('enable_move'), 0, ['path_to_finished', 'automove_browse_btn', 'fileop_type'] ); $$('fileop_type').value = theWebUI.autotools.FileOpType; $$('enable_watch').checked = ( theWebUI.autotools.EnableWatch == 1 ); $$('path_to_watch').value = theWebUI.autotools.PathToWatch; linked( $$('enable_watch'), 0, ['path_to_watch', 'autowatch_browse_btn', 'watch_start'] ); $$('watch_start').checked = ( theWebUI.autotools.WatchStart == 1 ); if(plugin.DirBrowser1) plugin.DirBrowser1.hide(); if(plugin.DirBrowser2) plugin.DirBrowser2.hide(); } plugin.addAndShowSettings.call(theWebUI,arg); } theWebUI.autotoolsWasChanged = function() { if( $$('enable_label').checked != ( theWebUI.autotools.EnableLabel == 1 ) ) return true; if( $$('label_template').value != theWebUI.autotools.LabelTemplate ) return true; if( $$('enable_move').checked != ( theWebUI.autotools.EnableMove == 1 ) ) return true; if( $$('path_to_finished').value != theWebUI.autotools.PathToFinished ) return true; if( $$('enable_watch').checked != ( theWebUI.autotools.EnableWatch == 1 ) ) return true; if( $$('path_to_watch').value != theWebUI.autotools.PathToWatch ) return true; if( $$('fileop_type').value != theWebUI.autotools.FileOpType ) return true; if( $$('watch_start').checked != ( theWebUI.autotools.WatchStart == 1 ) ) return true; return false; } plugin.setSettings = theWebUI.setSettings; theWebUI.setSettings = function() { plugin.setSettings.call(this); if( plugin.enabled && this.autotoolsWasChanged() ) this.request( "?action=setautotools" ); } rTorrentStub.prototype.setautotools = function() { this.content = "enable_label=" + ( $$('enable_label').checked ? '1' : '0' ) + "&label_template=" + $$('label_template').value + "&enable_move=" + ( $$('enable_move').checked ? '1' : '0' ) + "&path_to_finished=" + $$('path_to_finished').value + "&fileop_type=" + $$('fileop_type').value + "&enable_watch=" + ( $$('enable_watch').checked ? '1' : '0' ) + "&path_to_watch=" + $$('path_to_watch').value + "&watch_start=" + ( $$('watch_start').checked ? '1' : '0' ); this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/autotools/action.php"; this.dataType = "script"; } } plugin.onLangLoaded = function() { if(this.canChangeOptions()) { this.attachPageToOptions( $("<div>").attr("id","st_autotools").html( "<fieldset>"+ "<legend>"+ theUILang.autotools +"</legend>"+ "<table>"+ "<tr>"+ "<td>"+ "<input type='checkbox' id='enable_label' checked='false' "+ "onchange='linked(this, 0, [\"label_template\"]);' />"+ "<label for='enable_label'>"+ theUILang.autotoolsEnableLabel +"</label>"+ "</td>"+ "<td class='alr'>"+ "<input type='text' id='label_template' class='TextboxNormal' maxlength='100' />"+ "</td>"+ "</tr>"+ "<tr>"+ "<td colspan=2>"+ "<input type='checkbox' id='enable_move' checked='false' "+ "onchange='linked(this, 0, [\"path_to_finished\", \"automove_browse_btn\", \"fileop_type\", \"fileop_type\" ]);' />"+ "<label for='enable_move'>"+ theUILang.autotoolsEnableMove +"</label>"+ "</td>"+ "</tr>"+ "<tr>"+ "<td class='ctrls_level2' colspan=2>"+ "<label id='lbl_path_to_finished' for='path_to_finished' class='disabled' disabled='true'>"+ theUILang.autotoolsPathToFinished +":</label><br>"+ "<input type='text' id='path_to_finished' class='TextboxLarge' maxlength='100' />"+ "<input type='button' id='automove_browse_btn' class='Button' value='...' />"+ "<br><label id='lbl_fileop_type' for='fileop_type' class='disabled' disabled='true'>"+theUILang.autotoolsFileOpType+":</label>"+ "<select id='fileop_type' class='disabled' disabled='true'>"+ "<option value='Move'>"+theUILang.autotoolsFileOpMove+"</option>"+ "<option value='HardLink'>"+theUILang.autotoolsFileOpHardLink+"</option>"+ "<option value='Copy'>"+theUILang.autotoolsFileOpCopy+"</option>"+ "<option value='SoftLink'>"+theUILang.autotoolsFileOpSoftLink+"</option>"+ "</select>"+ "</td>"+ "</tr>"+ "<tr>"+ "<td colspan=2>"+ "<input type='checkbox' id='enable_watch' checked='false' "+ "onchange='linked(this, 0, [\"path_to_watch\", \"autowatch_browse_btn\",\"watch_start\"]);' />"+ "<label for='enable_watch'>"+ theUILang.autotoolsEnableWatch +"</label>"+ "</td>"+ "</tr>"+ "<tr>"+ "<td class='ctrls_level2' colspan=2>"+ "<label id='lbl_path_to_watch' for='path_to_watch' class='disabled' disabled='true'>"+ theUILang.autotoolsPathToWatch +":</label><br>"+ "<input type='text' id='path_to_watch' class='TextboxLarge' maxlength='100' />"+ "<input type='button' id='autowatch_browse_btn' class='Button' value='...' />"+ "<br><input type='checkbox' id='watch_start' checked='false' disabled='true'/>"+ "<label id='lbl_watch_start' for='watch_start' class='disabled'>"+ theUILang.autotoolsWatchStart +"</label>"+ "</td>"+ "</tr>"+ "</table>"+ "</fieldset>")[0], theUILang.autotools ); if(thePlugins.isInstalled("_getdir")) { this.DirBrowser1 = new theWebUI.rDirBrowser( 'st_autotools', 'path_to_finished', 'automove_browse_btn', 'automove_browse_frame' ); this.DirBrowser2 = new theWebUI.rDirBrowser( 'st_autotools', 'path_to_watch', 'autowatch_browse_btn', 'autowatch_browse_frame' ); } else { $('#automove_browse_btn').remove(); $('#autowatch_browse_btn').remove(); } } } plugin.onRemove = function() { this.removePageFromOptions( "st_autotools" ); } })();(function () { var plugin = new rPlugin( 'theme',3.6,'Novik','This plugin allows to change the UI theme to one of several provided themes.',256,'http://code.google.com/p/rutorrent/wiki/PluginTheme' ); theWebUI.theme = 'Oblivion';plugin.themes = ['Oblivion','Blue','Acid','Excel','Dark'];plugin.loadLang(); if(theWebUI.theme) { plugin.path = "plugins/theme/themes/"+theWebUI.theme+"/"; plugin.loadCSS("style"); plugin.loadCSS("stable"); plugin.allDone = function() { plugin.loadCSS("plugins"); $.each(theWebUI.tables, function(ndx,table) { table.obj.setPaletteByURL("plugins/theme/themes/"+theWebUI.theme); }); } plugin.config = theWebUI.config; theWebUI.config = function(data) { this.getTable("trt").setPaletteByURL("plugins/theme/themes/"+theWebUI.theme); plugin.loadCSS("plugins"); plugin.config.call(this,data); thePlugins.waitLoad( "thePlugins.get('theme').allDone" ); } } plugin.onLangLoaded = function() { var themes = '<option value="" '+(theWebUI.theme ? '' : 'selected')+'>'+theUILang.themeStandard+'</option>'; for( var i in plugin.themes ) themes += '<option value="'+plugin.themes[i]+'"'+(theWebUI.theme==plugin.themes[i] ? 'selected' : '')+'>'+plugin.themes[i]+'</option>'; $($$("webui.lang")).parent().after( '<div class="op50l algnright">'+ '<label for="webui.theme">'+theUILang.theme+':</label>'+ '<select id="webui.theme">'+themes+'</select></div>' ); } rTorrentStub.prototype.settheme = function() { this.content = "theme="+$($$("webui.theme")).val(); this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/theme/action.php"; this.dataType = "script"; } theDialogManager.setHandler('stg','beforeShow',function() { $($$("webui.theme")).val(theWebUI.theme); }); plugin.setSettings = theWebUI.setSettings; theWebUI.setSettings = function() { plugin.setSettings.call(this); if($($$("webui.theme")).val()!=theWebUI.theme) theWebUI.request("?action=settheme",[theWebUI.reload, theWebUI]); } /* * Oblivion skin for ruTorrent * Author: LesBleus */ plugin.oblivionAllDone = plugin.allDone; plugin.allDone = function() { plugin.oblivionAllDone.call(this); $.each(["diskspace","quotaspace","cpuload"], function(ndx,name) { var plg = thePlugins.get(name); if(plg && plg.enabled) { plg.prgStartColor = new RGBackground("#8fbc00"); plg.prgEndColor = new RGBackground("#d76000"); } }); } plugin.oldTableCreate = dxSTable.prototype.create; dxSTable.prototype.create = function(ele, styles, aName) { plugin.oldTableCreate.call(this, ele, styles, aName); this.prgStartColor = new RGBackground("#d76000"); this.prgEndColor = new RGBackground("#8fbc00"); } })();(function () { var plugin = new rPlugin( 'cpuload',3.6,'Novik','This plugin adds a CPU Load indicator to the bottom bar.',256,'http://code.google.com/p/rutorrent/wiki/PluginCpuload' ); plugin.loadMainCSS() function rLoadGraph() { } rLoadGraph.prototype.create = function( aOwner ) { this.owner = aOwner; this.maxSeconds = 180; this.seconds = -1; this.load = { label: null, data: [] }; this.startSeconds = new Date().getTime()/1000; } rLoadGraph.prototype.draw = function( percent ) { var self = this; $(function() { if(self.owner.height() && self.owner.width()) { clearCanvas( self.owner.get(0) ); self.owner.empty(); $.plot(self.owner, [ self.load.data ], { legend: { show: false }, colors: [ (new RGBackground()).setGradient(plugin.prgStartColor,plugin.prgEndColor,percent).getColor() ], lines: { show: true, lineWidth: 1, fill: true }, points: { lineWidth: 0, radius: 0 }, grid: { show: false }, xaxis: { max: (self.seconds-self.startSeconds>=self.maxSeconds) ? null : self.maxSeconds+self.startSeconds, noTicks: true }, shadowSize: 0, yaxis: { min: 0, noTicks: true } }); self.owner.append( $("<div>").attr("id","meter-cpu-text").css({top: 0}).text(percent+'%') ).prop("title", percent+'%'); } } ); } rLoadGraph.prototype.addData = function( percent ) { this.seconds = new Date().getTime()/1000; this.load.data.push([this.seconds,percent]); while((this.load.data[this.load.data.length-1][0]-this.load.data[0][0])>this.maxSeconds) this.load.data.shift(); this.draw(percent); } plugin.init = function() { if(getCSSRule("#meter-cpu-holder")) { plugin.prgStartColor = new RGBackground("#99D699"); plugin.prgEndColor = new RGBackground("#E69999"); plugin.addPaneToStatusbar("meter-cpu-td",$("<div>").attr("id","meter-cpu-holder").get(0)); plugin.graph = new rLoadGraph(); plugin.graph.create( $("#meter-cpu-holder") ); plugin.check = function() { var AjaxReq = jQuery.ajax( { type: "GET", timeout: theWebUI.settings["webui.reqtimeout"], async : true, cache: false, url : "plugins/cpuload/action.php", dataType : "json", cache: false, success : function(data) { plugin.graph.addData( data.load ); } }); }; plugin.check(); plugin.reqId = theRequestManager.addRequest( "ttl", null, plugin.check ); plugin.markLoaded(); } else window.setTimeout(arguments.callee,500); }; plugin.onRemove = function() { plugin.removePaneFromStatusbar("meter-cpu-td"); theRequestManager.removeRequest( "ttl", plugin.reqId ); } plugin.init(); })();(function () { var plugin = new rPlugin( '_task',3.6,'Novik','This plugin provides the possibility of running various scripts on the host system.',256,'http://code.google.com/p/rutorrent/wiki/Plugin_task' ); plugin.maxConcurentTasks = 3;plugin.showTabAlways = 1;plugin.loadLang(); plugin.loadMainCSS(); plugin.foreground = {}; plugin.background = {}; plugin.running = 0; theWebUI.startConsoleTask = function( taskName, requesterName, parameters, options ) { plugin.clearForeTimeout(); plugin.foreground = { no: 0, pid: 0, status: -1, errors: 0, start: 0, finish: 0, log: 0, name: taskName, tskcmderrors: 0, // errors crc tskcmdlog: 0, // log crc requester: requesterName, params: parameters, options: options || {} }; plugin.start(); } theWebUI.getConsoleTask = function() { return(plugin.foreground); } theWebUI.setConsoleTaskState = function( options ) { for( var name in options ) { switch(name) { case 'showerrors': { plugin.setConsoleControls(options[name]); break; } } } } // plugin.start = function() { $('#tskcmdlog').empty(); $('#tskcmderrors').empty(); theDialogManager.setModalState(); var req = ''; for( var i in this.foreground.params ) { var parameter = this.foreground.params[i]; switch($type(parameter)) { case "array": { for( var k in parameter ) req+=('&v='+i+'[]&s='+encodeURIComponent(parameter[k])); break; } case "object": { for( var property in parameter ) { if( parameter.hasOwnProperty(property) ) req+=('&v='+i+'['+property+']&s='+encodeURIComponent(parameter[property])); } break; } default: { req+=('&v='+i+'&s='+encodeURIComponent(parameter)); break; } } } theWebUI.requestWithoutTimeout("?action=taskstart&hash="+this.foreground.name+"&hash="+this.foreground.requester+req,[this.onStart, this]); } plugin.clear = function() { this.clearForeTimeout(); this.foreground.no = 0; this.foreground.pid = 0; this.foreground.status = -1; this.foreground.tskcmderrors = 0; this.foreground.tskcmdlog = 0; } plugin.callNotification = function( type, data, status ) { console.log(type); console.log(JSON.stringify(data || this.foreground)); var ret = null; type = "onTask"+type; var requester = thePlugins.get(this.foreground.requester); if(requester && $type(requester[type])=="function") ret = requester[type](data || this.foreground, status || false); return(ret); } plugin.fromBackground = function( no ) { this.foreground = cloneObject(this.background[no]); this.foreground.options = {}; this.foreground.tskcmderrors = 0; this.foreground.tskcmdlog = 0; $('#tskcmdlog').empty(); $('#tskcmderrors').empty(); plugin.onStart(this.foreground); } plugin.toBackground = function() { if(!plugin.isInBackground()) plugin.background[ plugin.foreground.no ] = cloneObject( this.foreground ); plugin.callNotification("HideInterface"); plugin.clear(); theDialogManager.hide('tskConsole'); plugin.refreshTasks(); } plugin.shutdown = function() { this.kill(); this.callNotification("HideInterface"); this.callNotification("Shutdown"); this.clear(); } plugin.clearForeTimeout = function() { if(this.foreTimeout) { window.clearTimeout(this.foreTimeout); this.foreTimeout = null; } } plugin.clearBackTimeout = function() { if(this.backTimeout) { window.clearTimeout(this.backTimeout); this.backTimeout = null; } } plugin.onStart = function(data) { theDialogManager.clearModalState(); if(data.status || this.foreground.options.noclose || this.isInBackground()) { if(!this.isInBackground()) plugin.refreshTasks(); plugin.callNotification("ShowInterface",$.extend(this.foreground,data)); $("#tskConsole-header").html(theUILang.tskCommand); theDialogManager.show("tskConsole"); this.check(data); } else if(!data.status) { this.foreground.no = data.no; this.kill(); this.callNotification("Shutdown"); this.clear(); } } plugin.check = function(data) { this.clearForeTimeout(); this.foreground.no = data.no; this.foreground.pid = data.pid; this.foreground.status = data.status; this.fillConsole('tskcmdlog',data.log); this.setConsoleControls( this.fillConsole('tskcmderrors',data.errors) ); if(this.foreground.status<0) { var self = this; this.foreTimeout = setTimeout( function() { theWebUI.requestWithoutTimeout("?action=taskcheck&hash="+self.foreground.no,[self.check,self]); },1000); } else { plugin.callNotification("Finished"); if(!this.foreground.status && !this.foreground.options.noclose && !this.isInBackground()) theDialogManager.hide("tskConsole"); } } plugin.isActive = function() { return(plugin.foreground.pid && (plugin.foreground.status<0)) } plugin.isInBackground = function() { return($type(plugin.background[plugin.foreground.no])); } plugin.kill = function() { theWebUI.requestWithoutTimeout("?action=taskkill&hash="+this.foreground.no); if(this.foreground.status<0) plugin.callNotification("Finished"); } plugin.setConsoleControls = function( errPresent ) { $('#tskBackground').prop( 'disabled', !plugin.canDetachTask() ); if(plugin.foreground.status>=0) { $('#tsk_btns').css( "background", "none" ); $("#tskConsole-header").html(theUILang.tskCommandDone); } else $('#tsk_btns').css( "background", "transparent url(./plugins/_task/images/ajax-loader.gif) no-repeat 5px 7px" ); if(errPresent) { $('#tskcmdlog').height(plugin.cHeight-18).parent().height(plugin.cHeight); $('#tskcmderrors').show(); $('#tskcmderrors_set').show(); } else { $('#tskcmderrors').hide(); $('#tskcmderrors_set').hide(); $('#tskcmdlog').height(plugin.cHeight*2+3).parent().height(plugin.cHeight*2+21); } } plugin.fillConsole = function(id,arr) { if(arr) { var s = ''; var requester = thePlugins.get(this.foreground.requester); for(var i = 0; i<arr.length; i++) s += (requester && $type(requester["onTaskShowLog"])=="function") ? requester.onTaskShowLog(this.foreground,arr[i],id,i) : escapeHTML(arr[i])+'<br>'; var crc = getCRC( s, 0 ); if(plugin.foreground[id]!=crc) { plugin.foreground[id] = crc; if(browser.isKonqueror) s = '<br>'+s; $('#'+id).html(s); if(!this.foreground.options.noclose) $('#'+id)[0].scrollTop = $('#'+id)[0].scrollHeight; } return(s!=''); } return(false); } rTorrentStub.prototype.taskstart = function() { this.content = "cmd="+this.hashes[0]; for(var i=0; i<this.ss.length; i++) this.content += ('&'+this.vs[i]+'='+this.ss[i]); this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/"+this.hashes[1]+"/action.php"; this.dataType = "json"; } rTorrentStub.prototype.taskcheck = function() { this.content = "cmd=check&no="+this.hashes[0]; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/_task/action.php"; this.dataType = "json"; } rTorrentStub.prototype.taskkill = function() { this.content = "cmd=kill&no="+this.hashes[0]; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/_task/action.php"; this.dataType = "json"; } rTorrentStub.prototype.taskremove = function() { this.content = "cmd=remove"; for(var i=0; i<this.hashes.length; i++) this.content += ('&no='+this.hashes[i]); this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/_task/action.php"; this.dataType = "json"; } rTorrentStub.prototype.tasklist = function() { this.content = "cmd=list"; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/_task/action.php"; this.dataType = "json"; } if(plugin.canChangeTabs()) { plugin.tasksConfig = theWebUI.config; theWebUI.config = function(data) { plugin.attachPageToTabs($('<div>').attr("id","tasks").addClass("table_tab stable").get(0),"Tasks","lcont"); theWebUI.tables["tasks"] = { obj: new dxSTable(), container: "tasks", columns: [ { text: theUILang.Name, width: "100px", id: "name", type: TYPE_STRING }, { text: "Plugin", width: "100px", id: "plugin", type: TYPE_STRING }, { text: "Parameter", width: "200px", id: "arg", type: TYPE_STRING }, { text: theUILang.Status, width: "100px", id: "status", type: TYPE_NUMBER }, { text: "Started", width: "110px", id: "start", type: TYPE_NUMBER }, { text: "Elapsed", width: "110px", id: "elapsed", type: TYPE_NUMBER }, { text: "Finished", width: "110px", id: "finish", type: TYPE_NUMBER } ], onselect: function(e,id) { this.tasksSelect(e,id) }, ondelete: function() { this.tasksRemove(); }, ondblclick: function(obj) { var id = obj.id.substr(6); plugin.fromBackground(id); return(false); }, format: function(table,arr) { for(var i in arr) { if(arr[i]==null) arr[i] = ''; var s = table.getIdByCol(i); switch(s) { case 'finish': case 'start': { arr[i] = (arr[i]>3600*24*365) ? theConverter.date(iv(arr[i])+theWebUI.deltaTime/1000) : ""; break; } case 'elapsed': { arr[i] = arr[i] ? theConverter.time(iv(arr[i]),true) : ""; break; } case 'status': { arr[i] = (arr[i]<0) ? theUILang.tskRunning : (arr[i]>0) ? theUILang.Error : theUILang.ok; break; } } } return(arr); } }; plugin.tasksConfig.call(theWebUI,data); if(!plugin.showTabAlways) { $('li#tab_tasks').hide(); $(theWebUI.tables["tasks"].container).hide(); } plugin.renameTasksStuff(); } } plugin.renameTasksStuff = function() { if(plugin.allStuffLoaded) { plugin.renameTab("tasks",theUILang.tskTasks); var table = theWebUI.getTable("tasks"); table.renameColumnById("start",theUILang.tskStart); table.renameColumnById("finish",theUILang.tskFinish); table.renameColumnById("elapsed",theUILang.tskElapsed); table.renameColumnById("plugin",theUILang.tskPlugin); table.renameColumnById("arg",theUILang.tskArg); $("#tasks .stable-body").mouseclick( function(e) { if((e.which==3) && plugin.allStuffLoaded && plugin.canChangeMenu()) { table.tasksSelect(e,null); return(true); } return(false); }); plugin.refreshTasks(); } else setTimeout(arguments.callee,1000); } plugin.refreshTasks = function() { plugin.clearBackTimeout(); theWebUI.requestWithoutTimeout("?action=tasklist",[plugin.onGetTasks,plugin]); } dxSTable.prototype.tasksRemove = function() { if(theWebUI.settings["webui.confirm_when_deleting"]) askYesNo( theUILang.tskDelete, theUILang.tskDeletePrompt, "theWebUI.getTable('tasks').tasksRemovePrim()" ); else this.tasksRemovePrim(); } dxSTable.prototype.tasksRemovePrim = function(cmd) { var req = ''; for( var k in this.rowSel ) { if( this.rowSel[k] ) { var id = k.substr(6); req+=("&hash=" + id); if(id==plugin.foreground.no) plugin.callNotification("HideInterface"); plugin.callNotification("Shutdown", plugin.background[id]); } } if(req.length) theWebUI.request("?action=taskremove"+req,[plugin.onGetTasks, plugin]); plugin.clear(); theDialogManager.hide('tskConsole'); } dxSTable.prototype.tasksSelect = function(e,id) { if(plugin.enabled && plugin.allStuffLoaded && (e.which==3)) { theContextMenu.clear(); if(this.selCount) { id = this.getFirstSelected().substr(6); theContextMenu.add([theUILang.tskActivate, this.selCount==1 ? function() { plugin.fromBackground( id ); } : null ]); } theContextMenu.add([theUILang.tskRemove, this.selCount ? "theWebUI.getTable('tasks').tasksRemove()" : null ]); theContextMenu.add([CMENU_SEP]); theContextMenu.add([theUILang.tskRefresh, plugin.refreshTasks]); theContextMenu.show(e.clientX,e.clientY); } } plugin.tasksOnShow = theTabs.onShow; theTabs.onShow = function(id) { if(id=="tasks") { var table = theWebUI.getTable("tasks"); if(table) { table.refreshRows(); plugin.refreshTasks(); } } else plugin.tasksOnShow.call(this,id); }; plugin.resizeBottom = theWebUI.resizeBottom; theWebUI.resizeBottom = function( w, h ) { plugin.resizeBottom.call(theWebUI,w,h); if(theWebUI.configured) { if(w!==null) w-=8; if(h!==null) { h-=($("#tabbar").height()); h-=2; } var table = this.getTable("tasks"); if(table) table.resize(w,h); } } plugin.canDetachTask = function() { return( (((plugin.running<plugin.maxConcurentTasks) || (plugin.foreground.status>=0)) && (plugin.foreground.pid>0)) || plugin.isInBackground() ); } plugin.onGetTasks = function(d) { if($type(d)) { var updated = false; var table = theWebUI.getTable("tasks"); if( d[ plugin.foreground.no ] && !plugin.isInBackground() ) delete d[ plugin.foreground.no ]; plugin.running = 0; for( var id in d ) { var item = d[id]; if(!$type(plugin.background[id])) { table.addRowById( { name: item.name, status: item.status, plugin: item.requester, arg: item.params ? item.params['arg'] : '', start: item.start, elapsed: item.finish ? iv(item.finish)-iv(item.start) : (new Date().getTime()/1000-(iv(item.start)+theWebUI.deltaTime/1000)), finish: item.finish }, "tasks_"+id, (item.status<0) ? "Status_Down" : (item.status==0) ? "Status_Completed" : "Status_Error" ); updated = true; } else { updated = table.setValuesById("tasks_"+id, { name: item.name, status: item.status, plugin: item.requester, arg: item.params ? item.params['arg'] : '', start: item.start, elapsed: item.finish ? iv(item.finish)-iv(item.start) : (new Date().getTime()/1000-(iv(item.start)+theWebUI.deltaTime/1000)), finish: item.finish },true) || updated; updated = table.setIcon("tasks_"+id,(item.status<0) ? "Status_Down" : (item.status==0) ? "Status_Completed" : "Status_Error") || updated; } if(item.status<0) plugin.running++; else if(plugin.background[id] && (plugin.background[id].status<0)) plugin.callNotification("Finished",item,true); } for( var id in plugin.background ) { if(!$type(d[id])) { table.removeRow( "tasks_"+id ); updated = true; } } plugin.background = d; if(updated) { if(!plugin.isInBackground()) $('#tskBackground').prop( 'disabled', !plugin.canDetachTask() ); $('li#tab_tasks').show(); $(theWebUI.tables["tasks"].container).show(); table.refreshRows(); if(table.sIndex !=- 1) table.Sort(); } } if( ((theWebUI.activeView=='tasks') && plugin.running ) || plugin.foreground.no ) { plugin.clearBackTimeout(); plugin.backTimeout = setTimeout(plugin.refreshTasks,theWebUI.settings["webui.update_interval"]); } } plugin.onLangLoaded = function() { theDialogManager.make("tskConsole",theUILang.tskCommand, "<div class='fxcaret'>"+ "<fieldset id='tskcmdlog_set'>"+ "<legend>"+theUILang.tskConsole+"</legend>"+ "<div class='tskconsole' id='tskcmdlog'></div>"+ "</fieldset>"+ "<fieldset id='tskcmderrors_set'>"+ "<legend>"+theUILang.tskErrors+"</legend>"+ "<div class='tskconsole' id='tskcmderrors'></div>"+ "</fieldset>"+ "</div>"+ "<div class='aright buttons-list' id='tsk_btns'>"+ "<input type='button' id='tskBackground' class='Button' value='"+theUILang.tskBackground+"'/>"+ "<input type='button' id='tskCancel' class='Cancel Button' value='"+theUILang.Cancel+"'/>"+ "</div>",true); theDialogManager.setHandler('tskConsole','afterHide',function() { if( plugin.foreground.no ) { if(!plugin.isInBackground()) plugin.shutdown(); else theWebUI.getTable('tasks').tasksRemovePrim(); } }); theDialogManager.setHandler('tskConsole','afterShow',function() { if(!plugin.cHeight) plugin.cHeight = $('#tskcmderrors').parent().height(); }); $('#tskBackground').click( plugin.toBackground ); $(".tskconsole").enableSysMenu(); } })();(function () { var plugin = new rPlugin( 'check_port',3.6,'Novik','This plugin adds an incoming port status indicator to the bottom bar.',256,'http://code.google.com/p/rutorrent/wiki/PluginCheckPort' ); plugin.loadLang(); plugin.loadMainCSS(); plugin.update = function() { $$("port-td").className = "statuscell pstatus0"; theWebUI.request("?action=portcheck", [plugin.getPortStatus, plugin]); } plugin.getPortStatus = function(d) { $("#port-td").prop("title",d.port+": "+theUILang.portStatus[d.status]).get(0).className = "statuscell pstatus"+d.status; } rTorrentStub.prototype.portcheck = function() { this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/check_port/action.php"; this.dataType = "json"; } plugin.createPortMenu = function(e) { if(e.which==3) { theContextMenu.clear(); theContextMenu.add([ theUILang.checkPort, plugin.update ]); theContextMenu.show(); } return(false); } plugin.onLangLoaded = function() { plugin.addPaneToStatusbar("port-td",$("<div>").attr("id","port-holder").get(0),2); if(plugin.canChangeMenu()) $("#port-td").addClass("pstatus0").mouseclick( plugin.createPortMenu ); plugin.update(); } plugin.onRemove = function() { plugin.removePaneFromStatusbar("port-td"); } })();(function () { var plugin = new rPlugin( 'cookies',3.6,'Novik','This plugin provides cookies information for authentication on trackers.',256,'http://code.google.com/p/rutorrent/wiki/PluginCookies' ); hostCookies = []; plugin.loadMainCSS(); plugin.loadLang(); if(plugin.canChangeOptions()) { plugin.addAndShowSettings = theWebUI.addAndShowSettings; theWebUI.addAndShowSettings = function(arg) { if(plugin.enabled) { var s = ''; for(var i=0; i<hostCookies.length; i++) { s+=(hostCookies[i].host+'|'+hostCookies[i].cookies); if(i<hostCookies.length-1) s+='\r\n'; } $('#hostcookies').val(s); } plugin.addAndShowSettings.call(theWebUI,arg); } theWebUI.cookiesWasChanged = function() { var arr = $('#hostcookies').val().split("\n"); if(arr.length!=hostCookies.length) { return(true); } for(var i = 0; i<arr.length; i++) { var tmp = $.trim(arr[i]); tmp = tmp.split("\|",2); if((tmp.length<2) || (tmp[0]!=hostCookies[i].host) || (tmp[1]!=hostCookies[i].cookies)) return(true); } return(false); } plugin.setSettings = theWebUI.setSettings; theWebUI.setSettings = function() { plugin.setSettings.call(this); if(plugin.enabled && this.cookiesWasChanged()) this.request("?action=setcookies"); } rTorrentStub.prototype.setcookies = function() { this.content = 'dummy=1'; var arr = $('#hostcookies').val().split("\n"); for(var i = 0; i<arr.length; i++) this.content = this.content+"&cookie="+encodeURIComponent(arr[i]); this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/cookies/action.php"; this.dataType = "script"; } } plugin.onLangLoaded = function() { this.attachPageToOptions($('<div>').attr("id","st_cookies").html( "<fieldset>"+ "<legend>"+theUILang.cookiesDesc+"</legend>"+ "<div class=\"op100l\">"+ "<textarea id='hostcookies'></textarea>"+ "</div>"+ "</fieldset>")[0],theUILang.cookiesName); } plugin.onRemove = function() { this.removePageFromOptions("st_cookies"); } })();(function () { var plugin = new rPlugin( 'create',3.6,'Novik','This plugin allows for the creation of new .torrent files.',256,'http://code.google.com/p/rutorrent/wiki/PluginCreate' ); plugin.loadLang(); plugin.loadMainCSS(); if(browser.isKonqueror) plugin.loadCSS("konqueror"); plugin.recentTrackers = {}; theWebUI.checkCreate = function() { theDialogManager.hide('tcreate'); var arr = $('#trackers').val().split("\n"); var trk = ''; for( var i in arr ) trk+=($.trim(arr[i])+'\r'); this.startConsoleTask( "create", plugin.name, { "piece_size" : $('#piece_size').val(), "trackers" : trk, "path_edit" : $.trim($("#path_edit").val()), "comment" : $.trim($("#comment").val()), "private" : $('#private').prop('checked') ? 1 : 0, "start_seeding" : $('#start_seeding').prop('checked') ? 1 : 0 }, { noclose: true }); } plugin.onTaskFinished = function(task,fromBackground) { if(!fromBackground) { $("#xtaskno").val(task.no); if(!task.status) $('#xcsave').show(); } theWebUI.request('?action=rtget',[plugin.getRecentTrackers, plugin]); } rTorrentStub.prototype.rtget = function() { this.content = "cmd=rtget"; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/create/action.php"; this.dataType = "json"; } theWebUI.showCreate = function() { $('#start_seeding').prop('disabled',!theWebUI.systemInfo.rTorrent.started); if(theWebUI.systemInfo.rTorrent.started) $('#lbl_start_seeding').removeClass('disabled'); else $('#lbl_start_seeding').addClass('disabled'); theDialogManager.show('tcreate'); } plugin.getRecentTrackers = function( data ) { plugin.recentTrackers = data; if(propsCount(plugin.recentTrackers)) $("#recentTrackers").removeClass("disabled"); else $("#recentTrackers").addClass("disabled"); } theWebUI.addTrackerToBox = function(ann) { var val = $('#trackers').val(); if(val.length) val+='\r\n'; $('#trackers').val( val+ann ); $('#trackers').focus(); } theWebUI.showRecentTrackers = function() { if(propsCount(plugin.recentTrackers)) { theContextMenu.clear(); for( var domain in plugin.recentTrackers ) theContextMenu.add([domain,"theWebUI.addTrackerToBox('"+addslashes(plugin.recentTrackers[domain])+"')"]); var offs = $("#recentTrackers").offset(); theContextMenu.show(offs.left,offs.top-theContextMenu.obj.height()-5); } } plugin.onLangLoaded = function() { var plg = thePlugins.get("_task"); if(!plg.allStuffLoaded) setTimeout(arguments.callee,1000); else { theWebUI.request('?action=rtget',[plugin.getRecentTrackers, plugin]); $('#tsk_btns').prepend( "<input type='button' class='Button' id='xcsave' value='"+theUILang.torrentSave+"'>" ); plugin.addButtonToToolbar("create",theUILang.mnu_create,"theWebUI.showCreate()","remove"); plugin.addSeparatorToToolbar("remove"); var pieceSize = "<label>"+theUILang.PieceSize+": </label>"+ "<select id='piece_size' name='piece_size'>"+ "<option value=\"32\">32"+theUILang.KB+"</option>"+ "<option value=\"64\">64"+theUILang.KB+"</option>"+ "<option value=\"128\">128"+theUILang.KB+"</option>"+ "<option value=\"256\" selected=\"selected\">256"+theUILang.KB+"</option>"+ "<option value=\"512\">512"+theUILang.KB+"</option>"+ "<option value=\"1024\">1"+theUILang.MB+"</option>"+ "<option value=\"2048\">2"+theUILang.MB+"</option>"+ "<option value=\"4096\">4"+theUILang.MB+"</option>"+ "<option value=\"8192\">8"+theUILang.MB+"</option>"+ "<option value=\"16384\">16"+theUILang.MB+"</option>"+ "</select>"; if(plugin.hidePieceSize) pieceSize = ""; theDialogManager.make("tcreate",theUILang.CreateNewTorrent, "<div class='cont fxcaret'>"+ "<fieldset>"+ "<legend>"+theUILang.SelectSource+"</legend>"+ "<input type='text' id='path_edit' name='path_edit' class='TextboxLarge' autocomplete='off'/>"+ "<input type=button value='...' id='browse_path' class='Button'><br/>"+ "</fieldset>"+ "<fieldset>"+ "<legend>"+theUILang.TorrentProperties+"</legend>"+ " <label>"+theUILang.Trackers+": </label>"+ "<textarea id='trackers' name='trackers'></textarea><br/>"+ "<label>"+theUILang.Comment+": </label>"+ "<input type='text' id='comment' name='comment' class='TextboxLarge'/><br/>"+ pieceSize+ "</fieldset>"+ "<fieldset>"+ "<legend>"+theUILang.Other+"</legend>"+ "<label for='start_seeding' id='lbl_start_seeding' class='nomargin'><input type='checkbox' name='start_seeding' id='start_seeding'/>"+theUILang.StartSeeding+"</label>"+ "<label class='nomargin'><input type='checkbox' name='private' id='private'/>"+theUILang.PrivateTorrent+"</label><br/>"+ "</fieldset>"+ "</div>"+ "<div class='aright buttons-list'><input type='button' id='recentTrackers' value='"+theUILang.recentTrackers+"...' class='Button menuitem' onclick='theWebUI.showRecentTrackers()'/><input type='button' id='torrentCreate' value='"+theUILang.torrentCreate+"' class='OK Button' onclick='theWebUI.checkCreate()'/><input type='button' class='Cancel Button' value='"+theUILang.Cancel+"'/></div>",true); $(document.body).append($("<iframe name='xcreatefrm'/>").css({visibility: "hidden"}).attr( { name: "xcreatefrm", id: "xcreatefrm" } ).width(0).height(0)); $(document.body).append( $('<form action="plugins/create/action.php" id="xgetfile" method="post" target="xcreatefrm">'+ '<input type="hidden" name="cmd" value="getfile">'+ '<input type="hidden" name="no" id="xtaskno" value="0">'+ '</form>').width(0).height(0)); $("#xcsave").click( function() { $("#xtaskno").val(); $('#xgetfile').submit(); }); if(thePlugins.isInstalled("_getdir")) { plugin.btn = new theWebUI.rDirBrowser( 'tcreate', 'path_edit', 'browse_path', null, true ); theDialogManager.setHandler('tcreate','afterHide',function() { plugin.btn.hide(); }); } else $('#browse_path').remove(); theDialogManager.setHandler('tskConsole','beforeShow',function() { $('#xcsave').hide(); }); plugin.markLoaded(); } }; plugin.onRemove = function() { plugin.removeSeparatorFromToolbar("remove"); plugin.removeButtonFromToolbar("create"); } plugin.langLoaded = function() { if(plugin.enabled) plugin.onLangLoaded(); } })();(function () { var plugin = new rPlugin( 'data',3.6,'Novik','This plugin allows to copy torrent data files from the host to the local machine.',256,'http://code.google.com/p/rutorrent/wiki/PluginData' ); plugin.loadLang(); plugin.config = theWebUI.config; theWebUI.config = function(data) { plugin.config.call(this,data); var oldDblClick = this.getTable("fls").ondblclick; this.getTable("fls").ondblclick = function(obj) { if(plugin.enabled && (theWebUI.dID!="") && (theWebUI.dID.length==40)) { if(theWebUI.settings["webui.fls.view"]) { var arr = obj.id.split('_f_'); theWebUI.getData(theWebUI.dID,arr[1]); return(false); } else { var lnk = this.getAttr(obj.id, "link"); if(lnk==null) { theWebUI.getData(theWebUI.dID,obj.id.substr(3)); return(false); } } } return(oldDblClick.call(this,obj)); } } theWebUI.getData = function( hash, no ) { $("#datahash").val(hash); $("#datano").val(no); $("#getdata").submit(); } if(plugin.canChangeMenu()) { plugin.createFileMenu = theWebUI.createFileMenu; theWebUI.createFileMenu = function( e, id ) { if(plugin.createFileMenu.call(this, e, id)) { if(plugin.enabled) { theContextMenu.add([CMENU_SEP]); var fno = null; var table = this.getTable("fls"); if(table.selCount == 1) { var fid = table.getFirstSelected(); if(this.settings["webui.fls.view"]) { var arr = fid.split('_f_'); fno = arr[1]; } else if(!this.dirs[this.dID].isDirectory(fid)) fno = fid.substr(3); if( // ((fno!=null) && (this.files[this.dID][fno].size>=2147483647) && !theWebUI.systemInfo.php.canHandleBigFiles) || (theWebUI.dID.length>40)) fno = null; } theContextMenu.add( [theUILang.getData, (fno==null) ? null : "theWebUI.getData('" + theWebUI.dID + "',"+fno+")"] ); } return(true); } return(false); } } plugin.onLangLoaded = function() { $(document.body).append($("<iframe name='datafrm'/>").css({visibility: "hidden"}).attr( { name: "datafrm", id: "datafrm" } ).width(0).height(0).load(function() { $("#datahash").val(''); $("#datano").val(''); var d = (this.contentDocument || this.contentWindow.document); if(d && (d.location.href != "about:blank")) try { eval(d.body.textContent ? d.body.textContent : d.body.innerText); } catch(e) {} })); $(document.body).append( $('<form action="plugins/data/action.php" id="getdata" method="get" target="datafrm">'+ '<input type="hidden" name="hash" id="datahash" value="">'+ '<input type="hidden" name="no" id="datano" value="">'+ '</form>').width(0).height(0)); } plugin.onRemove = function() { $("#datafrm").remove(); $("#getdata").remove(); } })();(function () { var plugin = new rPlugin( 'datadir',3.6,'dmrom','This plugin is intended for moving torrent data files.',256,'http://code.google.com/p/rutorrent/wiki/PluginDataDir' ); plugin.loadMainCSS(); plugin.loadLang(); theWebUI.EditDataDir = function() { var id = theWebUI.getTable("trt").getFirstSelected(); if( id && (id.length==40) && this.torrents[id] ) { var base_path = $.trim(this.torrents[id].base_path) if( !base_path.length ) // torrent is not open this.request( "?action=getbasepath&hash=" + id, [this.showDataDirDlg, this] ); else theWebUI.showDataDirDlg( { hash: id, basepath: base_path } ); } } theWebUI.showDataDirDlg = function( d ) { var id = theWebUI.getTable("trt").getFirstSelected(); var is_done = false; var is_multy = false; if( id && (id.length==40) && this.torrents[id] ) { is_done = $.trim(this.torrents[id].done) == 1000; is_multy = $.trim(this.torrents[id].multi_file) != "0"; } $('#edit_datadir').val( $.trim(d.basepath).replace(/\/[^\/]+$/g, "") ); $('#btn_datadir_ok').prop("disabled",false); // can't ignore torrent's path if not multy $('#move_not_add_path').prop("disabled",!is_multy).prop("checked",false); $('#move_datafiles').prop("checked",true); // can't "fast resume" torrent if not completed $('#move_fastresume').prop("disabled",!is_done).prop("checked",is_done); theDialogManager.show( "dlg_datadir" ); } rTorrentStub.prototype.getbasepath = function() { var cmd = new rXMLRPCCommand( "d.open" ); cmd.addParameter( "string", this.hashes[0] ); this.commands.push( cmd ); cmd = new rXMLRPCCommand( "d.get_base_path" ); cmd.addParameter( "string", this.hashes[0] ); this.commands.push( cmd ); cmd = new rXMLRPCCommand( "d.close" ); cmd.addParameter( "string", this.hashes[0] ); this.commands.push( cmd ); } rTorrentStub.prototype.getbasepathResponse = function( xml ) { var datas = xml.getElementsByTagName( 'data' ); var data = datas[0]; var values = data.getElementsByTagName( 'value' ); return( { hash: this.hashes[0], basepath: this.getValue( values, 3 ) } ); } if(plugin.canChangeMenu()) { plugin.createMenu = theWebUI.createMenu; theWebUI.createMenu = function( e, id ) { plugin.createMenu.call(this, e, id); if(plugin.enabled && plugin.allStuffLoaded) { var table = this.getTable("trt"); var el = theContextMenu.get( theUILang.Properties ); if( el ) theContextMenu.add( el, [theUILang.DataDir + "...", ((table.selCount > 1) || (table.getFirstSelected().length==40)) ? "theWebUI.EditDataDir()" : null] ); } } } theWebUI.sendDataDir = function() { $('#btn_datadir_ok').prop("disabled",true); var sr = this.getTable("trt").rowSel; for( var k in sr ) { if( sr[k] && (k.length==40)) { this.DataDirID = k; this.requestWithTimeout( "?action=setdatadir", [this.receiveDataDir, this], function() { theWebUI.timeout(); $('#btn_datadir_ok').prop("disabled",false); }); } } } theWebUI.receiveDataDir = function( d ) { $('#btn_datadir_ok').prop("disabled",false); if( !d.errors.length ) theDialogManager.hide( 'dlg_datadir' ); else for( var i = 0; i < d.errors.length; i++ ) { var s = eval(d.errors[i].desc); if( d.errors[i].prm ) s += " (" + d.errors[i].prm + ")"; noty( s, "error" ); } } rTorrentStub.prototype.setdatadir = function() { var id = theWebUI.DataDirID; this.content = "hash=" + id + "&datadir=" + encodeURIComponent( $('#edit_datadir').val() ) + "&move_addpath=" + ( $$('move_not_add_path').checked ? '0' : '1' ) + "&move_datafiles=" + ( $$('move_datafiles').checked ? '1' : '0' ) + "&move_fastresume=" + ( $$('move_fastresume').checked ? '1' : '0' ); this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/datadir/action.php"; this.dataType = "json"; } plugin.onLangLoaded = function() { theDialogManager.make( 'dlg_datadir', theUILang.datadirDlgCaption, "<div class='content fxcaret'>" + "<fieldset>" + "<label id='lbl_datadir' for='edit_datadir'>" + theUILang.DataDir + ": </label>" + "<input type='text' id='edit_datadir' class='TextboxLarge' maxlength='200'/>" + "<input type='button' id='btn_datadir_browse' class='Button' value='...' />" + "<div class='checkbox'>" + "<input type='checkbox' checked id='move_not_add_path'/>"+ "<label for='move_not_add_path'>"+ theUILang.Dont_add_tname +"</label>"+ "</div>" + "<div class='checkbox'>" + "<input type='checkbox' checked id='move_datafiles'/>"+ "<label for='move_datafiles'>"+ theUILang.DataDirMove +"</label>"+ "</div>" + "<div class='checkbox'>" + "<input type='checkbox' checked id='move_fastresume'/>"+ "<label for='move_fastresume'>"+ theUILang.doFastResume +"</label>"+ "</div>" + "</fieldset>" + "</div>"+ "<div class='aright buttons-list'>" + "<input type='button' value='" + theUILang.ok + "' class='OK Button' id='btn_datadir_ok'" + " onclick='theWebUI.sendDataDir(); return(false);' />" + "<input type='button' value='"+ theUILang.Cancel + "' class='Cancel Button'/>" + "</div><br/>" + "<div />", true); if(thePlugins.isInstalled("_getdir")) { var btn = new theWebUI.rDirBrowser( 'dlg_datadir', 'edit_datadir', 'btn_datadir_browse', 'frame_datadir_browse' ); theDialogManager.setHandler('dlg_datadir','afterHide',function() { btn.hide(); }); } else $('#btn_datadir_browse').remove(); } plugin.onRemove = function() { theDialogManager.hide("dlg_datadir"); } })();(function () { var plugin = new rPlugin( 'diskspace',3.6,'Novik','This plugin adds an easy to read disk meter to the bottom bar.',256,'http://code.google.com/p/rutorrent/wiki/PluginDiskspace' ); plugin.interval = 10; plugin.notifySpaceLimit = 4294967296;plugin.loadLang(); plugin.loadMainCSS(); plugin.setValue = function( full, free ) { var percent = iv(full ? (full-free)/full*100 : 0); if(percent>100) percent = 100; $("#meter-disk-value").width( percent+"%" ).css( { "background-color": (new RGBackground()).setGradient(this.prgStartColor,this.prgEndColor,percent).getColor(), visibility: !percent ? "hidden" : "visible" } ); $("#meter-disk-text").text(percent+'%'); $("#meter-disk-td").prop("title", theConverter.bytes(free)+"/"+theConverter.bytes(full)); if($.noty && plugin.allStuffLoaded) { if((free<plugin.notifySpaceLimit) && !plugin.noty) plugin.noty = $.noty( { text: theUILang.diskNotification, layout : 'bottomLeft', type: 'error', timeout : false, closeOnSelfClick: false }); if((free>plugin.notifySpaceLimit) && plugin.noty) { $.noty.close(plugin.noty); plugin.noty = null; } } } plugin.init = function() { if(getCSSRule("#meter-disk-holder")) { plugin.prgStartColor = new RGBackground("#99D699"); plugin.prgEndColor = new RGBackground("#E69999"); plugin.addPaneToStatusbar( "meter-disk-td", $("<div>").attr("id","meter-disk-holder"). append( $("<span></span>").attr("id","meter-disk-text").css({overflow: "visible"}) ). append( $("<div>").attr("id","meter-disk-value").css({ visibility: "hidden", float: "left" }).width(0).html("&nbsp;") ).get(0) ); plugin.check = function() { var AjaxReq = jQuery.ajax( { type: "GET", timeout: theWebUI.settings["webui.reqtimeout"], async : true, cache: false, url : "plugins/diskspace/action.php", dataType : "json", cache: false, success : function(data) { plugin.setValue( data.total, data.free ); }, complete : function(jqXHR, textStatus) { plugin.diskTimeout = window.setTimeout(plugin.check,plugin.interval*1000); } }); }; plugin.check(); plugin.markLoaded(); } else window.setTimeout(arguments.callee,500); }; plugin.onRemove = function() { plugin.removePaneFromStatusbar("meter-disk-td"); if(plugin.diskTimeout) { window.clearTimeout(plugin.diskTimeout); plugin.diskTimeout = null; } } plugin.init(); })();(function () { var plugin = new rPlugin( 'edit',3.6,'Novik','This plugin allows to edit the list of trackers and change the comment of the current torrent.',256,'http://code.google.com/p/rutorrent/wiki/PluginEdit' ); plugin.loadMainCSS(); plugin.loadLang(); theWebUI.editTrackers = function(id) { var trk = this.trackers[id]; var s = ""; if(trk.length) { var lastGroup = trk[0].group; for(var i=0; i<trk.length; i++) { if(trk[i].name!="dht://") { if(lastGroup != trk[i].group) { s+='\r\n'; lastGroup = trk[i].group; } s+=trk[i].name; s+='\r\n'; } } } $('#etrackers').val($.trim(s)); $('#ecomment').val($.trim(this.torrents[id].comment)); $('#editok').prop("disabled",false); theDialogManager.show("tedit"); } if(plugin.canChangeMenu()) { plugin.createMenu = theWebUI.createMenu; theWebUI.createMenu = function(e, id) { plugin.createMenu.call(this,e,id); if(plugin.enabled && plugin.allStuffLoaded) { var el = theContextMenu.get(theUILang.Properties); if(el) theContextMenu.add(el,[theUILang.EditTrackers, (this.getTable("trt").selCount == 1) && (theWebUI.dID.length==40) ? "theWebUI.editTrackers('"+id+"')" : null]); } } plugin.createTrackerMenu = theWebUI.createTrackerMenu; theWebUI.createTrackerMenu = function(e, id) { if(plugin.createTrackerMenu.call(theWebUI, e, id) && plugin.allStuffLoaded && plugin.enabled) { theContextMenu.add([CMENU_SEP]); theContextMenu.add([theUILang.EditTrackers, (theWebUI.dID.length==40) ? "theWebUI.editTrackers('"+theWebUI.dID+"')" : null]); return(true); } return(false); } } theWebUI.sendEdit = function() { $('#editok').prop("disabled",true); this.requestWithTimeout("?action=edittorrent",[this.receiveEdit, this], function() { theWebUI.timeout(); $('#editok').prop("disabled",true); }); } theWebUI.receiveEdit = function(d) { $('#editok').prop("disabled",false); if(!d.errors.length) { window.setTimeout( function() { theWebUI.getTrackers(d.hash) }, 1000 ); theDialogManager.hide("tedit"); } else for( var i=0; i<d.errors.length; i++) { var s = eval(d.errors[i].desc); if(d.errors[i].prm) s = s + " ("+d.errors[i].prm+")"; noty(s,"error"); } } plugin.onLangLoaded = function() { theDialogManager.make( "tedit", theUILang.EditTorrentProperties, "<div class='cont fxcaret'>"+ "<fieldset>"+ "<label>"+theUILang.Trackers+": </label>"+ "<textarea id='etrackers'></textarea><br/>"+ "<label>"+theUILang.Comment+": </label>"+ "<input type='text' id='ecomment' name='ecomment' class='TextboxLarge'/><br/>"+ "</fieldset>"+ "</div>"+ "<div class='aright buttons-list'><input type='button' value='"+theUILang.ok+"' class='OK Button' id='editok' onclick='theWebUI.sendEdit(); return(false);'/><input type='button' value='"+theUILang.Cancel+"' class='Cancel Button'/></div>", true); } rTorrentStub.prototype.edittorrent = function() { this.content = "hash="+theWebUI.dID+"&comment="+encodeURIComponent($('#ecomment').val()); var arr = $('#etrackers').val().split("\n"); for(var i = 0; i<arr.length; i++) { var s = arr[i].replace(/(^\s+)|(\s+$)/g, ""); if(s.toLowerCase()!='dht://') this.content = this.content+"&tracker="+encodeURIComponent(s); } this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/edit/action.php"; this.dataType = "json"; } plugin.onRemove = function() { theDialogManager.hide("tedit"); } })();(function () { var plugin = new rPlugin( 'erasedata',3.6,'Novik','This plugin allows to delete torrent data along with .torrent file.',256,'http://code.google.com/p/rutorrent/wiki/PluginErasedata' ); if(plugin.canChangeMenu()) { theWebUI.removeWithData = function() { if( theWebUI.settings["webui.confirm_when_deleting"] ) { this.delmode = "removewithdata"; askYesNo( theUILang.Remove_torrents, theUILang.Rem_torrents_prompt, "theWebUI.doRemove()" ); } else theWebUI.perform( "removewithdata" ); } plugin.createMenu = theWebUI.createMenu; theWebUI.createMenu = function( e, id ) { plugin.createMenu.call(this, e, id); if(plugin.enabled) { var el = theContextMenu.get( theUILang.Remove ); if( el ) { var _c0 = []; _c0.push( [theUILang.Delete_data, (this.getTable("trt").selCount>1) || this.isTorrentCommandEnabled("remove",id) ? "theWebUI.removeWithData()" : null] ); theContextMenu.add( el, [CMENU_CHILD, theUILang.Remove_and, _c0] ); } } } rTorrentStub.prototype.removewithdata = function() { for( var i = 0; i < this.hashes.length; i++ ) { var cmd = new rXMLRPCCommand( "d.set_custom5" ); cmd.addParameter( "string", this.hashes[i] ); cmd.addParameter( "string", "1" ); this.commands.push( cmd ); cmd = new rXMLRPCCommand( "d.delete_tied" ); cmd.addParameter( "string", this.hashes[i] ); this.commands.push( cmd ); cmd = new rXMLRPCCommand( "d.erase" ); cmd.addParameter( "string", this.hashes[i] ); this.commands.push( cmd ); } } } })();(function () { var plugin = new rPlugin( 'feeds',3.6,'Novik','This plugin is intended for making RSS feeds with information of torrents.',256,'http://code.google.com/p/rutorrent/wiki/PluginFeeds' ); plugin.loadLang(); plugin.onLangLoaded = function() { var lang = GetActiveLanguage(); $("head").append( $("<link>").attr( { rel: "alternate", type: "application/rss+xml", title: theUILang.feedAll, href: "plugins/feeds/action.php?mode=all&lang="+lang }) ). append( $("<link>").attr( { rel: "alternate", type: "application/rss+xml", title: theUILang.feedDownloading, href: "plugins/feeds/action.php?mode=downloading&lang="+lang }) ). append( $("<link>").attr( { rel: "alternate", type: "application/rss+xml", title: theUILang.feedCompleted, href: "plugins/feeds/action.php?mode=completed&lang="+lang }) ). append( $("<link>").attr( { rel: "alternate", type: "application/rss+xml", title: theUILang.feedActive, href: "plugins/feeds/action.php?mode=active&lang="+lang }) ). append( $("<link>").attr( { rel: "alternate", type: "application/rss+xml", title: theUILang.feedInactive, href: "plugins/feeds/action.php?mode=inactive&lang="+lang }) ). append( $("<link>").attr( { rel: "alternate", type: "application/rss+xml", title: theUILang.feedError, href: "plugins/feeds/action.php?mode=error&lang="+lang }) ); } })();(function () { var plugin = new rPlugin( 'filedrop',3.6,'Novik','This plugin allows users to drag multiple torrents from desktop to the browser (FF > 3.6 & Chrome only).',256,'http://code.google.com/p/rutorrent/wiki/PluginFileDrop' ); plugin.maxfiles = 25; plugin.maxfilesize = 2; plugin.queuefiles = 2; if(window.FileReader) plugin.loadLang(); else plugin.disable(); plugin.onLangLoaded = function() { injectScript(plugin.path+"/jquery.filedrop.js",function() { $("#maincont").filedrop( { // fallback_id: 'torrent_file', paramname: 'torrent_file', maxfiles: plugin.maxfiles, maxfilesize: plugin.maxfilesize, queuefiles: plugin.queuefiles, url: plugin.path+'../../php/addtorrent.php', data: { json: 1 }, uploadFinished: function(i, file, response, time) { noty(file.name+' : '+ theUILang['addTorrent'+response.result], (response.result=='Success') ? "success" : "error"); }, beforeEach: function(file) { return(file.name.match(".torrent")!=null); }, error: function(err, file) { switch(err) { case 'BrowserNotSupported': { plugin.remove(); noty(theUILang.doesntSupportHTML5,"error"); break; } case 'TooManyFiles': { noty(theUILang.tooManyFiles+plugin.maxfiles,"error"); break; } case 'FileTooLarge': { noty(file.name+' '+theUILang.fileTooLarge+' '+plugin.maxfilesize+theUILang.MB,"error"); break; } default: break; } } }); }); } plugin.onRemove = function() { $("#maincont").unbind('drop').unbind('dragenter').unbind('dragover').unbind('dragleave'); } })();(function () { var plugin = new rPlugin( 'filemanager',0.09,'HWK','File Manager plugin.',256,'' ); plugin.attachPageToTabs($('<div>').attr("id","FileManager").addClass('table_tab').html('<table width="100%" border="0" id="fMan_navpath" cellspacing="0" cellpadding="0"><tr>'+ ' <td width="19"><input type="button" name="fMan_navbut" id="fMan_navbut" value="" /></td>'+ ' <td><select name="fMan_pathsel" id="fMan_pathsel" style="width:100%;"></select></td>'+ ' </tr></table><div id="fManager_data" class="table_tab"></div>').get(0), 'File Manager'); plugin.loadMainCSS(); theWebUI.fManager = { paths: [], curpath: '/', workpath: '/', settings: { timef: '%d-%M-%y %h:%m:%s', permf: 1, histpath: 5, stripdirs: true, showhidden: true, cleanlog: false, arcnscheme: 'new', scrows: 12, sccols: 4, scwidth: 300 }, pathlists: 5, permf: 0, tformat: '%d-%M-%y %h:%m:%s', inaction: false, actionlist:{}, actionstats: 0, actiontoken:0, actiontimeout: 0, actionlp: 0, activediag: '', homedir: '', action: { requrl: 'plugins/filemanager/flm.php', request: function (data2send, onComplete, onTimeout, onError) { $.ajax({ type: 'POST', url: theWebUI.fManager.action.requrl, timeout: theWebUI.settings["webui.reqtimeout"], async : true, cache: false, data: 'dir='+encodeURIComponent(theWebUI.fManager.workpath)+'&'+data2send, dataType: "json", error: function(XMLHttpRequest, textStatus, errorThrown) { theWebUI.fManager.inaction = false; var diag = theWebUI.fManager.activediag.split('fMan_'); if(textStatus=="timeout") { if($type(onTimeout) == "function") { onTimeout(); } else { log(theUILang.fManager+': '+diag[1]+' - '+theUILang.fErrMsg[11]); } } else if(($type(onError) == "function")) { var status = "Status unavailable"; var response = "Responce unavailable"; try { status = XMLHttpRequest.status; response = XMLHttpRequest.responseText; } catch(e) {}; onError(status+" "+textStatus+" "+errorThrown,response); } else { log(theUILang.fManager+' ERROR: '+diag[1]+' - '+XMLHttpRequest.status+" "+XMLHttpRequest.responseText+" "+errorThrown); } theWebUI.fManager.cleanactions(); }, success: function(data, textStatus) { if($type(onComplete) == 'function') {onComplete(data, status); } else if(!theWebUI.fManager.isErr(data.errcode, theWebUI.fManager.activediag) && $type(data.tmpdir)) { theWebUI.fManager.actiontoken = data.tmpdir; theWebUI.fManager.actiontimeout = setTimeout(theWebUI.fManager.action.stats, 1000); } else { theWebUI.fManager.cleanactions();} } }); }, getlisting: function (dir) { $('#fManager_data table').addClass('disabled_table'); theWebUI.fManager.inaction = true; this.request('action=list&dir='+encodeURIComponent(dir), function (data) { theWebUI.fManager.inaction = false; theWebUI.fManager.parseReply(data, dir); }, function () {log(theUILang.fErrMsg[9]);}, function () {log(theUILang.fErrMsg[10]+' - '+dir);} ); }, stats: function (diag) { theWebUI.fManager.action.request('action=getlog&target='+encodeURIComponent(theWebUI.fManager.actiontoken)+'&to='+theWebUI.fManager.actionlp, function (data) { theWebUI.fManager.actionstats = data.status; theWebUI.fManager.actionlp = data.lp; theWebUI.fManager.cmdlog(data.lines); if(!theWebUI.fManager.isErr(data.errcode) && (data.status < 1)) { theWebUI.fManager.actiontimeout = setTimeout(theWebUI.fManager.action.stats, 1000); } else { theWebUI.fManager.cleanactions(); if (theWebUI.fManager.curpath == theWebUI.fManager.workpath) { theWebUI.fManager.Refresh(); } } } ); } }, actionCheck: function (diag) { if((this.actiontimeout > 0) && (this.activediag != diag)) {return null;} if(!this.dialogs[diag].hasOwnProperty('funct')) {return null;} var args = ""; var i = (arguments.length > 1) ? 1 : 0; for (i = i; i < arguments.length; i++) { var rg; switch($type(arguments[i])) { case 'string': rg = '"'+this.addslashes(arguments[i])+'"'; break; default: rg = arguments[i]; } args += rg + ($type(arguments[i+1]) ? ',' : ''); } return 'theWebUI.fManager.'+this.dialogs[diag].funct+'('+args+')'; }, addslashes: function (str) { // http://phpjs.org/functions/addslashes:303 return (str + '').replace(/[\\"\/]/g, '\\$&').replace(/\u0000/g, '\\0'); }, actStart: function (diag) { this.makeVisbile('fMan_Console'); var loader = './images/ajax-loader.gif'; if(thePlugins.isInstalled('create')) { loader = './plugins/create/images/ajax-loader.gif'; } $('#fMan_Console .buttons-list').css( "background", "transparent url("+loader+") no-repeat 15px 2px" ); $(".fMan_Stop").attr('disabled',false); this.activediag = diag; if (this.settings.cleanlog) {$('#fMan_ClearConsole').click();} else { this.cmdlog("-------\n");} this.cmdlog(theUILang.fStarts[diag]+"\n"); theDialogManager.hide('fMan_'+diag); }, actStop: function() { this.loaderHide(); this.action.request('action=kill&target='+encodeURIComponent(theWebUI.fManager.actiontoken)); this.cleanactions(); }, Archive: function(name, ext) { if(!(theWebUI.fManager.actiontoken.length > 1)) { this.doSel('CArchive'); $('#fMan_CArchivebpath').val(this.homedir+this.curpath+this.recname(name)+'.'+this.archives.types[ext]); var type = $('#fMan_archtype').empty(); $.each(this.archives.types, function(index, value) { var opt = '<option value="'+index+'">'+value.toUpperCase()+'</option>'; type.append((index == ext) ? $(opt).attr('selected', 'selected').get(0) : opt); }); type.change(); } this.makeVisbile('fMan_CArchive'); }, basename: function(str) { var isdir = this.isDir(str); var path = this.trimslashes(str); var bname = path.split('/').pop(); return ((isdir) ? bname+'/' : bname); }, buildList: function (diag) { var checks = $('#'+diag+' .checklist input:checked'); if (checks.size() == 0) {alert("Nothing is not a option"); return false;} checks.each(function(index, val) { theWebUI.fManager.actionlist[index] = theWebUI.fManager.addslashes(decodeURIComponent(val.value)); }); return true; }, checkInputs: function (diag, forcedir) { forcedir = $type(forcedir) ? true : false; var path = $.trim($('#fMan_'+diag+'bpath').val()); if(!path) {theDialogManager.hide('fMan_'+diag); return false;} if(path.length < this.homedir.length) {alert(theUILang.fDiagNoPath); return false} path = path.split(this.homedir); path = this.trimslashes(path[1]); if ((path == this.trimslashes(this.curpath)) && !forcedir) { alert(theUILang.fDiagNoPath); return false;} var funky = this.trimslashes(this.curpath) ? this.trimslashes(path.split(this.trimslashes(this.curpath)+'/')[1]).split('/').shift() : path.split('/').shift(); if ( this.isChecked('fMan_'+diag, this.basename(path)) || this.fileExists(funky)) {alert(theUILang.fDiagNoPath); return false;} return '/'+path; }, cleanactions: function () { $(".fMan_Stop").attr('disabled',true); clearTimeout(theWebUI.fManager.actiontimeout); this.loaderHide(); theWebUI.fManager.activediag = ''; theWebUI.fManager.actionlist = {}; theWebUI.fManager.actionstats = 0; theWebUI.fManager.actiontoken = 0; theWebUI.fManager.actiontimeout = 0; theWebUI.fManager.actionlp = 0; }, cleanlog: function() { $('#fMan_ConsoleLog pre').empty(); }, cmdlog: function (text) { var console = $('#fMan_ConsoleLog'); if(browser.isIE) {console.innerHTML = "<pre>"+console.html()+text+"</pre>"; } else {console.children('pre').append(text);} console[0].scrollTop = console[0].scrollHeight; }, changedir: function (target) { var dir; if(target == this.getLastPath(this.curpath)) { dir = this.getLastPath(this.curpath); } else if (target == '/') {dir = target;} else { dir = this.curpath+target; } this.action.getlisting(dir); }, Copy: function(diag) { $('#fMan_'+diag+'bpath').val(this.homedir+this.curpath); this.doSel(diag); }, createDir: function (dirname) { $('#fMan-NewDirPath').text(theWebUI.fManager.curpath); this.makeVisbile('fMan_mkdir'); }, createScreenshots: function (target) { if(!(theWebUI.fManager.actiontoken.length > 1)) { $('#fMan_Screenshotslist').html(theWebUI.fManager.curpath+'<strong>'+target+'</strong>'); $('#fMan_Screenshotsbpath').val(this.homedir+this.curpath+'screens_'+this.recname(target)+'.png'); $('#fMan_Screenshots .fMan_Start').attr('disabled',false); } this.makeVisbile('fMan_Screenshots'); }, createT: function (target) { $('#path_edit').val(this.homedir+this.curpath+target); if($('#tcreate').css('display') == 'none') {theWebUI.showCreate();} }, createTable: function() { theWebUI.tables.flm = { obj: new dxSTable(), columns: [ { text: theUILang.Name, width: "210px", id: "name", type: TYPE_STRING }, { text: theUILang.Size, width: "60px", id: "size", type: TYPE_NUMBER }, { text: '', width: "120px", id: "time", type: TYPE_STRING, "align" : ALIGN_CENTER}, { text: '', width: "80px", id: "type", type: TYPE_STRING }, { text: '', width: "80px", id: "perm", type: TYPE_NUMBER } ], container: "fManager_data", format: theWebUI.fManager.format, onselect: function(e,id) { if (theWebUI.fManager.inaction) {return false;} theWebUI.fManager.flmSelect(e,id); }, ondblclick: function(obj) { if (theWebUI.fManager.inaction) {return false;} var target = obj.id.slice(5,obj.id.length); if(theWebUI.fManager.isDir(target)) {theWebUI.fManager.changedir(target);} else {theWebUI.fManager.getFile(target);} return(false); } }; }, doSel: function(diag) { diag = 'fMan_'+diag var forcedirs = (diag == 'fMan_CreateSFV') ? true : false; if(!(theWebUI.fManager.actiontoken.length > 1)) { this.generateSelection($('#'+diag+'list'), forcedirs); $('#'+diag+' .fMan_Start').attr('disabled',false); } this.makeVisbile(diag); }, doArchive: function(button, diag) { var archive = this.checkInputs(diag); if(archive === false) {return false;} if(this.fileExists(this.basename(archive+'/'))) {alert(theUILang.fDiagArchempty); return false;} if(!this.buildList('fMan_'+diag)) {return false;} var type = $("#fMan_archtype").val(); var vsize = ((this.archives.types[type] != 'zip') && $("#fMan_multiv").is(':checked') && $("#fMan_vsize").val().match(/^\d+$/)) ? $("#fMan_vsize").val() : 0; var compression = $('#fMan_archcompr').val(); var password = $('#fMan_apassword').val(); var self = this; var options = { format: self.settings.arcnscheme, type: type, compression: compression, vsize: vsize, password: password}; $(button).attr('disabled',true); this.actStart(diag); this.action.request('action=archive&target='+encodeURIComponent(archive)+'&mode='+this.encode_string(options)+'&fls='+this.encode_string(theWebUI.fManager.actionlist)); }, doExtract: function(button, diag) { var path = this.checkInputs(diag, true); if(path === false) {return false;} var archive = $('#fMang_Archfile').text(); $(button).attr('disabled',true); this.actStart(diag); this.action.request('action=extract&target='+encodeURIComponent(archive)+'&to='+encodeURIComponent(path)); }, doSFVcheck: function(button, diag) { var sfvfile = $('#fMang_ChSFVfile').text(); $(button).attr('disabled',true); this.actStart(diag); this.action.request('action=sfvch&target='+encodeURIComponent(sfvfile)); }, doSFVcreate: function(button, diag) { var file = this.checkInputs(diag); if(file === false) {return false;} if(this.fileExists(this.basename(file+'/'))) {alert(theUILang.fDiagSFVempty); return false;} if(!this.buildList('fMan_'+diag)) {return false;} $(button).attr('disabled',true); this.actStart(diag); this.action.request('action=sfvcr&target='+encodeURIComponent(file)+'&fls='+this.encode_string(theWebUI.fManager.actionlist)); }, doDelete: function(button, diag) { if(!this.buildList('fMan_'+diag)) {return false;} $(button).attr('disabled',true); this.actStart(diag); this.action.request('action=rm&fls='+this.encode_string(theWebUI.fManager.actionlist)); }, doMove: function(button, diag) { var path = this.checkInputs(diag); if(path === false) {return false;} if(!this.buildList('fMan_'+diag)) {return false;} $(button).attr('disabled',true); this.actStart(diag); this.action.request('action=mv&to='+encodeURIComponent(path)+'&fls='+this.encode_string(theWebUI.fManager.actionlist)); }, doCopy: function(button, diag) { var path = this.checkInputs(diag); if(path === false) {return false;} if(!this.buildList('fMan_'+diag)) {return false;} $(button).attr('disabled',true); this.actStart(diag); this.action.request('action=cp&to='+encodeURIComponent(path)+'&fls='+this.encode_string(theWebUI.fManager.actionlist)); }, doNewDir: function() { var ndn = $.trim($('#fMan-ndirname').val()); if(!ndn.length) {theDialogManager.hide('fMan_mkdir'); return false;} if(!this.validname(ndn)) {alert(theUILang.fDiagInvalidname); return false;} if(this.fileExists(ndn) || this.fileExists(ndn+'/')) { alert(theUILang.fDiagAexist); return false; } theWebUI.fManager.workpath = $('#fMan-NewDirPath').text(); this.action.request('action=mkd&target='+encodeURIComponent(ndn), function (data) { if((theWebUI.fManager.curpath == theWebUI.fManager.workpath) && !theWebUI.fManager.isErr(data.errcode, ndn)) { theWebUI.fManager.Refresh(); } theDialogManager.hide('fMan_mkdir'); }, function () {log(theUILang.fErrMsg[9]);}, function () {log(theUILang.fErrMsg[4]+' - '+ndn);} ); }, doRename: function () { var nn = $.trim($('#fMan-RenameTo').val()); var on = this.basename($('#fMan-RenameWhat').text()); if(!nn.length || (on == nn)) {theDialogManager.hide('fMan_Rename'); return false; } if(!theWebUI.fManager.validname(nn)) {alert(theUILang.fDiagInvalidname); return false;} if(theWebUI.fManager.fileExists(nn) || theWebUI.fManager.fileExists(nn+'/')) {alert(theUILang.fDiagAexist); return false;} this.action.request('action=rename&target='+encodeURIComponent(on)+'&to='+encodeURIComponent(nn), function (data) { if((theWebUI.fManager.curpath == theWebUI.fManager.workpath) && !theWebUI.fManager.isErr(data.errcode, on)) { theWebUI.fManager.Refresh(); } theDialogManager.hide('fMan_Rename'); }, function () {log(theUILang.fErrMsg[11]);}, function () {log(theUILang.fErrMsg[12]+' - Rename: '+on);} ); }, doScreenshots: function (button, diag) { var screen_file = this.checkInputs(diag); if(screen_file === false) {return false;} var video = $('#fMan_Screenshotslist').text(); $(button).attr('disabled',true); this.actStart(diag); this.action.request('action=scrn&target='+encodeURIComponent(video)+'&to='+encodeURIComponent(screen_file)); }, encode_string: function(str) { return encodeURIComponent(this.json_encode(str)); }, extract: function(what, here) { if(!(theWebUI.fManager.actiontoken.length > 1)) { $('#fMang_Archfile').html(theWebUI.fManager.curpath+'<strong>'+what+'</strong>'); $('#fMan_Extractbpath').val(this.homedir+this.curpath+(here ? '' : this.recname(what))); $('#fMan_Extract .fMan_Start').attr('disabled',false); } this.makeVisbile('fMan_Extract'); }, fileExists: function(what) { var table = theWebUI.getTable("flm"); var exists = false; try {if(table.getValueById('_flm_'+what, 'name')) { throw true; } else { throw false; } } catch(dx) { if(dx === true) {exists = dx;} } return exists; }, formatDate: function (timestamp) { if(timestamp) { var d = new Date(timestamp*1000); var times = { s: d.getSeconds(), m: d.getMinutes(), h: d.getHours(), d: d.getDate(), M: d.getMonth(), y: d.getFullYear() }; for (i in times) { if(i == 'M') { times[i]++;} if (times[i] < 10) {times[i] = "0"+times[i];} } var ndt = this.settings.timef.replace(/%([dMyhms])/g, function (m0, m1) { return times[m1]; }); return ndt; } else {return '';} }, formatPerm: function (octal) { var pmap = ['-', '-xx', '-w-', '-wx', 'r--', 'r-x', 'rw-', 'rwx']; var arr = octal.split(''); var out = ''; for(i = 0; i < arr.length; i++) { out += pmap[arr[i]]; } return out; }, format: function(table,arr){ for(var i in arr) { if(arr[i]==null) { arr[i] = ''; } else { switch(table.getIdByCol(i)){ case 'name': if(theWebUI.fManager.settings.stripdirs && theWebUI.fManager.isDir(arr[i])) {arr[i] = theWebUI.fManager.trimslashes(arr[i]);} break; case 'size' : if(arr[i] != '') {arr[i] = theConverter.bytes(arr[i], 2);} break; case 'type' : if(theWebUI.fManager.isDir(arr[i])) { arr[i] = '';} else {arr[i] = theWebUI.fManager.getExt(arr[i]);} break; case 'time' : arr[i] = theWebUI.fManager.formatDate(arr[i]); break; case 'perm': if (theWebUI.fManager.settings.permf > 1) {arr[i] = theWebUI.fManager.formatPerm(arr[i]);} break; } } } return(arr); }, fPath: function() { var cpath = $('#fMan_pathsel'); cpath.children('option').each(function(index, val) { if(val.value == theWebUI.fManager.curpath) {$(this).attr('selected', 'selected');} }); for (var i = 0; i < this.paths.length; i++) { if(this.paths[i] == this.curpath) {return false;} } if(this.paths.length > this.pathlists) {this.paths.pop();} this.paths.unshift(this.curpath); cpath.empty(); for (var i = 0; i < this.paths.length; i++) { cpath.append('<option>'+this.paths[i]+'</option>'); if((this.paths[i] != '/') && (i == (this.paths.length - 1))) {cpath.append('<option value="/">/</option>');} } }, generateSelection: function(holder, forcefiles) { forcefiles = $type(forcefiles) ? forcefiles : $type(forcefiles); var container = holder.children('ul'); container.empty(); var sr = theWebUI.getTable("flm").rowSel; var topdir = this.getLastPath(this.curpath); for (i in sr) { var name = i.split('_flm_'); name = name[1]; if (sr[i] && (name != topdir) && (!forcefiles || !this.isDir(name))) { container.append('<li><label><input type="checkbox" value="'+encodeURIComponent(name)+'" checked="checked" />'+name+'</label></li>'); } } }, getExt: function(element) { if(!$type(element)) {return '';} var fname = element.split('.'); return (((element.charAt(1) == '.') && (fname.length == 2)) || (fname.pop() == element)) ? 'none' : element.split('.').pop(); }, getLastPath: function (path) { var last = '/'; path = this.trimslashes(path); if (path) { var ar = path.split('/'); ar.pop(); last += ar.join('/'); if(ar.length > 0) {last += '/';} } return(last); }, getFile: function (id) { $("#fManager_dir").val(theWebUI.fManager.curpath); $("#fManager_getfile").val(id); $("#fManager_getdata").submit(); }, getICO: function (element) { if(this.isDir(element)) { return('Icon_Dir'); } var iko; element = this.getExt(element).toLowerCase(); if(element.match(/^r[0-9]+$/)) { return('Icon_partRar'); } switch(element){ case 'mp3' : iko = 'Icon_Mp3'; break; case 'avi': case 'mp4': case 'wmv': case 'mkv': case 'divx': case 'mov': case 'flv': case 'mpeg': iko = 'Icon_Vid'; break; case 'bmp': case 'jpg': case 'jpeg': case 'png': case 'gif': iko = 'Icon_Img'; break; case 'nfo': iko = 'Icon_Nfo'; break; case 'sfv': iko = 'Icon_Sfv'; break; case 'rar': iko = 'Icon_Rar'; break; case 'zip': iko = 'Icon_Zip'; break; case 'tar': case 'gz': case 'bz2': iko = 'Icon_gnuARCH'; break; case 'torrent': iko = 'Icon_Torrent'; break; default: iko = 'Icon_File'; } return(iko); }, isChecked: function(diag, what) { var ret = false; $('#'+diag+' .checklist input:checked').each(function(index, val) { if((what == decodeURIComponent(val.value)) || (what+'/' == decodeURIComponent(val.value))) {ret = true; return false;} }); return ret; }, isDir: function(element) {return (element.charAt(element.length-1) == '/') }, isErr: function(errcode, extra) { if(!$type(extra)) {extra = '';} if(errcode > 0) { log('FILE MANAGER: '+theUILang.fErrMsg[errcode]+" : "+extra); return true; } return false; }, json_encode: function (obj) { switch($type(obj)) { case "number": return(String(obj)); case "boolean": return(obj ? "1" : "0"); case "string": return('"'+obj+'"'); case "array": { var s = ''; $.each(obj,function(key,item) { if(s.length) s+=","; s += theWebUI.fManager.json_encode(item); }); return("["+s+"]"); } case "object": { var s = ''; $.each(obj,function(key,item) { if(s.length) s+=","; s += ('"'+key+'":'+theWebUI.fManager.json_encode(item)); }); return("{"+s+"}"); } } return("null"); }, loaderHide: function () { $('#fMan_Console .buttons-list').css( "background", "none" ); }, makeVisbile: function (what) { if($('#'+what).css('overflow', 'visible').css('display') == 'none') {theDialogManager.toggle(what);} }, mediainfo: function(what) { this.cleanlog(); this.cmdlog("Fetching..."); var self = this; this.makeVisbile('fMan_Console'); var loader = './images/ajax-loader.gif'; if(thePlugins.isInstalled('create')) { loader = './plugins/create/images/ajax-loader.gif'; } $('#fMan_Console .buttons-list').css( "background", "transparent url("+loader+") no-repeat 15px 2px" ); $(".fMan_Stop").attr('disabled',true); this.action.request('action=minfo&target='+encodeURIComponent(what), function (data) { if(theWebUI.fManager.isErr(data.errcode, what)) { self.cmdlog('Failed fetching data'); return false; } self.cleanlog(); self.cmdlog(data.minfo); } ); this.loaderHide(); }, optSet: function () { if(theWebUI.configured) { var needsave = false; for (var set in theWebUI.fManager.settings) { if($type(theWebUI.settings["webui.fManager."+set])) { theWebUI.fManager.settings[set] = theWebUI.settings["webui.fManager."+set] } else { theWebUI.settings["webui.fManager."+set] = theWebUI.fManager.settings[set]; needsave = true; } } if(needsave) {theWebUI.save();} } else { setTimeout(arguments.callee,500);} }, parseReply: function(reply, dir) { $('#fManager_data table').removeClass('disabled_table'); if(this.isErr(reply.errcode, dir)) {return false;} this.curpath = dir; this.fPath(); this.TableData(reply.listing); }, Refresh: function() {this.action.getlisting(this.curpath);}, rename: function (what) { var type = (this.isDir(what)) ? 'Directory:' : 'File:'; what = this.trimslashes(what) $('#fMan-RenameType strong').text(type); $('#fMan-RenameWhat').html(theWebUI.fManager.curpath+'<strong>'+what+'</strong>'); $('#fMan-RenameTo').val(what); this.makeVisbile('fMan_Rename'); }, renameStuff: function() { var table = theWebUI.getTable("flm"); if(table.created && plugin.allStuffLoaded) { table.renameColumnById('time',theUILang.fTime); table.renameColumnById('type',theUILang.fType); table.renameColumnById('perm',theUILang.fPerm); log('FILE MANAGER ignited'); } else { setTimeout(arguments.callee,500);} }, resize: function (w, h) { if(w!==null) {w-=8;} if(h!==null) { h-=($("#tabbar").height()); h-=($("#fMan_navpath").height()) h-=2; } var table = theWebUI.getTable("flm"); if(table) {table.resize(w,h);} }, recname: function (what) { if(this.isDir(what)) { return this.trimslashes(what);} var ext = this.getExt(what); var recf = what.split(ext); if(recf.length > 1) { recf.pop(); recf = recf.join(ext).split('.'); if(recf[recf.length-1] == '') { recf.pop(); } return(recf.join('.')); } return(recf.join('')); }, sfvCreate: function(what) { $('#fMan_CreateSFVbpath').val(this.homedir+this.curpath+this.recname(what)+'.sfv'); theWebUI.fManager.doSel('CreateSFV'); }, sfvCheck: function(what) { if(!(theWebUI.fManager.actiontoken.length > 1)) { $('#fMang_ChSFVfile').html(theWebUI.fManager.curpath+'<strong>'+what+'</strong>'); $('#fMan_CheckSFV .fMan_Start').attr('disabled',false); } this.makeVisbile('fMan_CheckSFV'); }, trimslashes: function(str) { if(!$type(str)) {return '';} var ar = str.split('/'); var rar = []; for(i = 0; i < ar.length; i++) { if(ar[i]) {rar.push(ar[i]);} } return(rar.join('/')); }, TableData: function(data) { var table = theWebUI.getTable("flm"); table.clearRows(); if(this.curpath != '/') { table.addRowById({name: '../', size: '', time: '', type: '/', perm: ''}, "_flm_"+this.getLastPath(this.curpath), 'Icon_UpD'); } else { if(data.length < 1) { data = {0: {name: '/', size: '', time: '', perm: ''}}; } } $.each(data, function(ndx,file) { if(theWebUI.fManager.isDir(file.name)) { var ftype = 0;} else {var ftype = 1;} table.addRowById({ name: file.name, size: file.size, time: file.time, type: ftype+file.name, perm: file.perm }, "_flm_"+file.name, theWebUI.fManager.getICO(file.name)); if(!theWebUI.fManager.settings.showhidden && (file.name.charAt(0) == '.')) {table.hideRow("_flm_"+file.name);} }); table.refreshRows(); }, TableRegenerate: function() { var td = theWebUI.getTable("flm").rowdata; var old = {}; var x = 0; for (i in td) { if(td[i].icon == 'Icon_UpD') {continue;} old[x] = {name: td[i].data[0], size: td[i].data[1], time: td[i].data[2], type: td[i].data[3], perm: td[i].data[4]} x++; } this.TableData(old); }, validname: function (what) {return (what.split('/').length > 1) ? false : true;}, viewNFO: function (what, mode) { this.makeVisbile('fMan_Nfo'); $("#fMan_nfoformat option[value='"+mode+"']").attr('selected', 'selected'); var cont = $('#nfo_content pre'); cont.empty(); cont.text(' Loading...'); $("#fMan_nfofile").val(what); this.action.request('action=nfo&mode='+mode+'&target='+encodeURIComponent(what), function (data) { if(theWebUI.fManager.isErr(data.errcode, what)) { cont.text('Failed fetching .nfo data'); return false; } if(browser.isIE) {document.getElementById("nfo_content").innerHTML = "<pre>"+data.nfo+"</pre>";} else {cont.html(data.nfo);} } ); } }; theWebUI.fManager.flmSelect = function(e, id) { if($type(id) && (e.button == 2)) { theContextMenu.clear(); var table = theWebUI.getTable("flm"); var flm = theWebUI.fManager; var target = id.split('_flm_')[1]; var targetIsDir = flm.isDir(target); theContextMenu.add([theUILang.fOpen, (table.selCount > 1) ? null : (targetIsDir ? function () {flm.changedir(target);} : function () {flm.getFile(target);})]); if(target != flm.getLastPath(flm.curpath)) { flm.workpath = flm.curpath; var fext = flm.getExt(target); if(fext == 'nfo') { theContextMenu.add([CMENU_SEP]); theContextMenu.add([theUILang.fView, function() {flm.viewNFO(target, 1);}]); theContextMenu.add([CMENU_SEP]); } theContextMenu.add([theUILang.fCopy, flm.actionCheck('Copy')]); theContextMenu.add([theUILang.fMove, flm.actionCheck('Move')]); theContextMenu.add([theUILang.fDelete, flm.actionCheck('Delete')]); theContextMenu.add([theUILang.fRename, !(table.selCount > 1) ? flm.actionCheck('Rename', target) : null]); theContextMenu.add([CMENU_SEP]); if(fext.match(/^(zip|rar|tar|gz|bz2)$/i) && !(table.selCount > 1)) { theContextMenu.add([theUILang.fExtracta, flm.actionCheck('Extract', target, false)]); theContextMenu.add([theUILang.fExtracth, flm.actionCheck('Extract', target, true)]); theContextMenu.add([CMENU_SEP]); } var create_sub = []; create_sub.push([theUILang.fcNewTor, thePlugins.isInstalled('create') && !(table.selCount > 1) ? function () {flm.createT(target);} : null]); create_sub.push([CMENU_SEP]); create_sub.push([theUILang.fcNewDir, "theWebUI.fManager.createDir()"]); create_sub.push([theUILang.fcNewArchive, flm.actionCheck('CArchive', target, 0)]); create_sub.push([CMENU_SEP]); create_sub.push([theUILang.fcSFV, !targetIsDir ? flm.actionCheck('CreateSFV', target) : null]); create_sub.push([theUILang.fcScreens, (thePlugins.isInstalled('screenshots') && !targetIsDir && flm.getExt(target).match(new RegExp("^("+thePlugins.get('screenshots').extensions.join('|')+")$", "i")) && !(this.actiontimeout > 0)) ? flm.actionCheck('Screenshots', target) : null]); theContextMenu.add([CMENU_CHILD, theUILang.fcreate, create_sub]); theContextMenu.add([theUILang.fcheckSFV, (fext == 'sfv') ? flm.actionCheck('CheckSFV', target) : null]); theContextMenu.add([theUILang.fMediaI, (thePlugins.isInstalled('mediainfo') && !targetIsDir && !(this.actiontimeout > 0)) ? function() {flm.mediainfo(target); } : null]); } else { theContextMenu.add([theUILang.fcNewDir, "theWebUI.fManager.createDir()"]); } theContextMenu.add([CMENU_SEP]); theContextMenu.add([theUILang.fRefresh, "theWebUI.fManager.Refresh()"]); theContextMenu.show(); return(true); } return(false); } theWebUI.fManager.createDialogs = function () { theWebUI.fManager.dialogs = { optPan: { title: 'fManager', content: '<fieldset>'+ ' <legend>Display Settings</legend>'+ ' <table width="100%" border="0" cellspacing="0" cellpadding="0">'+ ' <tr>'+ ' <td>Paths history number of values:</td>'+ ' <td><input type="text" name="textfield" class="Textbox num1" id="fMan_Opthistpath" value="" /></td>'+ ' </tr>'+ ' <tr>'+ ' <td>Strip trailing slashes from directory names:</td>'+ ' <td><input type="checkbox" name="fMan_Optstripdirs" id="fMan_Optstripdirs" value="true" /></td>'+ ' </tr>'+ ' <tr>'+ ' <td>Show hidden files:</td>'+ ' <td><input type="checkbox" name="fMan_Optshowhidden" id="fMan_Optshowhidden" value="true" /></td>'+ ' </tr>'+ ' <tr>'+ ' <td>Clean console log automatically:</td>'+ ' <td><input type="checkbox" name="fMan_Optcleanlog" id="fMan_Optcleanlog" value="true" /></td>'+ ' </tr>'+ ' <tr>'+ ' <td>Permissions format:</td>'+ ' <td><select name="fMan_Optpermf" id="fMan_Optpermf">'+ ' <option value="1">Octal (0755)</option>'+ ' <option value="2">Symbolic (-rw)</option>'+ ' </select></td>'+ ' </tr>'+ ' <tr>'+ ' <td>Date - Time format:</td>'+ ' <td><input type="text" name="fMan_Opttimef" class="TextboxLarge" style="width: 160px;" id="fMan_Opttimef" value=""/></td>'+ ' </tr>'+ '<tr>'+ ' <td>'+ '<table border="0" cellspacing="0" cellpadding="0">'+ ' <tr>'+ ' <td><strong>%s</strong> - seconds</td>'+ ' <td><strong>%m</strong> - minutes</td>'+ ' </tr>'+ ' <tr>'+ ' <td><strong>%h</strong> - hours</td>'+ ' <td><strong>%d</strong> - day</td>'+ ' </tr>'+ ' <tr>'+ ' <td><strong>%M</strong> - month</td>'+ ' <td><strong>%y </strong>- year</td>'+ ' </tr>'+ '</table>'+ ' </td>'+ '<td>'+ '<table width="100%" border="0" align="right" cellpadding="0" cellspacing="0">'+ ' <tr>'+ ' <td>Format: <strong>%d</strong>.<strong>%M</strong>.<strong>%y</strong> <strong>%h</strong>:<strong>%m</strong>:<strong>%s</strong></td>'+ ' </tr>'+ ' <tr>'+ ' <td>Equals to: <strong>03</strong>.<strong>12</strong>.<strong>2011</strong> <strong>22</strong>:<strong>55</strong>:<strong>47</strong></td>'+ ' </tr>'+ '</table>'+ '</td>'+ '</tr>'+ ' </table>'+ '</fieldset><fieldset>'+ ' <legend>Archive Settings</legend>'+ ' <table width="100%" border="0" cellspacing="0" cellpadding="0"><tr>'+ ' <td>Multi-volume format:</td>'+ ' <td><select name="fMan_Optarcnscheme" id="fMan_Optarcnscheme">'+ ' <option value="new" selected="selected">NEW - .part1.rar</option>'+ ' <option value="old">OLD - .r01</option>'+ ' </select></td>'+ ' </tr>'+ ' </table>'+ '</fieldset><fieldset>'+ ' <legend>Screenshot Settings</legend>'+ ' <table width="100%" border="0" cellspacing="0" cellpadding="0"><tr>'+ ' <td>Screens rows:</td>'+ ' <td><input type="text" name="textfield" class="Textbox num1" id="fMan_Optscrows" value="" /></td>'+ ' </tr>'+ '<tr>'+ ' <td>Screens columns:</td>'+ ' <td><input type="text" name="textfield" class="Textbox num1" id="fMan_Optsccols" value="" /></td>'+ ' </tr>'+ '<tr>'+ ' <td>Thumbnail width:</td>'+ ' <td><input type="text" name="textfield" class="Textbox num1" id="fMan_Optscwidth" value="" /></td>'+ ' </tr>'+ ' </table>'+ '</fieldset>' }, CArchive: { title: 'fDiagCArchive', modal: true, funct: "Archive", content: '<fieldset><legend>'+theUILang.fDiagCArchiveSel+'</legend>'+ '<div id="fMan_CArchivelist" class="checklist"><ul></ul></div>'+ '</fieldset><fieldset><legend>Options:</legend>'+ '<label>'+theUILang.fDiagArchive+'<input type="text" id="fMan_CArchivebpath" name="fMan_CArchivebpath" class="TextboxLarge" style="width:320px;" autocomplete="off"/></label>'+ '<input type="button" value="..." id="fMan_CArchivebbut" class="Button aright"><br/>'+ ' <label style="float: left;">'+theUILang.fDiagCArchType+ ' <select name="fMan_archtype" id="fMan_archtype">'+ '</select>'+ '</label>'+ ' <label style="float: left; margin-left: 10px;">'+theUILang.fDiagCompression+ ' <select name="fMan_archcompr" id="fMan_archcompr">'+ '</select>'+ '</label>'+ '<label style="float: right;">'+theUILang.fDiagCArchVsize+'<input name="fMan_vsize" class="fMan_CArchiveRAR Textbox num1" type="text" value="" id="fMan_vsize" disabled="true" /></label>'+ '<label style="float: right;"><input name="fMan_multiv" type="checkbox" value="1" class="fMan_CArchiveRAR" id="fMan_multiv" style="margin-right: 5px; margin-top:8px;"/></label>'+ '<label style="clear:both; float: left;">Password: <input name="fMan_apassword" class="TextboxLarge fMan_CArchiveRAR" type="text" value="" id="fMan_apassword" /></label>'+ '</fieldset>'+ '<div style="clear:both;"></div>' }, CheckSFV: { title: 'fDiagSFVCheck', modal: false, funct: 'sfvCheck', content: '<fieldset><legend>'+theUILang.fDiagSFVCheckf+'</legend>'+ '<div id="fMang_ChSFVfile" style="width:440px;"></div>'+ '</fieldset>' }, Console: { title: 'fDiagConsole', modal: false, content: '<fieldset><legend>Command log:</legend>'+ '<div id="fMan_ConsoleLog" style="width:500px; height:310px;"><pre></pre></div>'+ '</fieldset>' }, Copy: { title: 'fDiagCopy', modal: true, funct: 'Copy', content: '<fieldset><legend>'+theUILang.fDiagCopySel+'</legend></fieldset>' }, CreateSFV: { title: 'fDiagSFVCreate', modal: true, funct: 'sfvCreate', content: '<fieldset><legend>'+theUILang.fDiagSFVCreateSel+'</legend></fieldset>' }, Delete: { title: 'fDiagDelete', modal: true, funct: 'doSel', content: '<fieldset><legend>'+theUILang.fDiagDeleteSel+'</legend></fieldset>' }, Extract: { title: 'fDiagExtract', modal: true, funct: "extract", content: '<fieldset><legend>'+theUILang.fDiagArchive+'</legend>'+ '<div id="fMang_Archfile" style="width:460px;"></div>'+ '</fieldset>' }, mkdir: { title: 'fDiagmkdir', modal: false, content: '<div><strong>Path of creation: </strong></div>'+ '<div id="fMan-NewDirPath" style="padding-top:3px; padding-bottom:4px; width:200px;"></div>'+ '<fieldset><legend>'+theUILang.fDiagndirname+'</legend>'+ '<input type="text" name="fMan-ndirname" id="fMan-ndirname" style="width:200px;" />'+ '</fieldset>' }, Move: { title: 'fDiagMove', modal: true, funct: 'doSel', content: '<fieldset><legend>'+theUILang.fDiagMoveSel+'</legend></fieldset>' }, Nfo: { title: 'fDiagNFO', modal: false, content: '<table width="100%" border="0" cellspacing="0" cellpadding="0"><tr><td width="8%"><strong>Format:</strong></td>'+ '<td width="92%"><select id="fMan_nfoformat" name="fMan_nfoformat">'+ '<option value="1" selected="selected">DOS</option>'+ '<option value="0">WIN</option>'+ '</select><input name="fMan_nfofile" type="hidden" id="fMan_nfofile" value="" /></td></tr>'+ '</table>'+ '<div id="nfo_content" style="width: 549px;"><pre>Loading...</pre></div>' }, Rename: { title: 'fDiagRename', modal: false, funct: 'rename', content: '<div id="fMan-RenameType"><strong></strong></div>'+ '<div id="fMan-RenameWhat" style="padding-top:3px; padding-bottom:4px; width:200px;"></div>'+ '<fieldset><legend>'+theUILang.fDiagRenameTo+'</legend>'+ '<input type="text" name="fMan-RenameTo" id="fMan-RenameTo" style="width:200px;" />'+ '</fieldset>' }, Screenshots: { title: 'fcScreens', modal: true, funct: 'createScreenshots', content: '<fieldset><legend>Video file:</legend>'+ '</fieldset>' } } plugin.attachPageToOptions($("<div>").attr("id",'fMan_optPan').html(this.dialogs.optPan.content).get(0),theUILang[this.dialogs.optPan.title]); delete this.dialogs.optPan; var buttons = '<div class="aright buttons-list">'+ '<input type="button" class="fMan_Start Button" value="'+theUILang.fDiagStart+'" class="Button" />'+ '<input type="button" class="Cancel Button" value="'+theUILang.fDiagClose+'"/>'+ '</div>'; var consbut = '<div class="aright buttons-list">'+ '<input type="button" id="fMan_ClearConsole" class="Button" value="Clear" class="Button" />'+ '<input type="button" class="fMan_Stop Button" value="'+theUILang.fDiagStop+'" class="Button" disabled="true"/>'+ '<input type="button" class="Cancel Button" value="'+theUILang.fDiagClose+'"/>'+ '</div>'; var browsediags = { CreateSFV: theUILang.fDiagSFVHashfile, Move: theUILang.fDiagMoveTo, Copy: theUILang.fDiagCopyTo, Extract: theUILang.fDiagTo, Screenshots: 'Screens image:' } var pathbrowse; for (i in this.dialogs) { var dcontent = this.dialogs[i].content; if($type(browsediags[i])) { if ((i != 'Extract') || (i != 'Screenshots')) {dcontent = $(this.dialogs[i].content).append('<div id="fMan_'+i+'list" class="checklist"><ul></ul></div>');} pathbrowse = $('<fieldset>').html($('<legend>').text(browsediags[i])). append($('<input type="text" style="width:350px;" autocomplete="off" />').attr('id', 'fMan_'+i+'bpath').addClass('TextboxLarge')). append($('<input type="button" value="..." style="float: right;" />').attr('id', 'fMan_'+i+'bbut').addClass('Button aright')); } else if ( i == 'Delete') {dcontent = $(this.dialogs[i].content).append('<div id="fMan_'+i+'list" class="checklist"><ul></ul></div>'); pathbrowse = ''} else {pathbrowse = '';} var fcontent = $('<div>').html($('<div>').addClass('cont fxcaret').html(dcontent).append(pathbrowse)).append((i != 'Nfo') ? ((i == 'Console') ? consbut : buttons) : '').get(0); theDialogManager.make('fMan_'+i, theUILang[this.dialogs[i].title], fcontent, this.dialogs[i].modal); } /* Dialogs button binds bellow: */ $('.fMan_Start').click(function() { var diagid = $(this).parents('.dlg-window:first').attr('id'); diagid = diagid.split('fMan_'); switch(diagid[1]) { case 'CArchive': theWebUI.fManager.doArchive(this, diagid[1]); break; case 'CheckSFV': theWebUI.fManager.doSFVcheck(this, diagid[1]); break; case 'CreateSFV': theWebUI.fManager.doSFVcreate(this, diagid[1]); break; case 'Copy': theWebUI.fManager.doCopy(this, diagid[1]); break; case 'Delete': theWebUI.fManager.doDelete(this, diagid[1]); break; case 'Extract': theWebUI.fManager.doExtract(this, diagid[1]); break; case 'mkdir': theWebUI.fManager.doNewDir(); break; case 'Move': theWebUI.fManager.doMove(this, diagid[1]); break; case 'Rename': theWebUI.fManager.doRename(); break; case 'Screenshots': theWebUI.fManager.doScreenshots(this, diagid[1]); break; } }); $('.fMan_Stop').click(function() { theWebUI.fManager.cmdlog(theUILang.fStops[theWebUI.fManager.activediag]+"\n"); theWebUI.fManager.actStop(); }); if(thePlugins.isInstalled("_getdir")) { browsediags.CArchive = 'arch'; var closehandle = function (diagid) {theDialogManager.setHandler('fMan_'+diagid,'afterHide', function () {plugin["bp"+diagid].hide();}); } for (sex in browsediags) { plugin['bp'+sex] = new theWebUI.rDirBrowser( 'fMan_'+sex, 'fMan_'+sex+'bpath', 'fMan_'+sex+'bbut', null, false ); closehandle(sex); } } else {for (sex in browsediags) {$('fMan_'+sex+'bbut').remove(); }} $('#fMan_pathsel').change(function() { var path = $(this).val(); if(path == theWebUI.fManager.curpath) { return false; } theWebUI.fManager.action.getlisting(path); }); $("#fMan_multiv").change(function() { var dis = $(this).is(':checked'); $("#fMan_vsize").attr("disabled", !dis); }); $("#fMan_archtype").change(function() { var type = $(this).val(); var comp = $("#fMan_archcompr"); var ext; switch(theWebUI.fManager.archives.types[type]) { case 'gzip': ext = 'tar.gz'; break; case 'bzip2': ext = 'tar.bz2'; break; default: ext = theWebUI.fManager.archives.types[type]; } $('#fMan_CArchivebpath').val(theWebUI.fManager.recname(theWebUI.fManager.recname($('#fMan_CArchivebpath').val()))+'.'+ext); $("#fMan_vsize").attr("disabled", (!$("#fMan_multiv").attr("disabled", (type != 0)).is(':checked') || (type != 0))); $('#fMan_apassword').attr("disabled", (type != 0)) comp.empty(); for(var i = 0; i < theWebUI.fManager.archives.compress[type].length; i++) { comp.append('<option value="'+i+'">'+theUILang.fManArComp[type][i]+'</option>'); } }); $("#fMan_nfoformat").change(function() { var mode = $(this).val(); var nfofile = $("#fMan_nfofile").val(); theWebUI.fManager.viewNFO(nfofile, mode) }); $('#fMan_ClearConsole').click(function() {theWebUI.fManager.cleanlog();}); $('#fMan_navbut').click(function() {theWebUI.fManager.Refresh();}); if(!thePlugins.isInstalled('data')) { $(document.body).append($("<iframe name='datafrm'/>").css({visibility: "hidden"}).attr( { name: "datafrm", id: "datafrm" } ).width(0).height(0).load(function() { var d = (this.contentDocument || this.contentWindow.document); if(d.location.href != "about:blank") try { eval(d.body.innerHTML); } catch(e) {} })); } $(document.body).append( $('<form action="'+theWebUI.fManager.action.requrl+'" id="fManager_getdata" method="post" target="datafrm">'+ '<input type="hidden" name="dir" id="fManager_dir" value="">'+ '<input type="hidden" name="target" id="fManager_getfile" value="">'+ '<input type="hidden" name="action" value="dl">'+ '</form>').width(0).height(0)); } plugin.setSettings = theWebUI.setSettings; theWebUI.setSettings = function() { if(plugin.enabled) { var needsave = false; $('#fMan_optPan').find('input,select').each(function(index, ele) { var inid = $(ele).attr('id').split('fMan_Opt'); var inval; if($(ele).attr('type') == 'checkbox') {inval = $(ele).is(':checked') ? true : false; } else { inval = $(ele).val(); } if(inval != theWebUI.settings["webui.fManager."+inid[1]]) { theWebUI.settings["webui.fManager."+inid[1]] = theWebUI.fManager.settings[inid[1]] = inval; needsave = true; } }); if(needsave) { theWebUI.save(); theWebUI.fManager.TableRegenerate(); } } plugin.setSettings.call(this); } plugin.addAndShowSettings = theWebUI.addAndShowSettings; theWebUI.addAndShowSettings = function(arg) { if(plugin.enabled) { $('#fMan_optPan').find('input, select').each(function(index, ele) { var inid = ele.id.split('fMan_Opt'); if($(ele).attr('type') == 'checkbox') { if(theWebUI.settings["webui.fManager."+inid[1]]) {$(ele).attr('checked', 'checked'); } } else if ($(ele).is("select")) { $(ele).children('option[value="'+theWebUI.settings["webui.fManager."+inid[1]]+'"]').attr('selected', 'selected'); } else { $(ele).val(theWebUI.settings["webui.fManager."+inid[1]]); } }); } plugin.addAndShowSettings.call(theWebUI,arg); } plugin.config = theWebUI.config; theWebUI.config = function(data) { theWebUI.fManager.optSet(); theWebUI.fManager.createTable(); theWebUI.fManager.renameStuff(); var table = this.getTable("flm"); table.oldFilesSortAlphaNumeric = table.sortAlphaNumeric; table.sortAlphaNumeric = function(x, y) { if(x.key.split('_flm_')[1] == theWebUI.fManager.getLastPath(theWebUI.fManager.curpath)) {return(this.reverse ? 1 : -1);} return(this.oldFilesSortAlphaNumeric(x,y)); } table.oldFilesSortNumeric = table.sortNumeric; table.sortNumeric = function(x, y) { if(x.key.split('_flm_')[1] == theWebUI.fManager.getLastPath(theWebUI.fManager.curpath)) {return(this.reverse ? 1 : -1);} return(this.oldFilesSortNumeric(x,y)); } plugin.config.call(this,data); } plugin.resizeBottom = theWebUI.resizeBottom; theWebUI.resizeBottom = function( w, h ) { theWebUI.fManager.resize(w, h); plugin.resizeBottom.call(this,w,h); } plugin.onShow = theTabs.onShow; theTabs.onShow = function(id) { if(id == "FileManager") { theWebUI.getTable('flm').refreshRows(); theWebUI.resize(); $('#fMan_showconsole').show(); } else {$('#fMan_showconsole').hide(); plugin.onShow.call(this,id);} } plugin.onLangLoaded = function() { plugin.renameTab('FileManager', theUILang.fManager); $('#tab_lcont').append('<input type="button" id="fMan_showconsole" class="Button" value="Console" style="display: none;">'); $('#fMan_showconsole').click(function() {theWebUI.fManager.makeVisbile('fMan_Console');}); injectScript('plugins/filemanager/settings.js.php'); theWebUI.fManager.createDialogs(); theWebUI.fManager.Refresh(); }; plugin.onRemove = function() { theWebUI.fManager.cleanactions(); this.removePageFromTabs('FileManager'); $('#fMan_showconsole').remove(); $('[id^="fMan_"]').remove(); } plugin.loadLang(true); })();(function () { var plugin = new rPlugin( 'fileshare',0.03,'HWK','File share plugin',256,'' ); plugin.loadMainCSS(); plugin.attachPageToTabs($('<div>').attr("id","FileShare").addClass('table_tab').get(0), 'File Share'); theWebUI.FS = { downlink: '', clip: {}, add: function (button) { var file = $('#FS_file').val(); var duration = $('#FS_duration').val(); var password = $('#FS_password').val(); if(!duration.match(/^\d+$/) || (duration < 1)) {alert(theUILang.FSvdur); return false;} if(this.islimited(this.maxdur, duration)) {alert(theUILang.FSmaxdur+' '+this.maxdur); return false} $(button).attr('disabled',true); this.query('action=add&file='+encodeURIComponent(file)+'&to='+encodeURIComponent(password)+'&target='+encodeURIComponent(duration), function() { theDialogManager.hide('FS_main'); log(theUILang.FSshow+': '+theUILang.FSlinkcreate); }); }, edit: function (button) { var duration = $('#FS_duration').val(); var password = $('#FS_password').val(); var linkid = $('#FS_lid').val(); if($.trim(duration) != '') { if (!duration.match(/^\d+$/) || (duration < 1)) {alert(theUILang.FSvdur); return false;} if(this.islimited(this.maxdur, duration)) {alert(theUILang.FSmaxdur+' '+this.maxdur); return false} } $(button).attr('disabled',true); this.query('action=edit&file='+encodeURIComponent(linkid)+'&to='+encodeURIComponent(password)+(duration ? '&target='+encodeURIComponent(duration) : '')); }, del: function () { var sr = theWebUI.getTable("fsh").rowSel; var list = {}; var x = 0; for (i in sr) { var id = i.split('_fsh_')[1]; if (sr[i]) {list[x] = id; x++;} } this.query('action=del&target='+theWebUI.fManager.encode_string(list)); }, islimited: function (max, cur) {return (max > 0) ? ((cur <= max) ? false : true) : false;}, show: function (what, how) { var file; var password; var edit = $('#FS_editbut'); var add = $('#FS_addbut'); switch(how) { case 'edit': var table = theWebUI.getTable("fsh"); file = table.getValueById('_fsh_'+what, 'name'); password = table.getValueById('_fsh_'+what, 'pass'); $('#FS_downlink').val(table.getValueById('_fsh_'+what, 'link')).show(); add.hide(); edit.show(); break; case 'add': file = theWebUI.fManager.homedir+theWebUI.fManager.curpath+what; password = ''; $('#FS_downlink').hide(); edit.hide(); add.show(); break; } $('#FS_lid').val(what); add.attr('disabled',false); edit.attr('disabled',false); $('#FS_duration').val(''); $('#FS_password').val(password); $('#FS_file').val(file); theWebUI.fManager.makeVisbile('FS_main'); }, refresh: function() {theWebUI.FS.query('action=list');}, resize: function (w, h) { if(w!==null) {w-=8;} if(h!==null) { h-=($("#tabbar").height()); h-=2; } var table = theWebUI.getTable("fsh"); if(table) {table.resize(w,h);} }, rename: function() { var table = theWebUI.getTable("fsh"); if(table.created && plugin.allStuffLoaded) { table.renameColumnById('time',theUILang.FSexpire); table.renameColumnById('name',theUILang.FSfile); table.renameColumnById('pass',theUILang.FSpassword); table.renameColumnById('link',theUILang.FSdlink); } else { setTimeout(arguments.callee,1000);} }, tableadd: function(data) { var table = theWebUI.getTable("fsh"); table.clearRows(); $.each(data.list, function(ndx,item) { table.addRowById({ name: item.file, size: item.size, time: item.expire, pass: item.password, link: theWebUI.FS.downlink+'?uh='+encodeURIComponent(data.uh)+'&s='+ndx }, "_fsh_"+ndx, 'Icon_File'); }); table.refreshRows(); }, tablecreate: function () { theWebUI.tables.fsh = { obj: new dxSTable(), columns: [ { text: '', width: "210px", id: "name", type: TYPE_STRING }, { text: theUILang.Size, width: "60px", id: "size", type: TYPE_NUMBER }, { text: '', width: "120px", id: "time", type: TYPE_STRING, "align" : ALIGN_CENTER}, { text: '', width: "80px", id: "pass", type: TYPE_STRING }, { text: '', width: "310px", id: "link", type: TYPE_STRING } ], container: "FileShare", format: theWebUI.FS.tableformat, onselect: function(e,id) { theWebUI.FS.tablemenu(e,id); } }; }, tableformat: function(table,arr) { for(var i in arr) { if(arr[i]==null) arr[i] = ''; else switch(table.getIdByCol(i)) { case 'size' : arr[i] = theConverter.bytes(arr[i], 2); break; case 'time': arr[i] = theConverter.date(iv(arr[i])+theWebUI.deltaTime/1000); break; } } return(arr); }, tablemenu: function(e, id) { if($type(id) && (e.button == 2)) { theContextMenu.clear(); var table = theWebUI.getTable("fsh"); var target = id.split('_fsh_')[1]; if(table.selCount == 1) { var link = theWebUI.getTable("fsh").getValueById('_fsh_'+target, 'link'); theWebUI.FS.clip.setText(link); } var target = id.split('_fsh_')[1]; theContextMenu.add([theUILang.fDelete, function() {askYesNo(theUILang.FSdel, theUILang.FSdelmsg, "theWebUI.FS.del()" );}]); theContextMenu.add([theUILang.FSedit, (table.selCount > 1) ? null : function() {theWebUI.FS.show(target, 'edit');}]); theContextMenu.add([CMENU_SEP]); theContextMenu.add([theUILang.FScopylink,(table.selCount > 1) ? null : function() {}]); theContextMenu.show(); if(table.selCount == 1) { var lie = theContextMenu.get(theUILang.FScopylink)[0]; if(!theWebUI.FS.clip.ready) { theWebUI.FS.clip.glue(lie); theWebUI.FS.clip.addEventListener( 'onComplete', function() {theWebUI.FS.clip.hide();} ); } theWebUI.FS.clip.reposition(lie); theWebUI.FS.clip.show(lie); } return(true); } return(false); }, query: function(action, complete, err) { $.ajax({ type: 'POST', url: 'plugins/fileshare/fsh.php', timeout: theWebUI.settings["webui.reqtimeout"], async : true, cache: false, data: action, dataType: "json", error: function(XMLHttpRequest, textStatus, errorThrown) { log('FILE SHARE: error - STATUS:'+textStatus+' MSG: '+XMLHttpRequest.responseText); }, success: function(data, textStatus) {if($type(complete)) {complete();} theWebUI.FS.tableadd(data);} }); } } plugin.config = theWebUI.config; theWebUI.config = function(data) { theWebUI.FS.tablecreate(); theWebUI.FS.rename(); plugin.config.call(this,data); } plugin.resizeBottom = theWebUI.resizeBottom; theWebUI.resizeBottom = function( w, h ) { theWebUI.FS.resize(w, h); plugin.resizeBottom.call(this,w,h); } plugin.onShow = theTabs.onShow; theTabs.onShow = function(id) { if(id == "FileShare") { $('#FS_refresh').show(); theWebUI.getTable('fsh').refreshRows(); theWebUI.resize(); } else {$('#FS_refresh').hide(); plugin.onShow.call(this,id);} } plugin.flmMenu = theWebUI.fManager.flmSelect; theWebUI.fManager.flmSelect = function( e, id ) { plugin.flmMenu.call(this, e, id); if(plugin.enabled) { var el = theContextMenu.get( theUILang.fMediaI ); if(el) { var item = id.split('_flm_')[1]; theContextMenu.add( el, [theUILang.FSshare, (!theWebUI.fManager.isDir(item) && !(theWebUI.getTable("flm").selCount > 1) && !theWebUI.FS.islimited(theWebUI.FS.maxlinks, theWebUI.getTable("fsh").rows)) ? function() {theWebUI.FS.show(item, 'add');} : null]); } } } plugin.onLangLoaded = function() { injectScript('plugins/fileshare/settings.js.php', function() {theWebUI.FS.refresh();}); injectScript('plugins/fileshare/clip/clip.js', function() { ZeroClipboard.setMoviePath('plugins/fileshare/clip/ZeroClipboard.swf'); theWebUI.FS.clip = new ZeroClipboard.Client(); }); if(this.enabled) { plugin.renameTab('FileShare', theUILang.FSshow); $('#tab_lcont').append('<input type="button" id="FS_refresh" class="Button" value="'+theUILang.fRefresh+'" style="display: none;">'); var add = '<div class="cont fxcaret"><fieldset><legend>Options:</legend>'+ '<table border="0" cellspacing="0" cellpadding="0" >'+ '<tr><td>'+theUILang.FSfile+':</td>'+ '<td align="right"><input type="text" name="FS_file" class="TextboxLarge" readonly="readonly" id="FS_file" value=""/></td>'+ '</tr><tr><td>'+theUILang.FSdhours+':</td>'+ ' <td align="right"><label><input type="text" name="FS_duration" id="FS_duration" class="Textbox" /></label></td>'+ ' </tr><tr><td>'+theUILang.FSpassword+':</td><td align="right"><label><input name="FS_password" type="text" id="FS_password" class="Textbox" />'+ '</label><input name="FS_lid" type="hidden" id="FS_lid" value="" /></td></tr></table>'+ '<textarea name="FS_downlink" rows="2" style="width: 100%" readonly="readonly" id="FS_downlink"></textarea></fieldset></div>'+ '<div class="aright buttons-list">'+ '<input type="button" id="FS_editbut" class="Button" value="'+theUILang.FSedit+'" class="Button" />'+ '<input type="button" id="FS_addbut" class="Button" value="'+theUILang.FSadd+'" class="Button" />'+ '<input type="button" class="Cancel Button" value="'+theUILang.fDiagClose+'"/>'+ '</div>'; theDialogManager.make('FS_main', theUILang.FSshow, add, false); $('#FS_addbut').click(function() {theWebUI.FS.add(this);}); $('#FS_editbut').click(function() {theWebUI.FS.edit(this);}); $('#FS_refresh').click(function() {theWebUI.FS.refresh();}); } }; plugin.onRemove = function() { this.removePageFromTabs('FileShare'); $('[id^="FS_"]').remove(); } plugin.loadLang(true); })();(function () { var plugin = new rPlugin( 'fileupload',0.02,'HWK','Sharing services file uploader',256,'' ); theWebUI.fileup = {};theWebUI.fileup.services = {"1fichier":{"login":"","password":""},"2shared":[],"4shared":[],"bayfiles":[],"dataport_cz":{"login":"","password":""},"depositfiles":{"login":"","password":""},"dl_free_fr":[],"filebox":{"login":"","password":""},"filepost":{"account":true,"login":"","password":""},"freakshare":{"login":"","password":""},"hotfile":{"account":true,"login":"","password":""},"mediafire":{"login":"","password":""},"megashares":{"email":""},"netload_in":{"login":"","password":""},"oron":{"login":"","password":"","email":""},"rapidshare":{"account":true,"login":"","password":""},"sendspace":[],"turbobit":{"login":"","password":""},"uploaded_to":{"account":true,"login":"","password":""}};plugin.loadMainCSS(); theWebUI.fileup.add_options = function () { var content = $("<div>").attr("id",'fileUP_options'); for (var i in this.services) { var service = this.services[i]; if(service.hasOwnProperty('login')) { var title = this.ucfirst(i); var table = $('<table width="100%" border="0" cellspacing="0" cellpadding="0">').attr('id', 'fileUP_'+i); for (var x in service) { var field; switch(x) { case 'password': field = $('<input type="'+x+'" />'); break; case 'account': continue; break; case 'email': continue; break; default: field = $('<input type="text" />'); } var row = $('<tr>').append('<td>'+theUILang.fileUP[x]+'</td>'). append($('<td>').addClass("alr"). append(field.addClass("TextboxLarge").attr('id', 'fileUP_'+i+'_'+x).val(service[x]))); table.append(row); } content.append($('<fieldset>').append('<legend>'+title+'</legend>').append(table)); } } plugin.attachPageToOptions(content.get(0),theUILang.fileUP.title); } theWebUI.fileup.ucfirst = function (string) { return string.charAt(0).toUpperCase() + string.slice(1); } theWebUI.fileup.create_dialog = function() { var content = '<div class="cont fxcaret">'+ '<fieldset><legend>'+theUILang.fileUP.file_info+'</legend>'+ '<div id="fileUP_filelog" style="width:550px; height:95px;"><pre></pre></div>'+ '</fieldset>'+ '<fieldset><legend>'+theUILang.fileUP.up_status+'</legend>'+ '<div id="fileUP_uplog" style="width:550px; height:110px;"><pre></pre></div>'+ '</fieldset>'+ '<div id="fileUP_upoptions"><fieldset><legend>'+theUILang.fileUP.up_options+'</legend>'+ ' <table width="100%" border="0" cellspacing="0" cellpadding="0" >'+ ' <tr>'+ ' <td>'+ ' <div id="fileUP_description">'+theUILang.fileUP.description+'<br />'+ ' <input type="text" name="textfield" class="TextboxLarge" />'+ ' </div>'+ ' </td>'+ ' <td>'+ ' <div id="fileUP_recipient">'+theUILang.fileUP.recipient+'<br />'+ ' <input type="text" name="textfield" class="TextboxLarge" />'+ ' </div>'+ ' </td>'+ ' </tr>'+ ' </table>'+ '</fieldset></div>'+ '</div>'+ '<div class="aright buttons-list">'+ '<input type="button" class="fileUP_Stop Button" value="'+theUILang.fDiagStop+'" class="Button" disabled=true />'+ '<input type="button" class="fileUP_Start Button" value="'+theUILang.fDiagStart+'" class="Button" />'+ '<input type="button" class="Cancel Button" value="'+theUILang.fDiagClose+'"/>'+ '</div>'; theDialogManager.make('fileUP_Console', theUILang.fileUP.title, content, false); $('.fileUP_Start').click(function() { theWebUI.fileup.start_up(this); }); $('.fileUP_Stop').click(function() { theWebUI.fileup.stop_up(this); }); } theWebUI.fileup.has_login = function(service) { var checks = ['login', 'password']; for (var i = 0; i < checks.length; i++) { if( this.services[service].hasOwnProperty('account') && this.services[service].hasOwnProperty(checks[i]) && ($.trim(this.services[service][checks[i]]) == '')) {return false;} } return true; } theWebUI.fileup.save = function() { this.query('action=save&fls='+theWebUI.fManager.encode_string(this.services)); } theWebUI.fileup.start_up = function (button) { var recipient = $.trim($('#fileUP_recipient').find('input').val()); if((this.selectedservice == 'megaupload') && (recipient !='' ) && !this.valid_mail(recipient)) {alert(theUILang.fileUP.invalid); return false;} var f = function (data) { if(data.tmpdir) { this.running = true; theWebUI.fileup.session = data.tmpdir; theWebUI.fileup.timer = setInterval(function () {theWebUI.fileup.status(); }, 1000 ); } } $(button).attr('disabled', true); $('.fileUP_Stop').attr('disabled', false); $('#fileUP_Console .buttons-list').css( "background", "transparent url(./plugins/create/images/ajax-loader.gif) no-repeat 15px 2px" ); var description = $.trim($('#fileUP_description').find('input').val()); var extra = (description !='' ) ? '&mode='+description : ''; extra += (recipient !='' ) ? '&to='+recipient: ''; this.query('action=upload&target='+this.selectedservice+extra+'&file='+encodeURIComponent(this.selectedfile), f); } theWebUI.fileup.stop_up = function (button) { var f = function (data) { var fl = $('#fileUP_filelog pre').append("<strong>"+theUILang.fileUP.up_stop+"</strong>\n<hr />\n"); } $(button).attr('disabled', true); var s = this.session; theWebUI.fileup.reset(); this.query('action=stop&target='+s, f); } theWebUI.fileup.status = function () { var f = function (data) { var cw = $('#fileUP_uplog'); var fl = $('#fileUP_filelog'); var fl_con = fl.find('pre'); cw.find('pre').html(data.status); cw[0].scrollTop = cw[0].scrollHeight; if(data.errcode > 0){ theWebUI.fileup.reset(); fl_con.append("<strong>"+theUILang.fileUP.failed+"</strong>\n<hr />\n") } if(data.done) { theWebUI.fileup.reset(); fl_con.append('<strong>'+theUILang.fileUP.fileurl+' </strong><a href="'+data.dllink+'" target="_blank">'+data.dllink+"</a>\n"); if($type(data.dellink)) {fl_con.append('<strong>'+theUILang.fileUP.deleteurl+' </strong><a href="'+data.dellink+'" target="_blank">'+data.dellink+"</a>\n");} fl_con.append("<hr />\n") cw.find('pre').append("\nDone!"); } fl[0].scrollTop = fl[0].scrollHeight; } this.query('action=status&target='+encodeURIComponent(this.session), f); } theWebUI.fileup.selectedfile = ""; theWebUI.fileup.selectedservice = ""; theWebUI.fileup.running = false; theWebUI.fileup.timer = 0; theWebUI.fileup.session = ''; theWebUI.fileup.prepare = function(provider) { if(!this.running) { var opt = $('#fileUP_upoptions'); var desc = $('#fileUP_description').hide(); var email = $('#fileUP_recipient').hide(); $('#fileUP_recipient').find('input').val(''); $('#fileUP_description').find('input').val(''); if( this.services[provider].hasOwnProperty('email') ) { opt.show(); email.show(); } $('#fileUP_filelog pre').append('<strong>'+theUILang.fileUP.file+' </strong>'+this.selectedfile+"\n"); this.selectedservice = provider; $('.fileUP_Start').attr('disabled', false); $('#fileUP_uplog pre').empty().html(theUILang.fileUP.preup); } theWebUI.fManager.makeVisbile('fileUP_Console'); } theWebUI.fileup.reset = function() { $('#fileUP_Console .buttons-list').css( "background", "none" ); $('.fileUP_Stop').attr('disabled', true); clearInterval(this.timer); this.running = false; this.session = ''; } theWebUI.fileup.query = function(action, complete) { $.ajax({ type: 'POST', url: 'plugins/fileupload/fup.php', timeout: theWebUI.settings["webui.reqtimeout"], async : true, cache: false, data: action, dataType: "json", error: function(XMLHttpRequest, textStatus, errorThrown) { log('FILE UPLOAD: error - STATUS:'+textStatus+' MSG: '+XMLHttpRequest.responseText); theWebUI.fileup.reset(); }, success: function(data, textStatus) { if($type(complete)) {complete(data);} } }); } theWebUI.fileup.valid_mail = function(str) { console.log(str); return str.match(/^([\w-]+(?:\.[\w-]+)*)\@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$|(\[?(\d{1,3}\.){3}\d{1,3}\]?)$/i); } plugin.addAndShowSettings = theWebUI.addAndShowSettings; theWebUI.addAndShowSettings = function(arg) { if(plugin.enabled) { for (var i in theWebUI.fileup.services) { var obj = theWebUI.fileup.services[i]; var fields = $('#fileUP_'+i).find('input, select'); if(obj && (fields.length > 0)) { for (var x in obj) {$('#fileUP_'+i+'_'+x).val(obj[x]);} } } } plugin.addAndShowSettings.call(theWebUI,arg); } plugin.setSettings = theWebUI.setSettings; theWebUI.setSettings = function() { if(plugin.enabled) { var needsave = false; for (var i in theWebUI.fileup.services) { var obj = theWebUI.fileup.services[i]; var fields = $('#fileUP_'+i).find('input, select'); if(obj && (fields.length > 0)) { for (var x in obj) { var ele = $('#fileUP_'+i+'_'+x).val(); if(ele && (ele != obj[x])) { if(x == 'email' && !theWebUI.fileup.valid_mail(ele)) {continue;} theWebUI.fileup.services[i][x] = ele; needsave = true; } } } } if(needsave) {theWebUI.fileup.save();} } plugin.setSettings.call(this); } plugin.flmMenu = theWebUI.fManager.flmSelect; theWebUI.fManager.flmSelect = function( e, id ) { plugin.flmMenu.call(this, e, id); if(plugin.enabled) { var el = theContextMenu.get( theUILang.fMediaI); if(el) { var item = id.split('_flm_')[1]; var services = [] var flup = theWebUI.fileup; for(var i in flup.services) { var ff = flup.has_login(i) ? (function(val) { flup.selectedfile = theWebUI.fManager.homedir+theWebUI.fManager.curpath+item; var f = function() {flup.prepare(val);}; return f; })(i) : null; services.push([i, ff]); } theContextMenu.add( el, (!theWebUI.fManager.isDir(item) && !(theWebUI.getTable("flm").selCount > 1)) ? [CMENU_CHILD, theUILang.fileUP.upto, services] : null); } } } plugin.onLangLoaded = function() { theWebUI.fileup.add_options(); theWebUI.fileup.create_dialog(); } plugin.loadLang(true); })();(function () { var plugin = new rPlugin( 'lookat',3.6,'Novik','This plugin allows to search for torrent name in external sources.',256,'http://code.google.com/p/rutorrent/wiki/PluginLookAt' ); plugin.lookData={"YouTube":"http:\/\/www.youtube.com\/results?search_query={title}","MetaCritic":"http:\/\/www.metacritic.com\/search\/all\/{title}\/results","IMDb":"http:\/\/www.imdb.com\/find?q={title}&s=all","Google":"https:\/\/www.google.com\/search?q={title}","TMDb":"http:\/\/www.themoviedb.org\/search?query={title}","TheTVDb":"http:\/\/thetvdb.com\/?string={title}&searchseriesid=&tab=listseries&function=Search"};plugin.partsToRemove="([\\.-](1080p|720p|x264|WEBDL|WebRip|VHSRip|CamRip|TS|DVDSCR|BluRay|BRRip|BDRemux|TC|TVRip|SATRip|DVDRip|HDTVRip|BDRip|DVD5|DVD9|MP3|HDRip|MP4|WEB-DL|Web-Rip|VHS-Rip|Cam-Rip|DVD-SCR|TV-Rip|Blu-Ray|BR-Rip|HD-Rip|BD-Remux|SCR|SAT-Rip|DVD-Rip|HDTV-Rip|BD-Rip|DVD-5|DVD-9|HDTV|MULTi8|GoG|XviD|EXTENDED|BLURAY|BLU-RAY|DTS|DD5.1)|-[^-]+$)";plugin.loadMainCSS(); plugin.loadLang(); if(plugin.canChangeOptions()) { plugin.addAndShowSettings = theWebUI.addAndShowSettings; theWebUI.addAndShowSettings = function(arg) { if(plugin.enabled) { var s = ''; for(var i in plugin.lookData) s+=(i+'|'+plugin.lookData[i]+'\r\n'); $('#lookat').val($.trim(s)); } plugin.addAndShowSettings.call(theWebUI,arg); } theWebUI.lookatWasChanged = function() { var arr = $('#lookat').val().split("\n"); var j = 0; for(var i in plugin.lookData) { if(j>=arr.length) return(true); if( i+'|'+plugin.lookData[i] != $.trim(arr[j++]) ) return(true); } return(j!=arr.length); } plugin.setlookat = function(data) { plugin.lookData = data; } plugin.setSettings = theWebUI.setSettings; theWebUI.setSettings = function() { plugin.setSettings.call(this); if(plugin.enabled && this.lookatWasChanged()) this.request("?action=setlookat",plugin.setlookat); } rTorrentStub.prototype.setlookat = function() { this.content = 'dummy=1'; var arr = $('#lookat').val().split("\n"); for(var i = 0; i<arr.length; i++) this.content = this.content+"&look="+encodeURIComponent(arr[i]); this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/lookat/action.php"; this.dataType = "json"; } } if(plugin.canChangeMenu()) { theWebUI.lookAt = function( no ) { if( $type( plugin.lookData[no] ) ) { var table = this.getTable("trt"); var hash = table.getFirstSelected() var d = this.torrents[hash]; if($type(d.name)) { var title = d.name; var patt = new RegExp( plugin.partsToRemove, 'gi' ); title = title.replace( patt, '' ); var url = plugin.lookData[no].replace( '{title}', encodeURIComponent(title).replace(/(%20|_|\.|\[|\])/g,'+') ); window.open(url, "_blank"); } } } plugin.createMenu = theWebUI.createMenu; theWebUI.createMenu = function( e, id ) { plugin.createMenu.call(this, e, id); if(plugin.enabled && plugin.allStuffLoaded) { var table = this.getTable("trt"); var el = theContextMenu.get( theUILang.Properties ); if( el ) { var _c0 = []; for(var i in plugin.lookData) _c0.push( [i, (this.getTable("trt").selCount==1) && this.isTorrentCommandEnabled("lookat",id) ? "theWebUI.lookAt('"+addslashes(i)+"')" : null] ); theContextMenu.add( el, [CMENU_CHILD, theUILang.lookAt, _c0] ); } } } } plugin.onLangLoaded = function() { this.attachPageToOptions($('<div>').attr("id","st_lookat").html( "<fieldset>"+ "<legend>"+theUILang.lookAtDesc+"</legend>"+ "<div class=\"op100l\">"+ "<textarea id='lookat'></textarea>"+ "</div>"+ "</fieldset>")[0],theUILang.lookAt); } plugin.onRemove = function() { this.removePageFromOptions("st_lookat"); } })();(function () { var plugin = new rPlugin( 'mediastream',0.01,'HWK','Video streaming plugin.',256,'' ); plugin.loadMainCSS(); theWebUI.VPLAY = { stp: 'plugins/mediastream/view.php', play: function(target) { theWebUI.fManager.action.request('action=sess', function (data) { if(theWebUI.fManager.isErr(data.errcode)) {log('Play failed'); return false;} theWebUI.fManager.makeVisbile('VPLAY_diag'); try { theWebUI.VPLAY.player.Open(theWebUI.VPLAY.stp+'?ses='+encodeURIComponent(data.sess)+'&action=view&dir='+encodeURIComponent(theWebUI.fManager.curpath)+'&target='+encodeURIComponent(target)); } catch(err) { } }); }, stop: function() {try {this.player.Stop();} catch(err) { }} } plugin.flmMenu = theWebUI.fManager.flmSelect; theWebUI.fManager.flmSelect = function( e, id ) { plugin.flmMenu.call(this, e, id); if(plugin.enabled) { var el = theContextMenu.get(theUILang.fOpen); var target = id.split('_flm_')[1]; if(el && theWebUI.fManager.getExt(target).match(/^(mp4|avi|divx|mkv)$/i)) { theContextMenu.add(el,[CMENU_SEP]); theContextMenu.add(el,[theUILang.fView, function() {theWebUI.VPLAY.play(target);}]); theContextMenu.add(el,[CMENU_SEP]); } } } plugin.onLangLoaded = function() { injectScript('plugins/mediastream/settings.js.php'); var pd = '<div class="cont fxcaret">'+ '<object id="ie_plugin" classid="clsid:67DABFBF-D0AB-41fa-9C46-CC0F21721616" width="300" height="245" codebase="http://go.divx.com/plugin/DivXBrowserPlugin.cab">'+ '<param name="custommode" value="none" />'+ '<param name="previewImage" value="" />'+ '<param name="autoPlay" value="false" />'+ '<param name="src" value="" />'+ '<embed id="np_plugin" type="video/divx" src="" custommode="none" width="300" height="245" autoPlay="false" previewImage="" pluginspage="http://go.divx.com/plugin/download/"></embed>'+ '</object></div>'; theDialogManager.make('VPLAY_diag', theUILang.mediastream, pd, false); theWebUI.VPLAY.player = (browser.isIE) ? document.getElementById('ie_plugin') : document.getElementById('np_plugin'); theDialogManager.setHandler('VPLAY_diag','afterHide', "theWebUI.VPLAY.stop()"); }; plugin.onRemove = function() { theWebUI.VPLAY.stop(); $('#VPLAY_diag').remove(); } plugin.loadLang(true); })();(function () { var plugin = new rPlugin( 'nfo',1337,'soupnazi','Displays the NFO of a torrent in a popup.',256,'' ); plugin.loadLang(); if(plugin.enabled && plugin.canChangeMenu()) { theWebUI.showNFO = function(id) { $("#nfo_text").html("Loading..."); theDialogManager.show("dlg_nfo"); var AjaxReq = jQuery.ajax({ type: "GET", timeout: theWebUI.settings["webui.reqtimeout"], async : true, cache: false, data: "id=" + id, url : "plugins/nfo/view.php", success: function(data){ if (data == '') { theDialogManager.hide("dlg_nfo"); askYesNo( theUILang.nfoNotFoundTitle, theUILang.nfoNotFound, "" ); return; } $("#nfo_text").html(data); theDialogManager.center("dlg_info"); } }); } plugin.createMenu = theWebUI.createMenu; theWebUI.createMenu = function( e, id ) { plugin.createMenu.call(this, e, id); if(plugin.enabled) { theContextMenu.add( [theUILang.showNFO, "theWebUI.showNFO('" + id + "')"] ); theDialogManager.make( 'dlg_nfo', "NFO", ''+ '<pre style=" font-size: 8px; line-height: 8px; width: 600px; height: 450px; '+ 'overflow: auto; margin: 0px; font-family: Terminal, monospace;" '+ 'id="nfo_text">Loading...</pre>'); } } } })();(function () { var plugin = new rPlugin( 'pausewebui',1.1,'Gyran','Adds an button to pause the webui from updating',256,'' ); plugin.loadMainCSS(); plugin.loadLang(true); debug = false; paused = false; window.onfocus = function() { if(debug) log("Pausewebui: focus"); if(!paused){ if(debug) log("Pausewebui: not paused on focus"); theWebUI.update(); } } window.onblur = function() { if(debug) log("Pausewebui: blur"); stop(); } function stop(){ if(debug) log("Pausewebui: stopping"); theWebUI.timer.stop(); if(theWebUI.updTimer){ if(debug) log("Pausewebui: clearing timer"); window.clearTimeout(theWebUI.updTimer); } } theWebUI.togglePause = function(){ if(debug) log("Pausewebui: toggeling"); if(paused) { if(debug) log("Pausewebui: paused -> resuming"); $("#webuiUpdateToggle").removeClass("resume"); $("#webuiUpdateToggle").addClass("pause"); $("#webuiUpdateToggle").attr("title", theUILang.pausewebuiPause); theWebUI.update(); paused = false; } else { if(debug) log("Pausewebui: !paused -> pausing"); $("#webuiUpdateToggle").removeClass("pause"); $("#webuiUpdateToggle").addClass("resume"); $("#webuiUpdateToggle").attr("title", theUILang.pausewebuiResume); stop(); paused = true; } } theWebUI.forceUpdate = function(){ if(debug) log("Pausewebui: forcing"); stop(); theWebUI.update(); if(paused){ stop(); } } originalSetInterval = theWebUI.setInterval theWebUI.setInterval = function(force){ if(debug) log("Pausewebui: trying to set interval"); if(!paused){ if(debug) log("Pausewebui: setting interval"); originalSetInterval.call(this, force); } } plugin.onLangLoaded = function() { this.addButtonToToolbar("webuiUpdateToggle", theUILang.pausewebuiPause, "theWebUI.togglePause()", "help"); this.addButtonToToolbar("webuiRefresh", theUILang.pausewebuiRefresh, "theWebUI.forceUpdate()", "help"); $("#webuiUpdateToggle").addClass("pause"); this.addSeparatorToToolbar("help"); } plugin.onRemove = function() { theWebUI.update(); this.removeSeparatorFromToolbar("webuiUpdateToggle"); this.removeButtonFromToolbar("webuiUpdateToggle"); this.removeButtonFromToolbar("webuiRefresh"); } })();(function () { var plugin = new rPlugin( 'ratiocolor',0.5,'Gyran','Change color of ratio column depending on ratio',256,'http://forums.rutorrent.org/index.php?topic=929.0' ); /*** Ratiocolors! Change the color of the ratio column according to the ratio Written by Gyran ***/ /*** TODO: Fix a working settings tab, currently only displaying your levels and colors. Currently only works in webkit browsers ****/ plugin.loadLang(); plugin.loadMainCSS(); /*** Settings ***/ // Diffrent color between diffrents levels. First level must be 0. levels = [0, 1, 3, 30]; // Colors of the diffrent levels. [r, g, b] colors = [ [255, 0, 0], [255, 255, 0], [0, 255, 0], [123, 17, 203] ]; //changeWhatEnum = ["cell-background", "font"]; // what to change: // cell-background // font changeWhat = "font"; settings = false; // not yet working as it should /* Example If ratio is 0 the color will be the first definde color. The the more the ratio approach the next level the more it goes towards the next color. When the ratio is more then the last level it will have the color of the last color. */ /****************/ function colorSub(a, b){ return [a[0] - b[0], a[1] - b[1], a[2] - b[2]]; } function colorAdd(a, b){ return [a[0] + b[0], a[1] + b[1], a[2] + b[2]]; } function colorMul(a, mul){ return [Math.floor(a[0] * mul), Math.floor(a[1] * mul), Math.floor(a[2] * mul)]; } function colorRGB(color){ return "rgb(" + color[0] + ", " + color[1] + ", " + color[2] + ")"; } theWebUI.setRatioColors = function(){ $(".stable-List-col-6").each(function(index) { ratio = $(this).children("div")[0].innerHTML color = null; proc = 0; $.each(levels, function(index, level){ if(ratio < level){ leveldiff = level - levels[index - 1]; proc = (ratio - levels[index - 1]) / leveldiff; diffColor = colorSub(colors[index], colors[index - 1]); color = colorAdd(colorMul(diffColor, proc), colors[index - 1]); return false; } }); if(color === null){ color = colors[colors.length - 1]; } switch(changeWhat) { case "font": $(this).css("color", colorRGB(color)); break; case "cell-background": default: $(this).css("background-color", colorRGB(color)); $(this).css("background-image", "none"); break; } }); }; plugin.onLangLoaded = function() { if(this.enabled) { error = false; // Error checking if(colors.length != levels.length){ log(theUILang.ratiocolorLengthError); error = true; } if(levels[0] != 0){ log(theUILang.ratiocolorLevel0); error = true; } if(!error){ plugin.tempFunc = theWebUI.tables.trt.obj.refreshRows; theWebUI.tables.trt.obj.refreshRows = function(height, fromScroll){ plugin.tempFunc.call(theWebUI.tables.trt.obj, height, fromScroll); theWebUI.setRatioColors(); }; if(settings){ rcSettingsDiv = $('<div>').attr("id","st_ratiocolor"); fieldset = $('<fieldset>').html("<legend>" + theUILang.ratiocolorLegend + "</legend>"); fieldset.append(theWebUI.ratiocolorLevelsbar(levels, colors)); // New level add divAdd = $('<div>').attr("id", "ratiocolorAddNewLevel"); divAdd.html('Level: <input id="rcAddLvl" type="text" /><br />Color: #<input id="rcAddColor" type="text" />') btnAdd = $('<input>').attr("type", "button").attr("value", "New level"); btnAdd.click(function() { levels.push($("#rcAddLvl").val()); //colors.add($("#rcAddColor").val()); colors.push([255,255,255]); theWebUI.updateRatiocolorsLevelsBar(levels, colors); }); divAdd.append(btnAdd); fieldset.append(divAdd); rcSettingsDiv.append(fieldset); typehis.attachPageToOptions(rcSettingsDiv[0], theUILang.ratiocolorSettings); } } } } theWebUI.ratiocolorLevelsbar = function(levels, colors){ div = $("<div>").attr("id","ratiocolorLevelsbar"); width = Math.floor(100/(colors.length-1)) + "%"; for(i=1;i<colors.length;++i) { level = $("<div>").addClass("level").html(levels[i]); level.attr("style", "background-image: -webkit-gradient(linear, 0% 0%, 100% 0%, from(" + colorRGB(colors[i-1]) + "), to(" + colorRGB(colors[i]) + "));"); level.css("width", width); div.append(level[0]); } return div; } theWebUI.updateRatiocolorsLevelsBar = function(levels, colors) { $('#ratiocolorLevelsbar').html(theWebUI.ratiocolorLevelsbar(levels, colors).html()); } plugin.onRemove = function() { if(settings){ this.removePageFromOptions("st_ratiocolors"); } } })();(function () { var plugin = new rPlugin( 'retrackers',3.6,'Novik','This plugin appends specified trackers to the trackers list of all newly added torrents.',256,'http://code.google.com/p/rutorrent/wiki/PluginRetrackers' ); theWebUI.retrackers = {"hash":"retrackers.dat","list":[],"todelete":[],"dontAddPrivate":1,"addToBegin":0}; plugin.loadMainCSS(); plugin.loadLang(); if(plugin.canChangeOptions()) { plugin.addAndShowSettings = theWebUI.addAndShowSettings; theWebUI.addAndShowSettings = function(arg) { if(plugin.enabled) { $('#dont_private').prop("checked",(theWebUI.retrackers.dontAddPrivate==1)); $('#add_begin').prop("checked",(theWebUI.retrackers.addToBegin==1)); var s = ''; for(var i=0; i<theWebUI.retrackers.list.length; i++) { var grp = theWebUI.retrackers.list[i]; if(i>0) s+='\r\n'; for(var j=0; j<grp.length; j++) { s+=grp[j]; s+='\r\n'; } } $('#eretrackers').val(s); s = ''; for(var i=0; i<theWebUI.retrackers.todelete.length; i++) { s+=theWebUI.retrackers.todelete[i]; s+='\r\n'; } $('#dretrackers').val(s); } plugin.addAndShowSettings.call(theWebUI,arg); } theWebUI.retrackersWasChanged = function() { if(($$('dont_private').checked!=(theWebUI.retrackers.dontAddPrivate==1)) || ($$('add_begin').checked!=(theWebUI.retrackers.addToBegin==1))) return(true); var arr = $('#eretrackers').val().split("\n"); var curGroup = new Array(); var groups = new Array(); for(var i = 0; i<arr.length; i++) { var s = $.trim(arr[i]); if(s.length) curGroup.push(s); else if(curGroup.length) { groups.push(curGroup); curGroup = new Array(); } } if(curGroup.length) groups.push(curGroup); if(groups.length!=theWebUI.retrackers.list.length) return(true); for(var i = 0; i<groups.length; i++) { if(groups[i].length!=theWebUI.retrackers.list[i].length) return(true); for(var j = 0; j<groups[i].length; j++) if(groups[i][j]!=theWebUI.retrackers.list[i][j]) return(true); } arr = $('#dretrackers').val().split("\n"); var todelete = []; for(var i=0; i<arr.length; i++) { var s = $.trim(arr[i]); if(s.length) todelete.push(s); } if(todelete.length!=theWebUI.retrackers.todelete.length) return(true); for(var i=0; i<theWebUI.retrackers.todelete.length; i++) if(theWebUI.retrackers.todelete[i]!=todelete[i]) return(true); return(false); } plugin.setSettings = theWebUI.setSettings; theWebUI.setSettings = function() { plugin.setSettings.call(this); if(plugin.enabled && this.retrackersWasChanged()) this.request("?action=setretrackers"); } rTorrentStub.prototype.setretrackers = function() { this.content = 'dont_private='+($$('dont_private').checked ? '1' : '0') + '&add_begin='+($$('add_begin').checked ? '1' : '0'); var arr = $('#eretrackers').val().split("\n"); for(var i = 0; i<arr.length; i++) { var s = $.trim(arr[i]); if(s.toLowerCase()!='dht://') this.content = this.content+"&tracker="+encodeURIComponent(s); } arr = $('#dretrackers').val().split("\n"); for(var i = 0; i<arr.length; i++) { var s = $.trim(arr[i]); if(s.length) this.content = this.content+"&todelete="+encodeURIComponent(s); } this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/retrackers/action.php"; this.dataType = "script"; } } plugin.onLangLoaded = function() { if(this.canChangeOptions()) this.attachPageToOptions( $("<div>").attr("id","st_retrackers").html( "<div>"+ "<input type='checkbox' id='dont_private' checked='true' />"+ "<label for='dont_private'>"+theUILang.dontAddToPrivate+"</label>"+ "</div>"+ "<fieldset>"+ "<legend>"+theUILang.retrackersAdd+"</legend>"+ "<div class=\"op100l\">"+ "<textarea id='eretrackers' class='retrackers'></textarea>"+ "</div>"+ "<div class=\"op100l\">"+ "<input type='checkbox' id='add_begin' checked='false' />"+ "<label for='add_begin'>"+theUILang.addToBegin+"</label>"+ "</div>"+ "</fieldset>"+ "<fieldset>"+ "<legend>"+theUILang.retrackersDel+"</legend>"+ "<div class=\"op100l\">"+ "<textarea id='dretrackers' class='retrackers'></textarea>"+ "</div>"+ "</fieldset>" )[0],theUILang.retrackers); } plugin.onRemove = function() { this.removePageFromOptions("st_retrackers"); } })();(function () { var plugin = new rPlugin( 'rpc',3.6,'Novik','This plugin is a replacement for the mod_scgi webserver module.',256,'http://code.google.com/p/rutorrent/wiki/PluginRPC' ); plugin.XMLRPCMountPoint = theURLs.XMLRPCMountPoint; theURLs.XMLRPCMountPoint = "plugins/rpc/rpc.php"; plugin.onRemove = function() { theURLs.XMLRPCMountPoint = plugin.XMLRPCMountPoint; } })();(function () { var plugin = new rPlugin( 'rss',3.6,'Novik','This plugin is designed to fetch torrents via rss download links.',256,'http://code.google.com/p/rutorrent/wiki/PluginRSS' ); plugin.loadMainCSS(); if(browser.isIE && browser.versionMajor < 8) plugin.loadCSS("ie"); plugin.loadLang(); if(plugin.canChangeOptions()) { plugin.addAndShowSettings = theWebUI.addAndShowSettings; theWebUI.addAndShowSettings = function( arg ) { if(plugin.enabled) { $('#rss_interval').val(theWebUI.updateRSSInterval/60000); } plugin.addAndShowSettings.call(theWebUI,arg); } theWebUI.rssWasChanged = function() { return( $('#rss_interval').val()!=theWebUI.updateRSSInterval/60000 ); } plugin.setSettings = theWebUI.setSettings; theWebUI.setSettings = function() { plugin.setSettings.call(this); if( plugin.enabled && this.rssWasChanged() ) theWebUI.RSSSetInterval( $('#rss_interval').val() ); } } plugin.switchLabel = theWebUI.switchLabel; theWebUI.switchLabel = function(el) { var lst = $("#RSSList"); if(lst.is(":visible")) { theWebUI.getTable("trt").clearSelection(); theWebUI.dID = ""; theWebUI.clearDetails(); theWebUI.getTable("rss").clearSelection(); if(theWebUI.actRSSLbl) $$(theWebUI.actRSSLbl).className = theWebUI.isActiveRSSEnabled() ? "RSS cat" : "disRSS cat"; theWebUI.actRSSLbl = null; theWebUI.actLbl = ""; $("#List").show(); lst.hide(); theWebUI.switchLayout(false); } if( $(el).hasClass('RSS') || $(el).hasClass('disRSS') || $(el).hasClass('RSSGroup')) theWebUI.switchRSSLabel(el); plugin.switchLabel.call(theWebUI,el); } theWebUI.isActiveRSSEnabled = function() { return((theWebUI.actRSSLbl == "_rssAll_") || (theWebUI.isGroupSelected() && (theWebUI.rssGroups[theWebUI.actRSSLbl].enabled==1)) || (!theWebUI.isGroupSelected() && theWebUI.rssLabels[theWebUI.actRSSLbl].enabled==1)); } theWebUI.updateRSSDetails = function(id) { if(id) this.request("?action=getrssdetails&s="+encodeURIComponent(id)); else $("#rsslayout").html(''); } theWebUI.switchLayout = function(toRSS,id) { if(toRSS) { $("#rsslayout").show(); $("#mainlayout").hide(); theWebUI.updateRSSDetails(id); } else { $("#mainlayout").show(); $("#rsslayout").hide(); } } theWebUI.switchRSSLabel = function(el) { if((el.id == theWebUI.actRSSLbl) && $(el).hasClass('sel')) return; if(theWebUI.actRSSLbl) $$(theWebUI.actRSSLbl).className = "cat "+(theWebUI.isActiveRSSEnabled() ? (theWebUI.isGroupSelected() ? "RSSGroup" : "RSS") : "disRSS"); theWebUI.actRSSLbl = el.id; el.className = "sel cat "+ (theWebUI.isActiveRSSEnabled() ? (theWebUI.isGroupSelected() ? "RSSGroup" : "RSS") : "disRSS"); var table = theWebUI.getTable("rss"); table.scrollTo(0); for(var k in theWebUI.rssItems) { if((theWebUI.actRSSLbl == "_rssAll_") || (theWebUI.isGroupSelected() && theWebUI.isGroupContain( theWebUI.rssGroups[theWebUI.actRSSLbl], theWebUI.rssItems[k] )) || theWebUI.rssItems[k].rss[theWebUI.actRSSLbl]) table.unhideRow(k); else table.hideRow(k); } table.clearSelection(); var lst = $("#List"); var rss = $("#RSSList"); if(lst.is(":visible")) { theWebUI.dID = ""; theWebUI.clearDetails(); if((this.actLbl != "") && ($$(this.actLbl) != null)) $($$(theWebUI.actLbl)).removeClass("sel"); plugin.correctCSS(); rss.css( { width: lst.width(), height: lst.height() } ); table.resize(lst.width(), lst.height()); table.calcSize(); rss.show(); lst.hide(); table.scrollTo(0); } theWebUI.switchLayout(true); table.refreshRows(); } plugin.config = theWebUI.config; theWebUI.config = function(data) { this.rssLabels = {}; this.rssItems = {}; this.rssGroups = {}; this.actRSSLbl = null; this.updateRSSTimer = null; this.updateRSSInterval = 5*60*1000; this.rssUpdateInProgress = false; this.rssID = ""; this.cssCorrected = false; this.rssArray = []; this.filters = []; $("#List").after($("<div>").attr("id","RSSList").css("display","none")); this.tables["rss"] = { obj: new dxSTable(), container: "RSSList", columns: cloneObject(theWebUI.tables["trt"].columns), format: this.tables.trt.format, onselect: function(e,id) { theWebUI.rssSelect(e,id) }, ondblclick: function(obj) { theWebUI.rssDblClick(obj); return(false); }, ondelete: function() { theWebUI.remove(); } }; plugin.config.call(this,data); plugin.start(); } plugin.start = function() { if(plugin.allStuffLoaded) theWebUI.request("?action=getintervals",[theWebUI.getRSSIntervals, theWebUI]); else setTimeout(arguments.callee,1000); } theWebUI.rssDblClick = function( obj ) { if($type(theWebUI.torrents[theWebUI.rssItems[obj.id].hash])) { var tmp = {}; tmp.id = theWebUI.rssItems[obj.id].hash theWebUI.getTable("trt").ondblclick( tmp ); delete tmp; } else window.open(theWebUI.rssItems[obj.id].guid,"_blank"); } theWebUI.showRSSTimer = function( tm ) { $("#rsstimer").text( theConverter.time( tm ) ).prop( "row", tm ); if(plugin.rssShowInterval) window.clearInterval( plugin.rssShowInterval ); plugin.rssShowInterval = window.setInterval( function() { var tm = $("#rsstimer").prop("row")-1; if(!tm) { $("#rsstimer").text('*'); window.clearInterval( plugin.rssShowInterval ); } $("#rsstimer").text( theConverter.time( tm ) ).prop( "row", tm ); }, 1000 ); } theWebUI.getRSSIntervals = function( d ) { if(theWebUI.updateRSSTimer) window.clearTimeout(theWebUI.updateRSSTimer); theWebUI.loadRSS(); theWebUI.updateRSSInterval = d.interval*60000; theWebUI.updateRSSTimer = window.setTimeout("theWebUI.updateRSS()", d.next*1000); theWebUI.showRSSTimer(d.next); } theWebUI.RSSSetInterval = function( interval ) { this.request("?action=setinterval&s="+interval,[this.getRSSIntervals, this]); } theWebUI.RSSMarkState = function( state ) { this.request("?action=rssmarkstate&s="+state,[this.addRSSItems, this]); } theWebUI.RSSOpen = function() { for(var i = 0; i<this.rssArray.length; i++) window.open(this.rssArray[i],"_blank"); } theWebUI.RSSLoad = function() { theDialogManager.show("dlgLoadTorrents"); } theWebUI.RSSLoadTorrents = function() { this.request("?action=loadrsstorrents",[this.addRSSItems, this]); } theWebUI.RSSClearHistory = function() { this.request("?action=clearhistory",[this.addRSSItems, this]); } theWebUI.RSSRefresh = function() { this.requestWithTimeout("?action=rssrefresh",[this.addRSSItems, this],theWebUI.retryRSSRequest); } theWebUI.RSSToggleStatus = function() { this.request("?action=rsstoggle",[this.addRSSItems, this]); } theWebUI.doRSSDelete = function() { theWebUI.request("?action=rssremove",[this.addRSSItems, this]); } theWebUI.RSSDelete = function() { if(theWebUI.settings["webui.confirm_when_deleting"]) askYesNo( theUILang.rssMenuDelete, theUILang.rssDeletePrompt, "theWebUI.doRSSDelete()" ); else theWebUI.doRSSDelete(); } theWebUI.RSSEdit = function() { if(theWebUI.actRSSLbl && theWebUI.rssLabels[this.actRSSLbl]) { $('#editrssURL').val( theWebUI.rssLabels[this.actRSSLbl].url ); $('#editrssLabel').val( theWebUI.rssLabels[this.actRSSLbl].name ); theDialogManager.show("dlgEditRSS"); } } theWebUI.RSSManager = function() { theWebUI.request("?action=getfilters",[this.loadFilters, this]); } theWebUI.rssLabelContextMenu = function(e) { if(e.which==3) { if(plugin.canChangeMenu()) { theWebUI.getTable("trt").clearSelection(); theWebUI.getTable("rss").clearSelection(); theWebUI.switchLabel(this); theWebUI.getTable("rss").fillSelection(); theWebUI.createRSSMenu(null, null); theContextMenu.show(); } else { theContextMenu.hide(); theWebUI.switchLabel(this); } } else theWebUI.switchLabel(this); return(false); } theWebUI.fillRSSGroups = function() { var content = $("#rssGroupSet"); content.children().remove(); var s = ''; for(var lbl in this.rssLabels) s += ("<input type=checkbox id='grp_"+lbl+"'><label for='grp_"+lbl+"' id='lbl_grp_"+lbl+"'>"+this.rssLabels[lbl].name+"</label><br/>"); content.html(s); } theWebUI.RSSEditGroup = function() { theWebUI.fillRSSGroups(); var grp = theWebUI.rssGroups[this.actRSSLbl]; for(var i=0; i<grp.lst.length; i++) $('#grp_'+grp.lst[i]).prop('checked',true); $("#rssGroupLabel").val(grp.name); $("#dlgAddRSSGroup-header").html(theUILang.editRSSGroup); $("#rssGroupHash").val(this.actRSSLbl); theDialogManager.show("dlgAddRSSGroup"); } theWebUI.RSSAddGroup = function() { theWebUI.fillRSSGroups(); $("#dlgAddRSSGroup-header").html(theUILang.addRSSGroup); $("#rssGroupHash").val(''); $("#rssGroupLabel").val(''); theDialogManager.show("dlgAddRSSGroup"); } theWebUI.addRSSGroup = function() { theDialogManager.hide("dlgAddRSSGroup"); this.requestWithTimeout("?action=addrssgroup",[this.addRSSItems, this],theWebUI.retryRSSRequest); } theWebUI.RSSGroupSetStatus = function(enable) { theWebUI.request("?action=rssgroupstatus&s="+enable,[this.addRSSItems, this]); } theWebUI.RSSGroupRefresh = function() { this.requestWithTimeout("?action=rssgrouprefresh",[this.addRSSItems, this],theWebUI.retryRSSRequest); } theWebUI.doRSSGroupDelete = function() { theWebUI.request("?action=rssgroupremove",[this.addRSSItems, this]); } theWebUI.RSSGroupDelete = function() { if(theWebUI.settings["webui.confirm_when_deleting"]) askYesNo( theUILang.rssMenuGroupDelete, theUILang.rssDeleteGroupPrompt, "theWebUI.doRSSGroupDelete()" ); else theWebUI.doRSSGroupDelete(); } theWebUI.doRSSGroupContentsDelete = function() { theWebUI.request("?action=rssgroupremovecontents",[this.addRSSItems, this]); } theWebUI.RSSGroupDeleteContents = function() { if(theWebUI.settings["webui.confirm_when_deleting"]) askYesNo( theUILang.rssMenuGroupDeleteContents, theUILang.rssDeleteGroupContentsPrompt, "theWebUI.doRSSGroupContentsDelete()" ); else theWebUI.doRSSGroupContentsDelete(); } theWebUI.createRSSMenuPrim = function() { if(plugin.canChangeMenu()) { theContextMenu.add([ theUILang.rssMenuClearHistory, "theWebUI.RSSClearHistory()"]); theContextMenu.add([ theUILang.addRSS, "theDialogManager.toggle('dlgAddRSS')"]); theContextMenu.add([ theUILang.addRSSGroup, "theWebUI.RSSAddGroup()"]); theContextMenu.add([ theUILang.rssMenuManager, "theWebUI.RSSManager()"]); if(theWebUI.actRSSLbl) { theContextMenu.add([CMENU_SEP]); if(this.actRSSLbl == "_rssAll_") { theContextMenu.add([ theUILang.rssMenuDisable ]); theContextMenu.add([ theUILang.rssMenuEdit ]); theContextMenu.add([ theUILang.rssMenuRefresh, "theWebUI.RSSRefresh()"]); theContextMenu.add([ theUILang.rssMenuDelete ]); } else { if(this.isGroupSelected()) { if(this.rssGroups[this.actRSSLbl].enabled==1) { theContextMenu.add([ theUILang.rssMenuGroupDisable, "theWebUI.RSSGroupSetStatus(0)"]); theContextMenu.add([ theUILang.rssMenuGroupRefresh, "theWebUI.RSSGroupRefresh()"]); } else { theContextMenu.add([ theUILang.rssMenuGroupEnable, (this.rssGroups[this.actRSSLbl].cnt==0) ? null : "theWebUI.RSSGroupSetStatus(1)"]); theContextMenu.add([ theUILang.rssMenuGroupRefresh ]); } theContextMenu.add([ theUILang.rssMenuGroupEdit, "theWebUI.RSSEditGroup()"]); theContextMenu.add([ theUILang.rssMenuGroupDelete, "theWebUI.RSSGroupDelete()"]); theContextMenu.add([ theUILang.rssMenuGroupContentsDelete, "theWebUI.RSSGroupDeleteContents()"]); } else { if(this.rssLabels[this.actRSSLbl].enabled==1) { theContextMenu.add([ theUILang.rssMenuDisable, "theWebUI.RSSToggleStatus()"]); theContextMenu.add([ theUILang.rssMenuRefresh, "theWebUI.RSSRefresh()"]); } else { theContextMenu.add([ theUILang.rssMenuEnable, "theWebUI.RSSToggleStatus()"]); theContextMenu.add([ theUILang.rssMenuRefresh ]); } theContextMenu.add([ theUILang.rssMenuEdit, "theWebUI.RSSEdit()"]); theContextMenu.add([ theUILang.rssMenuDelete, "theWebUI.RSSDelete()"]); } } } } else theContextMenu.hide(); theWebUI.dID = ""; theWebUI.clearDetails(); } theWebUI.RSSAddToFilter = function() { theWebUI.request("?action=getfilters",[this.loadFiltersWithAdditions, this]); } theWebUI.createRSSMenu = function(e, id) { var trtArray = []; this.rssArray = []; var sr = this.getTable("rss").rowSel; for(var k in sr) { if(sr[k] == true) { var hash = this.rssItems[k].hash; if(hash && $type(theWebUI.torrents[hash])) trtArray.push(hash); else this.rssArray.push(k); } } theContextMenu.clear(); if(this.rssArray.length) { if(plugin.canChangeMenu()) { theContextMenu.add([ theUILang.rssMenuLoad, "theWebUI.RSSLoad()"]); theContextMenu.add([ theUILang.rssMenuOpen, "theWebUI.RSSOpen()"]); theContextMenu.add([ theUILang.rssMenuAddToFilter, "theWebUI.RSSAddToFilter()"]); theContextMenu.add([CMENU_CHILD, theUILang.rssMarkAs, [ [ theUILang.rssAsLoaded, "theWebUI.RSSMarkState(1)"], [ theUILang.rssAsUnloaded, "theWebUI.RSSMarkState(0)"] ]]); theContextMenu.add([CMENU_SEP]); theWebUI.createRSSMenuPrim(); } else theContextMenu.hide(); } else if(trtArray.length) { var table = this.getTable("trt"); for(var k in table.rowSel) table.rowSel[k] = false; table.selCount = trtArray.length; for(var i = 0; i<trtArray.length; i++) table.rowSel[trtArray[i]] = true; table.refreshSelection(); this.dID = trtArray[0]; theWebUI.createMenu(e, trtArray[0]); theContextMenu.add([CMENU_SEP]); theWebUI.createRSSMenuPrim(); } else theWebUI.createRSSMenuPrim(); } theWebUI.rssSelect = function(e, id) { var sr = theWebUI.getTable("rss").rowSel; var trtArray = []; for(var k in sr) { if(sr[k] == true) { var hash = theWebUI.rssItems[k].hash; if(hash && $type(theWebUI.torrents[hash])) trtArray.push(hash); } } var table = theWebUI.getTable("trt"); for(var k in table.rowSel) table.rowSel[k] = false; table.selCount = trtArray.length; for(var i = 0; i<trtArray.length; i++) table.rowSel[trtArray[i]] = true; table.refreshSelection(); if(id && $type(theWebUI.torrents[theWebUI.rssItems[id].hash])) theWebUI.trtSelect(e, theWebUI.rssItems[id].hash); else { theWebUI.dID = ""; theWebUI.clearDetails(); if((e.which==3) && plugin.canChangeMenu()) { theWebUI.createRSSMenu(e, id); theContextMenu.show(); } else theContextMenu.hide(); } theWebUI.switchLayout(!(id && $type(theWebUI.torrents[theWebUI.rssItems[id].hash])),id); } plugin.loadTorrents = theWebUI.loadTorrents; theWebUI.loadTorrents = function(needSort) { plugin.loadTorrents.call(this,needSort); if(plugin.enabled && plugin.allStuffLoaded) { var updated = false; var table = this.getTable("rss"); for(var href in this.rssItems) { var item = this.rssItems[href]; if((item.hash!="") && $type(this.torrents[item.hash])) updated = table.updateRowFrom(this.getTable("trt"),item.hash,href) || updated; else { updated = table.setValuesById(href, { name: item.title, status: (item.hash=="") ? theUILang.rssStatus : (item.hash=="Failed") ? theUILang.rssStatusError+" ("+item.errcount+")" : theUILang.rssStatusLoaded, label: item.label, created: item.time },true) || updated; updated = table.setIcon(href,"Status_RSS") || updated; } } if(updated && (table.sIndex !=- 1)) table.Sort(); } } theWebUI.updateRSS = function() { if(theWebUI.updateRSSTimer) window.clearTimeout(theWebUI.updateRSSTimer); theWebUI.loadRSS(); theWebUI.updateRSSTimer = window.setTimeout("theWebUI.updateRSS()", theWebUI.updateRSSInterval); theWebUI.showRSSTimer( theWebUI.updateRSSInterval/1000 ); } theWebUI.retryRSSRequest = function() { theWebUI.timeout(); window.setTimeout("theWebUI.loadRSS()", theWebUI.settings["webui.reqtimeout"]); } theWebUI.loadRSS = function() { this.requestWithTimeout("?action=loadrss",[this.addRSSItems, this], theWebUI.retryRSSRequest); } theWebUI.processRSS = function(action,elURL,elLbl) { var url = $.trim(elURL.val()); var lbl = $.trim(elLbl.val()); var re = new RegExp(); re.compile("^[A-Za-z]+://[A-Za-z0-9-]+\.[A-Za-z0-9]+"); if(!re.test(url)) alert(theUILang.incorrectURL); else { elURL.val(''); elLbl.val(''); this.requestWithTimeout("?action="+action+"&v="+encodeURIComponent(url)+"&s="+encodeURIComponent(lbl),[this.addRSSItems, this],theWebUI.retryRSSRequest); } } theWebUI.addRSS = function() { theWebUI.processRSS("addrss",$("#rssURL"),$("#rssLabel")); } theWebUI.editRSS = function() { theWebUI.processRSS("editrss",$("#editrssURL"),$("#editrssLabel")); } theWebUI.isGroupContain = function( rssGroup, rssItem ) { for( var i=0; i<rssGroup.lst.length; i++ ) if(rssItem.rss[rssGroup.lst[i]]) return(true); return(false); } theWebUI.updateCounters = function( rssGroup, rssLabels ) { var hrefs = {}; for( var href in theWebUI.rssItems ) { if( theWebUI.isGroupContain(rssGroup, theWebUI.rssItems[href]) ) hrefs[href] = true; } rssGroup.cnt = propsCount(hrefs); rssGroup.enabled = 0; for( var i=0; i<rssGroup.lst.length; i++ ) if( $type(rssLabels[rssGroup.lst[i]]) && rssLabels[rssGroup.lst[i]].enabled ) { rssGroup.enabled = 1; break; } } theWebUI.isGroupSelected = function() { return(this.actRSSLbl && this.actRSSLbl.length && (this.actRSSLbl[0]=='g')); } theWebUI.updateRSSLabels = function(rssLabels,rssGroups) { var ul = $("#rssl"); var needSwitch = false; for( var lbl in rssGroups ) { var li = null; this.updateCounters( rssGroups[lbl], rssLabels ); if(lbl in this.rssGroups) { li = $($$(lbl)); li.html( escapeHTML(rssGroups[lbl].name)+'&nbsp;(<span id="'+lbl+'_c">'+rssGroups[lbl].cnt+'</span>)' ); } else { li = $("<li>").attr("id",lbl). html( escapeHTML(rssGroups[lbl].name)+'&nbsp;(<span id="'+lbl+'_c">'+rssGroups[lbl].cnt+'</span>)'); ul.append(li); } li.attr("title",rssGroups[lbl].name+" ("+rssGroups[lbl].cnt+")"); if(lbl==this.actRSSLbl) li[0].className = (rssGroups[lbl].enabled==1) ? "sel RSSGroup cat" : "sel disRSS cat"; else li[0].className = (rssGroups[lbl].enabled==1) ? "RSSGroup cat" : "disRSS cat"; li.mouseclick( this.rssLabelContextMenu ); } for(var lbl in this.rssGroups) if(!(lbl in rssGroups)) { $($$(lbl)).remove(); if(this.actRSSLbl == lbl) { needSwitch = true; this.actRSSLbl = null; } } this.rssGroups = rssGroups; var keys = []; for(var lbl in rssLabels) keys.push(lbl); keys.sort( function(a,b) { return((rssLabels[a].name>rssLabels[b].name) ? 1 : (rssLabels[a].name<rssLabels[b].name) ? -1 : 0); } ); var allCnt = propsCount(this.rssItems); $("#_rssAll_c").text(allCnt); $("#_rssAll_").prop("title",theUILang.allFeeds+" ("+allCnt+")"); for(var i=0; i<keys.length; i++) { var lbl = keys[i]; var li = null; if(lbl in this.rssLabels) { li = $($$(lbl)); li.html( escapeHTML(rssLabels[lbl].name)+'&nbsp;(<span id="'+lbl+'_c">'+rssLabels[lbl].cnt+'</span>)' ); } else { li = $("<li>").attr("id",lbl). html( escapeHTML(rssLabels[lbl].name)+'&nbsp;(<span id="'+lbl+'_c">'+rssLabels[lbl].cnt+'</span>)'); ul.append(li); } li.attr("title",rssLabels[lbl].name+" ("+rssLabels[lbl].cnt+")"); if(lbl==this.actRSSLbl) li[0].className = (rssLabels[lbl].enabled==1) ? "sel RSS cat" : "sel disRSS cat"; else li[0].className = (rssLabels[lbl].enabled==1) ? "RSS cat" : "disRSS cat"; li.mouseclick( this.rssLabelContextMenu ); } for(var lbl in this.rssLabels) if(!(lbl in rssLabels)) { $($$(lbl)).remove(); if(this.actRSSLbl == lbl) { needSwitch = true; this.actRSSLbl = null; } } this.rssLabels = rssLabels; if(needSwitch) this.switchLabel($$("_rssAll_")); else if(this.actRSSLbl) { var actRSSLbl = theWebUI.actRSSLbl; theWebUI.actRSSLbl = null; this.switchLabel($$(actRSSLbl)); } } theWebUI.showRSS = function() { plugin.correctCSS(); if($('#rssl').children().length) theWebUI.RSSManager(); else theDialogManager.toggle("dlgAddRSS"); } theWebUI.showErrors = function(d) { for( var i=0; i<d.errors.length; i++) { var s = ''; if(d.errors[i].time) s = "["+theConverter.date(iv(d.errors[i].time)+theWebUI.deltaTime/1000)+"] "; s += eval(d.errors[i].desc); if(d.errors[i].prm) s = s + " ("+d.errors[i].prm+")"; noty(s,"error",true); } } theWebUI.addRSSItems = function(d) { if(!this.rssUpdateInProgress) { for(var href in this.rssItems) this.rssItems[href].rss = {}; var updated = false; this.rssUpdateInProgress = true; this.showErrors(d); var rssLabels = {}; var table = this.getTable("rss"); for( var i=0; i<d.list.length; i++) { var rss = d.list[i]; rssLabels[rss.hash] = { name: rss.label, cnt: rss.items.length, enabled: rss.enabled, url: rss.url }; for( var j=0; j<rss.items.length; j++) { var item = rss.items[j]; if($type(theWebUI.rssItems[item.href])) { if($type(this.torrents[item.hash])) updated = table.updateRowFrom(this.getTable("trt"),item.hash,item.href); else { updated = table.setValuesById(item.href, { name: item.title, status: (item.hash=="") ? theUILang.rssStatus : (item.hash=="Failed") ? theUILang.rssStatusError+" ("+item.errcount+")" : theUILang.rssStatusLoaded, label: rss.label, created: item.time },true) || updated; updated = table.setIcon(item.href,"Status_RSS") || updated; } item.rss = theWebUI.rssItems[item.href].rss; } else { if((item.hash!="") && $type(this.torrents[item.hash])) { table.addRow(this.getTable("trt").getValues(item.hash), item.href, this.getTable("trt").getIcon(item.hash)); } else { table.addRowById( { name: item.title, status: (item.hash=="") ? theUILang.rssStatus : (item.hash=="Failed") ? theUILang.rssStatusError+" ("+item.errcount+")" : theUILang.rssStatusLoaded, label: rss.label, created: item.time }, item.href, "Status_RSS"); } updated = true; item.rss = {}; } item.rss[rss.hash] = true; item.label = rss.label; theWebUI.rssItems[item.href] = item; } } for(var href in this.rssItems) { if(!plugin.getFirstRSS(this.rssItems[href])) { updated = true; delete this.rssItems[href]; table.removeRow(href); } } if(updated) table.Sort(); this.updateRSSLabels(rssLabels,d.groups); this.rssUpdateInProgress = false; } } theWebUI.storeFilterParams = function() { var no = 0; if(this.curFilter) { no = parseInt(this.curFilter.id.substr(3)); this.filters[no].pattern = $('#FLT_body').val(); this.filters[no].exclude = $('#FLT_exclude').val(); this.filters[no].dir = $('#FLTdir_edit').val(); this.filters[no].add_path = $('#FLTnot_add_path').prop("checked") ? 0 : 1; this.filters[no].start = $('#FLTtorrents_start_stopped').prop("checked") ? 0 : 1; this.filters[no].label = $('#FLT_label').val(); this.filters[no].chktitle = $('#FLTchktitle').prop("checked") ? 1 : 0; this.filters[no].chkdesc = $('#FLTchkdesc').prop("checked") ? 1 : 0; this.filters[no].chklink = $('#FLTchklink').prop("checked") ? 1 : 0; this.filters[no].hash = $('#FLT_rss').val(); this.filters[no].interval = $('#FLT_interval').val(); this.filters[no].throttle = $('#FLT_throttle').val(); this.filters[no].ratio = $('#FLT_ratio').val(); } return(no); } plugin.editFilersBtn = null; theWebUI.selectFilter = function( el ) { if(this.curFilter!=el) { if(this.curFilter) this.curFilter.className = 'TextboxNormal'; this.storeFilterParams(); this.curFilter = el; this.curFilter.className = 'TextboxFocus'; var no = parseInt(this.curFilter.id.substr(3)); var flt = this.filters[no]; $('#FLT_body').val(flt.pattern); $('#FLT_exclude').val(flt.exclude); $('#FLTdir_edit').val(flt.dir); $('#FLTnot_add_path').prop("checked",(flt.add_path==0)); $('#FLTtorrents_start_stopped').prop("checked",(flt.start==0)); $('#FLTchktitle').prop("checked",(flt.chktitle==1)); $('#FLTchkdesc').prop("checked",(flt.chkdesc==1)); $('#FLTchklink').prop("checked",(flt.chklink==1)); $('#FLT_label').val(flt.label); $('#FLT_rss').val(flt.hash); $('#FLT_interval').val(flt.interval); $('#FLT_throttle').val(flt.throttle); $('#FLT_ratio').val(flt.ratio); if(plugin.editFilersBtn) plugin.editFilersBtn.hide(); } } theWebUI.loadFiltersWithAdditions = function( flt ) { function makePatternString(s) { var ret = "/^"; var specChars = "?*+#\^$.[]|(){}/"; for(var i = 0; i<s.length; i++) { var c = s.charAt(i); if(specChars.indexOf(c)>=0) ret = ret + "\\"; ret+=c; } return(ret+"$/"); } var additions = []; for(var i = 0; i<this.rssArray.length; i++) { var s = this.rssItems[this.rssArray[i]].title; additions.push( { name: s, enabled: 1, pattern: makePatternString(s), exclude: "", label: "", hash: "", start: 1, add_path: 1, dir: "", throttle: "", ratio: "", chktitle: 1, chkdesc: 0, chklink: 0, interval: -1, no: -1 } ); } this.loadFilters( flt, additions ); } theWebUI.maxFilterNo = 0; theWebUI.loadFilters = function( flt, additions ) { this.curFilter = null; var list = $("#fltlist"); list.empty(); $('#FLT_rss option').remove(); $('#FLT_rss').append("<option value=''>"+theUILang.allFeeds+"</option>"); for(var lbl in this.rssGroups) $('#FLT_rss').append("<option value='"+lbl+"'>"+this.rssGroups[lbl].name+"</option>"); for(var lbl in this.rssLabels) $('#FLT_rss').append("<option value='"+lbl+"'>"+this.rssLabels[lbl].name+"</option>"); var fltThrottle = $('#FLT_throttle'); if(fltThrottle.length) { $('#FLT_throttle option').remove(); fltThrottle.append("<option value=''>"+theUILang.mnuUnlimited+"</option>"); for(var i=0; i<theWebUI.maxThrottle; i++) if(theWebUI.isCorrectThrottle(i)) fltThrottle.append("<option value='thr_"+i+"'>"+theWebUI.throttles[i].name+"</option>"); } var fltRatio = $('#FLT_ratio'); if(fltRatio.length) { $('#FLT_ratio option').remove(); fltRatio.append("<option value=''>"+theUILang.mnuRatioUnlimited+"</option>"); for(var i=0; i<theWebUI.maxRatio; i++) if(theWebUI.isCorrectRatio(i)) fltRatio.append("<option value='rat_"+i+"'>"+theWebUI.ratios[i].name+"</option>"); } this.filters = flt; if(additions) this.filters = additions.concat(this.filters); theWebUI.maxFilterNo = 0; for(var i=0; i<this.filters.length; i++) { var f = this.filters[i]; if(theWebUI.maxFilterNo<f.no) theWebUI.maxFilterNo = f.no; list.append( $("<li>").html("<input type='checkbox' id='_fe"+i+"'/><input type='text' class='TextboxNormal' onfocus=\"theWebUI.selectFilter(this);\" id='_fn"+i+"'/>")); $("#_fn"+i).val(f.name); if(f.enabled) $("#_fe"+i).prop("checked",true); } for(var i=0; i<this.filters.length; i++) { var f = this.filters[i]; if(f.no<0) { theWebUI.maxFilterNo++; f.no = theWebUI.maxFilterNo; } } theDialogManager.show("dlgEditFilters"); $("#_fn0").focus(); } theWebUI.addNewFilter = function() { var list = $("#fltlist"); theWebUI.maxFilterNo++; var f = { name: theUILang.rssNewFilter, enabled: 1, pattern: "", exclude: "", label: "", hash: "", start: 1, add_path: 1, dir: "", throttle: "", ratio: "", chktitle: 1, chkdesc: 0, chklink: 0, interval: -1, no: theWebUI.maxFilterNo }; var i = this.filters.length; list.append( $("<li>").html("<input type='checkbox' id='_fe"+i+"'/><input type='text' class='TextboxNormal' onfocus=\"theWebUI.selectFilter(this);\" id='_fn"+i+"'/>")); this.filters.push(f); $("#_fn"+i).val( f.name ); if(f.enabled) $("#_fe"+i).prop("checked",true); $("#_fn"+i).focus(); } theWebUI.deleteCurrentFilter = function() { var no = parseInt(this.curFilter.id.substr(3)); this.filters.splice(no,1); $(this.curFilter).parent().remove(); this.curFilter = null; if(this.filters.length) { for(var i=no+1; i<this.filters.length+1; i++) { $("#_fn"+i).prop("id", "_fn"+(i-1)); $("#_fe"+i).prop("id", "_fe"+(i-1)); } if(no>=this.filters.length) no = no - 1; $("#_fn"+no).focus(); } else { if(plugin.editFilersBtn) plugin.editFilersBtn.hide(); $('#FLT_body,#FLT_exclude,#FLTdir_edit,#FLT_label,#FLT_rss,#FLT_throttle,#FLT_ratio').val(''); $('#FLTnot_add_path,#FLTchkdesc,#FLTchklink,#FLTtorrents_start_stopped').prop("checked",false); $('#FLTchktitle').prop("checked",true); $('#FLT_interval').val(-1); } } theWebUI.checkCurrentFilter = function() { if(this.curFilter) this.request("?action=checkfilter",[this.showFilterResults, this]); } theWebUI.showFilterResults = function( d ) { this.showErrors(d); if(d.rss.length) this.switchLabel($$(d.rss)); else this.switchLabel($$('_rssAll_')); var table = this.getTable("rss"); for(var k in table.rowSel) table.rowSel[k] = false; this.getTable("trt").selCount = d.count; var labels = []; var dirs = []; for(var i in d.list) { table.rowSel[i] = true; if(d.list[i].dir.length) { if(dirs.length<3) dirs.push(d.list[i].dir); else if(dirs.length==3) dirs.push('...'); } if(d.list[i].label.length) { if(labels.length<3) labels.push(d.list[i].label); else if(labels.length==3) labels.push('...'); } } table.refreshSelection(); var s = theUILang.foundedByFilter+" : "+d.count; if(labels.length) s+=('\n'+theUILang.Labels+" : "+labels.join(", ")); if(dirs.length) s+=('\n'+theUILang.Directories+" : "+dirs.join(", ")); alert(s); } theWebUI.setFilters = function() { this.request("?action=setfilters",[this.addRSSItems, this]); } theWebUI.rssClearFilter = function() { if(this.curFilter) { var no = theWebUI.storeFilterParams(); var flt = theWebUI.filters[no]; if(flt.interval>=0) this.request("?action=clearfiltertime&v="+flt.no); } } plugin.getFirstRSS = function(item) { var ret = ''; for(var k in item.rss) { ret = k; break; } return(ret); } plugin.resizeTop = theWebUI.resizeTop; theWebUI.resizeTop = function( w, h ) { plugin.resizeTop.call(theWebUI,w,h); if(plugin.enabled) { if(w!==null) { $("#RSSList").width( w ); if(theWebUI.configured) this.getTable("rss").resize( w ); } if(h!==null) { $("#RSSList").height( h ); if(theWebUI.configured) this.getTable("rss").resize(null,h); } } } rTorrentStub.prototype.clearfiltertime = function() { this.content = "mode=clearfiltertime&no="+this.vs[0]; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.dataType = "json"; } rTorrentStub.prototype.getrssdetails = function() { var ndx = decodeURIComponent(this.ss[0]); this.content = "mode=getdesc&href="+this.ss[0]+"&rss="+plugin.getFirstRSS(theWebUI.rssItems[ndx]); this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.method = 'GET'; this.cache = true; } rTorrentStub.prototype.setinterval = function() { this.content = "mode=setinterval&interval="+this.ss[0]; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.dataType = "json"; } rTorrentStub.prototype.getrssdetailsResponse = function(xml) { var datas = xml.getElementsByTagName('data'); $("#rsslayout").html(datas[0].childNodes[0].data); $("a","#rsslayout").each( function(ndx,val) { val.target = "_blank"; }); $("img","#rsslayout").each( function(ndx,val) { val.onload = null; }); return(false); } rTorrentStub.prototype.setfilters = function() { this.content = "mode=setfilters"; theWebUI.storeFilterParams(); for(var i=0; i<theWebUI.filters.length; i++) { var flt = theWebUI.filters[i]; var enabled = $("#_fe"+i).prop("checked") ? 1 : 0; var name = $("#_fn"+i).val(); this.content = this.content+"&name="+encodeURIComponent(name)+"&pattern="+encodeURIComponent(flt.pattern)+"&enabled="+enabled+ "&chktitle="+flt.chktitle+ "&chklink="+flt.chklink+ "&chkdesc="+flt.chkdesc+ "&exclude="+encodeURIComponent(flt.exclude)+ "&hash="+flt.hash+"&start="+flt.start+"&addPath="+flt.add_path+ "&dir="+encodeURIComponent(flt.dir)+"&label="+encodeURIComponent(flt.label)+"&interval="+flt.interval+"&no="+flt.no; if($type(flt.throttle)) this.content+=("&throttle="+flt.throttle); if($type(flt.ratio)) this.content+=("&ratio="+flt.ratio); } this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.dataType = "json"; } rTorrentStub.prototype.checkfilter = function() { var no = theWebUI.storeFilterParams(); var flt = theWebUI.filters[no]; this.content = "mode=checkfilter&pattern="+encodeURIComponent(flt.pattern)+"&exclude="+encodeURIComponent(flt.exclude)+ "&label="+encodeURIComponent(flt.label)+"&directory="+encodeURIComponent(flt.dir)+ "&chktitle="+flt.chktitle+"&chklink="+flt.chklink+"&chkdesc="+flt.chkdesc; if(flt.hash.length) this.content = this.content+"&rss="+flt.hash; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.dataType = "json"; } rTorrentStub.prototype.addrss = function() { this.content = "mode=add&url="+this.vs[0]+"&label="+this.ss[0]; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.dataType = "json"; } rTorrentStub.prototype.addrssgroup = function() { this.content = "mode=addgroup&label="+encodeURIComponent( $('#rssGroupLabel').val() )+"&hash="+$("#rssGroupHash").val(); for(var lbl in theWebUI.rssLabels) if($('#grp_'+lbl).prop('checked')) this.content += ('&rss='+lbl); this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.dataType = "json"; } rTorrentStub.prototype.editrss = function() { this.content = "mode=edit&url="+this.vs[0]+"&label="+this.ss[0]; if(theWebUI.actRSSLbl && (theWebUI.actRSSLbl != "_rssAll_")) this.content = this.content + "&rss=" + theWebUI.actRSSLbl; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.dataType = "json"; } rTorrentStub.prototype.loadrss = function() { this.content = "mode=get"; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.dataType = "json"; } rTorrentStub.prototype.loadrsstorrents = function() { this.content = "mode=loadtorrents"; if($("#RSStorrents_start_stopped").prop("checked")) this.content = this.content + '&torrents_start_stopped=1'; if($("#RSSnot_add_path").prop("checked")) this.content = this.content + '&not_add_path=1'; var dir = $.trim($("#RSSdir_edit").val()); if(dir.length) this.content = this.content + '&dir_edit='+encodeURIComponent(dir); var lbl = $.trim($("#RSS_label").val()); if(lbl.length) this.content = this.content + '&label='+encodeURIComponent(lbl); for(var i = 0; i<theWebUI.rssArray.length; i++) { var item = theWebUI.rssItems[theWebUI.rssArray[i]]; this.content = this.content + '&rss='+plugin.getFirstRSS(item)+'&url='+encodeURIComponent(item.href); } this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.dataType = "json"; } rTorrentStub.prototype.loadrsstorrentsResponse = function(data) { theWebUI.getTorrents("list=1"); return(data); } rTorrentStub.prototype.clearhistory = function() { this.content = "mode=clearhistory"; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.dataType = "json"; } rTorrentStub.prototype.rssrefresh = function() { this.content = "mode=refresh"; if(theWebUI.actRSSLbl && (theWebUI.actRSSLbl != "_rssAll_")) this.content = this.content + "&rss=" + theWebUI.actRSSLbl; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.dataType = "json"; this.method = 'GET'; this.cache = true; } rTorrentStub.prototype.rssgrouprefresh = function() { this.content = "mode=refreshgroup"; this.content = this.content + "&rss=" + theWebUI.actRSSLbl; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.dataType = "json"; this.method = 'GET'; this.cache = true; } rTorrentStub.prototype.rsstoggle = function() { this.content = "mode=toggle"; if(theWebUI.actRSSLbl && (theWebUI.actRSSLbl != "_rssAll_")) this.content = this.content + "&rss=" + theWebUI.actRSSLbl; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.dataType = "json"; } rTorrentStub.prototype.rssmarkstate = function() { this.content = "mode=mark&state="+this.ss[0]; for( var i=0; i<theWebUI.rssArray.length; i++) { var href = theWebUI.rssArray[i]; this.content+=("&url="+encodeURIComponent(href)); this.content+=("&time="+theWebUI.rssItems[href].time); } this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.dataType = "json"; } rTorrentStub.prototype.rssgroupstatus = function() { this.content = "mode=setgroupstate&state="+this.ss[0]+"&rss=" + theWebUI.actRSSLbl; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.dataType = "json"; } rTorrentStub.prototype.rssremove = function() { this.content = "mode=remove"; if(theWebUI.actRSSLbl && (theWebUI.actRSSLbl != "_rssAll_")) this.content = this.content + "&rss=" + theWebUI.actRSSLbl; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.dataType = "json"; } rTorrentStub.prototype.rssgroupremove = function() { this.content = "mode=removegroup"; this.content = this.content + "&rss=" + theWebUI.actRSSLbl; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.dataType = "json"; } rTorrentStub.prototype.rssgroupremovecontents = function() { this.content = "mode=removegroupcontents"; this.content = this.content + "&rss=" + theWebUI.actRSSLbl; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.dataType = "json"; } rTorrentStub.prototype.getfilters = function() { this.content = "mode=getfilters"; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.dataType = "json"; this.method = 'GET'; this.cache = true; } rTorrentStub.prototype.getintervals = function() { this.content = "mode=getintervals"; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rss/action.php"; this.dataType = "json"; } plugin.correctRatioFilterDialog = function() { var rule = getCSSRule(".rf fieldset"); if(rule && thePlugins.get('ratio').allStuffLoaded) { $("#FLT_label").after( $("<div></div>").css({ padding: 0 }). html("<label>"+theUILang.ratio+":</label><select id='FLT_ratio'><option value=''>"+theUILang.mnuRatioUnlimited+"</option></select>") ); $$('filterProps').style.height = "auto"; $("#FLT_label").parent().get(0).style.height = "auto"; $$('dlgEditFilters').style.height = "auto"; theDialogManager.center("dlgEditFilters"); } else setTimeout(plugin.correctRatioFilterDialog,1000); } plugin.correctFilterDialog = function() { var rule = getCSSRule(".rf fieldset"); if(rule && thePlugins.get('throttle').allStuffLoaded) { $("#FLT_label").after( $("<div></div>").css({ padding: 0 }). html( "<label>"+theUILang.throttle+":</label><select id='FLT_throttle'><option value=''>"+theUILang.mnuUnlimited+"</option></select><br/>" ) ); if(thePlugins.isInstalled('ratio')) plugin.correctRatioFilterDialog(); else { $$('filterProps').style.height = "auto"; $("#FLT_label").parent().get(0).style.height = "auto"; $$('dlgEditFilters').style.height = "auto"; theDialogManager.center("dlgEditFilters"); } } else setTimeout(plugin.correctFilterDialog,1000); } plugin.correctCSS = function() { if(!this.cssCorrected) { var rule = getCSSRule("div#List"); var rule1 = getCSSRule("div#RSSList"); var ruleMain = getCSSRule("html, body"); if(!ruleMain) ruleMain = getCSSRule("html"); if(rule && rule1) { rule1.style.borderColor = rule.style.borderColor; rule1.style.backgroundColor = rule.style.backgroundColor; } rule = getCSSRule("div#CatList ul li.sel"); rule1 = getCSSRule("div#CatList ul li.selRSS"); rule2 = getCSSRule("div#CatList ul li.selDisRSS"); rule3 = getCSSRule(".lf li input.TextboxFocus"); if(rule && rule1 && rule2 && rule3 && ruleMain) { rule1.style.backgroundColor = rule.style.backgroundColor; rule1.style.color = rule.style.color; rule2.style.backgroundColor = rule.style.backgroundColor; rule2.style.color = rule.style.color; rule3.style.backgroundColor = rule.style.backgroundColor; rule3.style.color = rule.style.color; } rule = getCSSRule("div#stg .lm"); rule1 = getCSSRule(".lf"); rule2 = getCSSRule(".lf li input.TextboxNormal"); if(rule && rule1 && rule2 && ruleMain) { rule1.style.borderColor = rule.style.borderColor; rule1.style.backgroundColor = rule.style.backgroundColor; rule2.style.backgroundColor = rule.style.backgroundColor; rule2.style.color = ruleMain.style.color; } rule = getCSSRule(".stg_con"); rule1 = getCSSRule(".rf"); if(rule && rule1) rule1.style.backgroundColor = rule.style.backgroundColor; this.cssCorrected = true; } } plugin.onLangLoaded = function() { this.addButtonToToolbar("rss",theUILang.mnu_rss,"theWebUI.showRSS()","settings"); plugin.addPaneToCategory("prss",theUILang.rssFeeds). append( $("<ul></ul>").html('<li id="_rssAll_" class="RSS cat">'+theUILang.allFeeds+'&nbsp;(<span id="_rssAll_c">0</span>)</li>')). append( $("<div>").html('<ul id="rssl"></ul>') ); $("#prss").append( $("<span></span>").attr("id", "rsstimer") ); $("#_rssAll_").mouseclick( theWebUI.rssLabelContextMenu ); this.attachPageToOptions( $("<div>").attr("id","st_rss").html( "<fieldset>"+ "<legend>"+theUILang.rssFeeds+"</legend>"+ "<label for='rss_interval'>"+ theUILang.rssUpdateInterval + ' (' + $.trim(theUILang.time_m) +")</label>"+ "<input type='text' maxlength=4 id='rss_interval' class='TextboxShort'/>"+ "</fieldset>" )[0], theUILang.rssFeeds ); theDialogManager.make( "dlgAddRSS", theUILang.addRSS, "<div class='content'>"+ "<label>"+theUILang.feedURL+": </label>"+ "<input type='text' id='rssURL' class='TextboxLarge'/><br/>"+ "<label>"+theUILang.alias+": </label>"+ "<input type='text' id='rssLabel' class='TextboxLarge'/>"+ "</div>"+ "<div class='aright buttons-list'><input type='button' class='OK Button' value="+theUILang.ok+" onclick='theDialogManager.hide(\"dlgAddRSS\");theWebUI.addRSS();return(false);'/><input type='button' class='Cancel Button' value='"+theUILang.Cancel+"'/></div>", true); theDialogManager.make( "dlgAddRSSGroup", theUILang.addRSSGroup, "<div class='content'>"+ "<label>"+theUILang.alias+": </label>"+ "<input type='hidden' id='rssGroupHash' value=''/>"+ "<input type='text' id='rssGroupLabel' class='TextboxLarge'/>"+ "<fieldset><legend>"+theUILang.addRSSGroupContent+"</legend>"+ "<div id='rssGroupSet'>"+ "</div>"+ "</fieldset>"+ "</div>"+ "<div class='aright buttons-list'><input type='button' class='OK Button' value="+theUILang.ok+" onclick='theWebUI.addRSSGroup();return(false);'/><input type='button' class='Cancel Button' value='"+theUILang.Cancel+"'/></div>", true); theDialogManager.make( "dlgEditRSS", theUILang.rssMenuEdit, "<div class='content'>"+ "<label>"+theUILang.feedURL+": </label>"+ "<input type='text' id='editrssURL' class='TextboxLarge'/><br/>"+ "<label>"+theUILang.alias+": </label>"+ "<input type='text' id='editrssLabel' class='TextboxLarge'/>"+ "</div>"+ "<div class='aright buttons-list'><input type='button' class='OK Button' value="+theUILang.ok+" onclick='theDialogManager.hide(\"dlgEditRSS\");theWebUI.editRSS();return(false);'/><input type='button' class='Cancel Button' value='"+theUILang.Cancel+"'/></div>", true); theDialogManager.make( "dlgLoadTorrents", theUILang.torrent_add, "<div class='content'>"+ "<label>"+theUILang.Base_directory+":</label><input type='text' id='RSSdir_edit' class='TextboxLarge'/><br/>"+ "<label></label><input type='checkbox' id='RSSnot_add_path'/>"+theUILang.Dont_add_tname+"<br/>"+ "<label></label><input type='checkbox' id='RSStorrents_start_stopped'/>"+theUILang.Dnt_start_down_auto+"<br/>"+ "<label>"+theUILang.Label+":</label><input type='text' id='RSS_label' class='TextboxLarge'/>"+ "</div>"+ "<div id='buttons' class='aright buttons-list'><input type='button' class='OK Button' value="+theUILang.ok+" onclick='theDialogManager.hide(\"dlgLoadTorrents\");theWebUI.RSSLoadTorrents();return(false);'/><input type='button' class='Cancel Button' value='"+theUILang.Cancel+"'/></div>", true); theDialogManager.make( "dlgEditFilters", theUILang.rssMenuManager, "<div class='fxcaret'>"+ "<div class='lfc'>"+ "<div class='lf' id='filterList'>"+ "<ul id='fltlist'></ul>"+ "</div>"+ "<div id='FLTchk_buttons'>"+ "<input type='button' class='Button' value='"+theUILang.rssAddFilter+"' onclick='theWebUI.addNewFilter();return(false);'/>"+ "<input type='button' class='Button' value='"+theUILang.rssDelFilter+"' onclick='theWebUI.deleteCurrentFilter();return(false);'/>"+ "<input type='button' id='chkFilterBtn' class='Button' value='"+theUILang.rssCheckFilter+"' onclick='theWebUI.checkCurrentFilter();return(false);'/>"+ "</div>"+ "</div>"+ "<div class='rf' id='filterProps'>"+ "<fieldset id='filterPropsFieldSet'>"+ "<legend>"+theUILang.rssFiltersLegend+"</legend>"+ "<label>"+theUILang.rssFilter+":</label><input type='text' id='FLT_body' class='TextboxLarge'/><br/>"+ "<label>"+theUILang.rssExclude+":</label><input type='text' id='FLT_exclude' class='TextboxLarge'/><br/>"+ "<label></label><input type='checkbox' class='chk' id='FLTchktitle'/>"+theUILang.rssCheckTitle+"<br/>"+ "<label></label><input type='checkbox' class='chk' id='FLTchkdesc'/>"+theUILang.rssCheckDescription+"<br/>"+ "<label></label><input type='checkbox' class='chk' id='FLTchklink'/>"+theUILang.rssCheckLink+"<br/>"+ "<label>"+theUILang.rssStatus+":</label><select id='FLT_rss'><option value=''>"+theUILang.allFeeds+"</option></select><br/>"+ "<label>"+theUILang.Base_directory+":</label><input type='text' id='FLTdir_edit' class='TextboxLarge'/><br/>"+ "<label></label><input type='checkbox' class='chk' id='FLTnot_add_path'/>"+theUILang.Dont_add_tname+"<br/>"+ "<label></label><input type='checkbox' class='chk' id='FLTtorrents_start_stopped'/>"+theUILang.Dnt_start_down_auto+"<br/>"+ "<label>"+theUILang.rssMinInterval+":</label><select id='FLT_interval'>"+ "<option value='-1'>"+theUILang.rssIntervalAlways+"</option>"+ "<option value='0'>"+theUILang.rssIntervalOnce+"</option>"+ "<option value='12'>"+theUILang.rssInterval12h+"</option>"+ "<option value='24'>"+theUILang.rssInterval1d+"</option>"+ "<option value='48'>"+theUILang.rssInterval2d+"</option>"+ "<option value='72'>"+theUILang.rssInterval3d+"</option>"+ "<option value='96'>"+theUILang.rssInterval4d+"</option>"+ "<option value='168'>"+theUILang.rssInterval1w+"</option>"+ "<option value='336'>"+theUILang.rssInterval2w+"</option>"+ "<option value='504'>"+theUILang.rssInterval3w+"</option>"+ "<option value='720'>"+theUILang.rssInterval1m+"</option>"+ "</select>"+ "<input type='button' class='Button' value='"+theUILang.rssClearFilter+"' onclick='theWebUI.rssClearFilter();return(false);'/><br/>"+ "<label>"+theUILang.Label+":</label><input type='text' id='FLT_label' class='TextboxLarge'/><br/>"+ "</fieldset>"+ "</div>"+ "</div>"+ "<div id='FLT_buttons' class='aright buttons-list'>"+ "<input type='button' class='OK Button' value='"+theUILang.ok+"' onclick='theDialogManager.hide(\"dlgEditFilters\");theWebUI.setFilters();return(false);'/>"+ "<input type='button' class='Cancel Button' value='"+theUILang.Cancel+"'/>"+ "</div>"); $("#gcont").append( $("<div>").attr("id","rsslayout").css( "display", "none" )); if(thePlugins.isInstalled("_getdir")) { $('#RSSdir_edit').after($("<input type=button>").addClass("Button").attr("id","RSSBtn").focus( function() { this.blur(); } )); var btn = new theWebUI.rDirBrowser( 'dlgLoadTorrents', 'RSSdir_edit', 'RSSBtn' ); theDialogManager.setHandler('dlgLoadTorrents','afterHide',function() { btn.hide(); }); $('#FLTdir_edit').after($("<input type=button>").addClass("Button").attr("id","FLTBtn").focus( function() { this.blur(); } )); plugin.editFilersBtn = new theWebUI.rDirBrowser( 'dlgEditFilters', 'FLTdir_edit', 'FLTBtn' ); } if(thePlugins.isInstalled('throttle')) this.correctFilterDialog(); else if(thePlugins.isInstalled('ratio')) this.correctRatioFilterDialog(); }; plugin.onRemove = function() { if(theWebUI.updateRSSTimer) window.clearTimeout(theWebUI.updateRSSTimer); theWebUI.switchLayout(false); theWebUI.switchLabel($$("-_-_-all-_-_-")); $("#RSSList").remove(); plugin.removePaneFromCategory("prss"); $("#rsslayout").remove(); theDialogManager.hide("dlgAddRSS"); theDialogManager.hide("dlgEditRSS"); theDialogManager.hide("dlgLoadTorrents"); theDialogManager.hide("dlgEditFilters"); this.removeButtonFromToolbar("rss"); plugin.removePageFromOptions("st_rss"); } })();(function () { var plugin = new rPlugin( 'rutracker_check',3.6,'Novik','This plugin checks the rutracker.org tracker for updated/deleted torrents.',256,'http://code.google.com/p/rutorrent/wiki/PluginRutracker_check' ); plugin.loadLang(); if(plugin.canChangeMenu()) { plugin.createMenu = theWebUI.createMenu; theWebUI.createMenu = function( e, id ) { plugin.createMenu.call(this, e, id); if(plugin.enabled && plugin.canChangeMenu()) { var el = theContextMenu.get( theUILang.Force_recheck ); if( el ) { theContextMenu.add( el, [theUILang.checkTorrent, ((this.getTable("trt").selCount>1) && this.getHashes('checktorrent')) || this.isTorrentCommandEnabled("checktorrent",id) ? "theWebUI.perform( 'checktorrent' )" : null] ); } } } rTorrentStub.prototype.checktorrent = function() { this.content = "cmd=check"; for( var i = 0; i < this.hashes.length; i++ ) this.content += ("&hash="+this.hashes[i]); this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rutracker_check/action.php"; this.dataType = "json"; } } plugin.config = theWebUI.config; theWebUI.config = function(data) { plugin.reqId1 = theRequestManager.addRequest("trt", theRequestManager.map("d.get_custom=")+"chk-state",function(hash,torrent,value) { torrent.chkstate = value; if(torrent.chkstate==4) // STE_DELETED torrent.state |= dStatus.error; }); plugin.reqId2 = theRequestManager.addRequest("trt", theRequestManager.map("d.get_custom=")+"chk-time",function(hash,torrent,value) { torrent.chktime = value; }); plugin.config.call(this,data); } plugin.isTorrentCommandEnabled = theWebUI.isTorrentCommandEnabled; theWebUI.isTorrentCommandEnabled = function(act,hash) { if(act=="checktorrent") { if(!plugin.isTorrentCommandEnabled.call(this,act,hash)) return(false); else { // var torrent = this.torrents[hash]; // return(torrent.done == 1000); return(true); } } return(plugin.isTorrentCommandEnabled.call(this,act,hash)); } plugin.getStatusIcon = theWebUI.getStatusIcon; theWebUI.getStatusIcon = function(torrent) { if(plugin.allStuffLoaded && (torrent.chkstate==4)) // STE_DELETED return(["Status_Error", theUILang.chkResults[torrent.chkstate-1]]); return( plugin.getStatusIcon.call(theWebUI,torrent) ); } plugin.updateDetails = theWebUI.updateDetails; theWebUI.updateDetails = function() { plugin.updateDetails.call(this); if(plugin.enabled && (this.dID != "") && this.torrents[this.dID]) { var torrent = this.torrents[this.dID]; $("#chktime").text( torrent.chktime ? theConverter.time(new Date().getTime()/1000-(iv(torrent.chktime)+theWebUI.deltaTime/1000),true) : '' ); $("#chkresult").text( torrent.chkstate ? theUILang.chkResults[iv(torrent.chkstate-1)] : '' ); } } plugin.onLangLoaded = function() { $("#mainlayout").append( "<tr id='chkinfo1'><td colspan='6' class='Header'>"+theUILang.chkHdr+"</td></tr>"+ "<tr id='chkinfo2'><td nowrap>"+theUILang.checkedAt+":</td>"+ "<td><span id='chktime' class='det'></span></td>"+ "<td nowrap>"+theUILang.checkedResult+":</td>"+ "<td colspan=3><span id='chkresult' class='det'></span></td></tr>" ); } plugin.onRemove = function() { $("#chkinfo1,#chkinfo2").remove(); theRequestManager.removeRequest( "trt", plugin.reqId1 ); theRequestManager.removeRequest( "trt", plugin.reqId2 ); $.each(theWebUI.torrents,function(hash,torrent) { delete torrent.chkstate; delete torrent.chktime; }); } })();(function () { var plugin = new rPlugin( 'scheduler',3.6,'Novik','This plugin allows to define any of six rTorrent behavior types at each particular hour of 168 week hours.',256,'http://code.google.com/p/rutorrent/wiki/PluginScheduler' ); theWebUI.scheduleTable = { UL : [1,1,1], DL : [1,1,1], enabled : 0, week : [[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]]}; plugin.loadLang(); if(plugin.canChangeMenu() && (theWebUI.systemInfo.rTorrent.iVersion >= 0x805)) { plugin.config = theWebUI.config; theWebUI.config = function(data) { plugin.config.call(this,data); plugin.reqId = theRequestManager.addRequest("trt", theRequestManager.map("d.get_custom=")+"sch_ignore",function(hash,torrent,value) { torrent.sch_ignore = iv(value); }); } theWebUI.toggleSchIgnore = function() { var h = ""; var sr = theWebUI.getTable("trt").rowSel; for(var k in sr) if((sr[k] == true) && (k.length==40)) { var state = theWebUI.torrents[k].sch_ignore ? '' : 1; h += "&hash="+k+"&s="+state; } theWebUI.request("?action=schignore" + h + "&list=1"); } plugin.createMenu = theWebUI.createMenu; theWebUI.createMenu = function( e, id ) { plugin.createMenu.call(this, e, id); if(plugin.enabled) { var table = this.getTable("trt"); if(table.selCount == 1) { var hash = table.getFirstSelected(); if(hash.length==40) { if(this.torrents[hash].sch_ignore) theContextMenu.add( [CMENU_SEL, theUILang.shcIgnore, theWebUI.toggleSchIgnore] ); else theContextMenu.add( [theUILang.shcIgnore, theWebUI.toggleSchIgnore] ); } else theContextMenu.add( [theUILang.shcIgnore, null] ); } else theContextMenu.add( [theUILang.shcIgnore, theWebUI.toggleSchIgnore] ); } } rTorrentStub.prototype.schignore = function() { for(var i=0; i<this.hashes.length; i++) { var needRestart = (theWebUI.torrents[this.hashes[i]].status==theUILang.Seeding) || (theWebUI.torrents[this.hashes[i]].status==theUILang.Downloading); if(needRestart) { var cmd = new rXMLRPCCommand('d.stop'); cmd.addParameter("string",this.hashes[i]); this.commands.push( cmd ); } cmd = new rXMLRPCCommand('d.set_throttle_name'); cmd.addParameter("string",this.hashes[i]); cmd.addParameter("string",this.ss[i]=='' ? "" : "NULL"); this.commands.push( cmd ); if(needRestart) { cmd = new rXMLRPCCommand('d.start'); cmd.addParameter("string",this.hashes[i]); this.commands.push( cmd ); } cmd = new rXMLRPCCommand( "d.set_custom" ); cmd.addParameter("string",this.hashes[i]); cmd.addParameter("string","sch_ignore"); cmd.addParameter("string",this.ss[i]); this.commands.push( cmd ); } } } if(plugin.canChangeOptions()) { plugin.loadMainCSS(); plugin.addAndShowSettings = theWebUI.addAndShowSettings; theWebUI.addAndShowSettings = function(arg) { if(plugin.enabled) { var tbl = $$('sch_graph'); for(var i=0; i<7; i++) { for(var j=1; j<25; j++) { cell = tbl.rows[i].cells[j]; cell.setAttribute("clr",theWebUI.scheduleTable.week[i][j-1]); } } $$('sch_enable').checked = theWebUI.scheduleTable.enabled; for(var i=0; i<3; i++) { $$('restrictedUL'+(i+1)).value = theWebUI.scheduleTable.UL[i]; $$('restrictedDL'+(i+1)).value = theWebUI.scheduleTable.DL[i]; } theWebUI.linkedSch($$('sch_enable'), ['restrictedUL1', 'restrictedDL1', 'restrictedUL2', 'restrictedDL2', 'restrictedUL3', 'restrictedDL3']); } plugin.addAndShowSettings.call(theWebUI,arg); } theWebUI.schedulerWasChanged = function() { if($$('sch_enable').checked != theWebUI.scheduleTable.enabled) return(true); for(var i=0; i<3; i++) if(($$('restrictedUL'+(i+1)).value!=theWebUI.scheduleTable.UL[i]) || ($$('restrictedDL'+(i+1)).value!=theWebUI.scheduleTable.DL[i])) return(true); var tbl = $$('sch_graph'); for(var i=0; i<7; i++) for(var j=1; j<25; j++) if(tbl.rows[i].cells[j].getAttribute("clr")!=theWebUI.scheduleTable.week[i][j-1]) return(true); return(false); } plugin.setSettings = theWebUI.setSettings; theWebUI.setSettings = function() { plugin.setSettings.call(this); if(plugin.enabled && this.schedulerWasChanged()) this.request("?action=setschedule"); } rTorrentStub.prototype.setschedule = function() { this.content = "dummy=1"; var tbl = $$('sch_graph'); for(var i=0; i<7; i++) { for(var j=1; j<25; j++) { var cell = tbl.rows[i].cells[j]; this.content += ('&day_'+i+'_'+(j-1)+'='+cell.getAttribute("clr")); } } for(var i=0; i<3; i++) { this.content += ('&UL'+i+'='+$$('restrictedUL'+(i+1)).value); this.content += ('&DL'+i+'='+$$('restrictedDL'+(i+1)).value); } this.content += ('&enabled='+($$('sch_enable').checked ? '1' : '0')); this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/scheduler/action.php"; this.dataType = "script"; } var schClasses = [ "sch_fast", "sch_stop", "sch_seed", "sch_res1", "sch_res2", "sch_res3" ]; theWebUI.schMouseOver = function(i,j) { var from = (j < 10) ? ("0" + j) : j; $('#sch_desc').text( theUILang.schFullWeek[i]+', '+from+':00 - '+from+':59' ); } theWebUI.schLegendMouseOver = function(i) { var schDesc = [ theUILang.schUnlimitedDesc, theUILang.schTurnOffDesc, theUILang.schSeedingOnlyDesc, theUILang.schLimitedDesc+"1", theUILang.schLimitedDesc+"2", theUILang.schLimitedDesc+"3" ]; $('#sch_desc').text( schDesc[i] ); } theWebUI.schMouseOut = function() { $('#sch_desc').html('&nbsp;'); } theWebUI.schClick = function(obj,i,j) { if($$('sch_enable').checked) { var clr = parseInt(obj.getAttribute("clr"))+1; if(clr>=schClasses.length) clr = 0; obj.className = schClasses[clr]; obj.setAttribute("clr",clr); } } theWebUI.linkedSch = function(obj, lst) { linked(obj,0,lst); var tbl = $$('sch_graph'); var isChecked = $$('sch_enable').checked; for(var i=0; i<7; i++) { var cell = tbl.rows[i].cells[0]; cell.className = isChecked ? 'sch_week' : 'sch_week disabled'; for(var j=1; j<25; j++) { cell = tbl.rows[i].cells[j]; var clr = schClasses[cell.getAttribute("clr")]; cell.className = isChecked ? clr : clr+"dis"; } } tbl = $$('sch_legend'); for(var i=0; i<2; i++) { for(var j=0; j<6; j++) { var cell = tbl.rows[i].cells[j]; var clr = schClasses[cell.getAttribute("clr")]; if(clr!=null) cell.className = isChecked ? clr : clr+"dis"; else cell.className = isChecked ? '' : "disabled"; } } $$('sch_desc').className = isChecked ? '' : "disabled"; } } plugin.onLangLoaded = function() { if(this.canChangeOptions()) { var s = "<div>"+ "<input id='sch_enable' type='checkbox' onchange=\"theWebUI.linkedSch(this, ['restrictedUL1', 'restrictedDL1', 'restrictedUL2', 'restrictedDL2', 'restrictedUL3', 'restrictedDL3']);\" />"+ "<label for='sch_enable'>"+ theUILang.schedulerOn+ "</label>"+ "</div>"+ "<fieldset>"+ "<legend>"+theUILang.schedulerGraph+"</legend>"+ "<table id='sch_graph'>"; for(var i=0; i<7; i++) { s += "<tr><td class='sch_week disabled'>"+theUILang.schShortWeek[i]+"</td>"; for(var j=0; j<24; j++) { var day = theWebUI.scheduleTable.week[i][j]; s+="<td class='"+schClasses[day]+"dis' clr='"+day+"' onmouseover='theWebUI.schMouseOver("+i+","+j+");' onmouseout='theWebUI.schMouseOut();' onclick='theWebUI.schClick(this,"+i+","+j+");'></td>"; } s += "</tr>"; } s+="</table><div id='sch_desc' class='disabled'>&nbsp;</div>"; s+="<table id='sch_legend'>"+ "<tr>"+ "<td clr='0' class='sch_fastdis' onmouseover='theWebUI.schLegendMouseOver(0);' onmouseout='theWebUI.schMouseOut();'></td><td class='disabled'>"+theUILang.schUnlimited+"</td>"+ "<td clr='1' class='sch_stopdis' onmouseover='theWebUI.schLegendMouseOver(1);' onmouseout='theWebUI.schMouseOut();'></td><td class='disabled'>"+theUILang.schTurnOff+"</td>"+ "<td clr='2' class='sch_seeddis' onmouseover='theWebUI.schLegendMouseOver(2);' onmouseout='theWebUI.schMouseOut();'></td><td class='disabled'>"+theUILang.schSeedingOnly+"</td>"+ "</tr>"+ "<tr>"+ "<td clr='3' class='sch_res1dis' onmouseover='theWebUI.schLegendMouseOver(3);' onmouseout='theWebUI.schMouseOut();'></td><td class='disabled'>"+theUILang.schLimited+"1</td>"+ "<td clr='4' class='sch_res2dis' onmouseover='theWebUI.schLegendMouseOver(4);' onmouseout='theWebUI.schMouseOut();'></td><td class='disabled'>"+theUILang.schLimited+"2</td>"+ "<td clr='5' class='sch_res3dis' onmouseover='theWebUI.schLegendMouseOver(5);' onmouseout='theWebUI.schMouseOut();'></td><td class='disabled'>"+theUILang.schLimited+"3</td>"+ "</tr>"+ "</table></fieldset><div id='st_scheduler_h'>"; s+="<fieldset>"+ "<legend>"+theUILang.schLimited+"1</legend>"+ "<table>"+ "<tr>"+ "<td><label id='lbl_restrictedUL1' for='restrictedUL1' class='disabled'>"+theUILang.schLimitedUL+" ("+theUILang.kbs+"):</label></td>"+ "<td class=\"alr\"><input type='text' id='restrictedUL1' class='TextboxNum' maxlength='6' disabled=1/></td>"+ "</tr>"+ "<tr>"+ "<td><label id='lbl_restrictedDL1' for='restrictedDL1' class='disabled'>"+theUILang.schLimitedDL+" ("+theUILang.kbs+"):</label></td>"+ "<td class=\"alr\"><input type='text' id='restrictedDL1' class='TextboxNum' maxlength='6' disabled=1/></td>"+ "</tr>"+ "</table>"+ "</fieldset>"+ "<fieldset>"+ "<legend>"+theUILang.schLimited+"2</legend>"+ "<table>"+ "<tr>"+ "<td><label id='lbl_restrictedUL2' for='restrictedUL2' class='disabled'>"+theUILang.schLimitedUL+" ("+theUILang.kbs+"):</label></td>"+ "<td class=\"alr\"><input type='text' id='restrictedUL2' class='TextboxNum' maxlength='6' disabled=1/></td>"+ "</tr>"+ "<tr>"+ "<td><label id='lbl_restrictedDL2' for='restrictedDL2' class='disabled'>"+theUILang.schLimitedDL+" ("+theUILang.kbs+"):</label></td>"+ "<td class=\"alr\"><input type='text' id='restrictedDL2' class='TextboxNum' maxlength='6' disabled=1/></td>"+ "</tr>"+ "</table>"+ "</fieldset>"+ "<fieldset>"+ "<legend>"+theUILang.schLimited+"3</legend>"+ "<table>"+ "<tr>"+ "<td><label id='lbl_restrictedUL3' for='restrictedUL3' class='disabled'>"+theUILang.schLimitedUL+" ("+theUILang.kbs+"):</label></td>"+ "<td class=\"alr\"><input type='text' id='restrictedUL3' class='TextboxNum' maxlength='6' disabled=1/></td>"+ "</tr>"+ "<tr>"+ "<td><label id='lbl_restrictedDL3' for='restrictedDL3' class='disabled'>"+theUILang.schLimitedDL+" ("+theUILang.kbs+"):</label></td>"+ "<td class=\"alr\"><input type='text' id='restrictedDL3' class='TextboxNum' maxlength='6' disabled=1/></td>"+ "</tr>"+ "</table>"+ "</fieldset>"; this.attachPageToOptions($("<div>").attr("id","st_scheduler").html(s+"</div>")[0],theUILang.scheduler); } } plugin.onRemove = function() { plugin.removePageFromOptions("st_scheduler"); if($type(plugin.reqId)) theRequestManager.removeRequest( "trt", plugin.reqId ); } })();(function () { var plugin = new rPlugin( 'show_peers_like_wtorrent',3.6,'Novik','This plugin changes the format of values in columns \'Seeds\' and \'Peers\' in the torrents list.',256,'http://code.google.com/p/rutorrent/wiki/PluginShow_peers_like_wtorrent' ); plugin.config = theWebUI.config; theWebUI.config = function(data) { plugin.config.call(this,data); plugin.reqId1 = theRequestManager.addRequest("trt", theRequestManager.map('cat=')+ '"$'+theRequestManager.map("t.multicall=")+ theRequestManager.map("d.get_hash=")+ ','+theRequestManager.map("t.get_scrape_complete=")+ ','+theRequestManager.map('cat=')+'{#}"', function(hash,torrent,value) { var arr = value.split('#'); torrent.seeds_all = 0; for(var i=0; i<arr.length; i++) torrent.seeds_all += iv(arr[i]); torrent.seeds = torrent.seeds_actual + " (" + torrent.seeds_all + ")"; } ); plugin.reqId2 = theRequestManager.addRequest("trt", theRequestManager.map('cat=')+ '"$'+theRequestManager.map("t.multicall=")+ theRequestManager.map("d.get_hash=")+ ','+theRequestManager.map("t.get_scrape_incomplete=")+ ','+theRequestManager.map('cat=')+'{#}"', function(hash,torrent,value) { var arr = value.split('#'); torrent.peers_all = 0; for(var i=0; i<arr.length; i++) torrent.peers_all += iv(arr[i]); torrent.peers = torrent.peers_actual + " (" + torrent.peers_all + ")"; } ); } plugin.onRemove = function() { theRequestManager.removeRequest( "trt", plugin.reqId1 ); theRequestManager.removeRequest( "trt", plugin.reqId2 ); } })();(function () { var plugin = new rPlugin( 'source',3.6,'Novik','This plugin allows to copy the source .torrent file from the host to the local machine.',256,'http://code.google.com/p/rutorrent/wiki/PluginSource' ); plugin.loadLang(); if(plugin.canChangeMenu()) { theWebUI.getSource = function( id ) { $("#srchash").val(id); $("#getsource").submit(); } plugin.createMenu = theWebUI.createMenu; theWebUI.createMenu = function( e, id ) { plugin.createMenu.call(this, e, id); if(plugin.enabled) { var el = theContextMenu.get( theUILang.Properties ); if( el ) theContextMenu.add( el, [theUILang.getSource, (this.getTable("trt").selCount > 1) || (id.length>40) ? null : "theWebUI.getSource('" + id + "')"] ); } } } plugin.onLangLoaded = function() { $(document.body).append($("<iframe name='srcfrm'/>").css({visibility: "hidden"}).attr( { name: "srcfrm", id: "srcfrm" } ).width(0).height(0).load(function() { $("#srchash").val(''); var d = (this.contentDocument || this.contentWindow.document); if(d && (d.location.href != "about:blank")) try { eval(d.body.textContent ? d.body.textContent : d.body.innerText); } catch(e) {} })); $(document.body).append( $('<form action="plugins/source/action.php" id="getsource" method="get" target="srcfrm">'+ '<input type="hidden" name="hash" id="srchash" value="">'+ '</form>').width(0).height(0)); } plugin.onRemove = function() { $('#srcfrm').remove(); $('#getsource').remove(); } })();(function () { var plugin = new rPlugin( 'stream',1,'alexj','Stream media files with VLC (based on getData by Novik).',256,'http://code.google.com/p/rutorrent/wiki/PluginStream' ); plugin.loadLang(); plugin.config = theWebUI.config; theWebUI.config = function(data) { plugin.config.call(this,data); var oldDblClick = this.getTable("fls").ondblclick; this.getTable("fls").ondblclick = function(obj) { if(plugin.enabled && (theWebUI.dID!="") && (theWebUI.dID.length==40)) { if(theWebUI.settings["webui.fls.view"]) { var arr = obj.id.split('_f_'); theWebUI.streamData(theWebUI.dID,arr[1]); return(false); } else { var lnk = this.getAttr(obj.id, "link"); if(lnk==null) { theWebUI.streamData(theWebUI.dID,obj.id.substr(3)); return(false); } } } return(oldDblClick.call(this,obj)); } } theWebUI.streamData = function( hash, no ) { $("#s_datahash").val(hash); $("#s_datano").val(no); $("#s_getdata").submit(); } if(plugin.canChangeMenu()) { plugin.createFileMenu = theWebUI.createFileMenu; theWebUI.createFileMenu = function( e, id ) { if(plugin.createFileMenu.call(this, e, id)) { if(plugin.enabled) { theContextMenu.add([CMENU_SEP]); var fno = null; var table = this.getTable("fls"); if(table.selCount == 1) { var fid = table.getFirstSelected(); if(this.settings["webui.fls.view"]) { var arr = fid.split('_f_'); fno = arr[1]; } else if(!this.dirs[this.dID].isDirectory(fid)) fno = fid.substr(3); if( // ((fno!=null) && (this.files[this.dID][fno].size>=2147483647) && !theWebUI.systemInfo.php.canHandleBigFiles) || (theWebUI.dID.length>40)) fno = null; } theContextMenu.add( [theUILang.streamData, (fno==null) ? null : "theWebUI.streamData('" + theWebUI.dID + "',"+fno+")"] ); } return(true); } return(false); } } plugin.onLangLoaded = function() { $(document.body).append($("<iframe name='s_datafrm'/>").css({visibility: "hidden"}).attr( { name: "s_datafrm", id: "s_datafrm" } ).width(0).height(0).load(function() { $("#s_datahash").val(''); $("#s_datano").val(''); var d = (this.contentDocument || this.contentWindow.document); if(d && (d.location.href != "about:blank")) try { eval(d.body.innerHTML); } catch(e) {} })); $(document.body).append( $('<form action="plugins/stream/action.php" id="s_getdata" method="get" target="s_datafrm">'+ '<input type="hidden" name="hash" id="s_datahash" value="">'+ '<input type="hidden" name="no" id="s_datano" value="">'+ '</form>').width(0).height(0)); } plugin.onRemove = function() { $("#s_datafrm").remove(); $("#s_getdata").remove(); } })();(function () { var plugin = new rPlugin( 'extsearch',3.6,'Novik','This plugin allows to search many popular torrent sites for content from within ruTorrent.',256,'http://code.google.com/p/rutorrent/wiki/PluginExtsearch' ); plugin.sites = cloneObject(theSearchEngines.sites);theSearchEngines.globalLimit = 1000; theSearchEngines.sites = {'ABTorrents': { enabled: 0, global: 1, auth: 0, limit: 15, public: 0, cookies: "www.abtorrents.me|uid=XXX;pass=XXX;", cats: ["all","Adventure","Biographies & Memoirs","Business ","Childrens","Comedy","Computers ","Erotica","Fantasy-General","Fantasy-Youth","Files","Foreign Language","General Fiction","Historical Fiction","History","Horror","Literature ","Mystery ","Non-Fiction","Radio Drama","Romance","Science","Science Fiction ","Self Improvement","Suspense","Talk Radio","Western"]},'AwesomeHD': { enabled: 0, global: 1, auth: 0, limit: 50, public: 0, cookies: "awesome-hd.net|session=XXX", cats: ["all","Movies","TV-Shows"]},'BitHDTV': { enabled: 0, global: 1, auth: 1, limit: 50, public: 0, cookies: "", cats: ["all","Anime","Blu-ray","Demo","Doc","HQ-Audio","Movies","Music Videos","Other","HD-DVD","TV","TV/Season","XXX"]},'BitMe': { enabled: 0, global: 1, auth: 0, limit: 15, public: 0, cookies: "www.bitme.org|pass=XXX;uid=XXX;", cats: ["all","3D","AppDev","Art","Audio","CBT","Dating","DIY","Documentaries","e-Books","KeyStone","Languages","LearnKey","Lynda.com","Magic","Math","Medical","Misc","Misc e-Learning","Music Learning","Photography","Political","Religion","Self Improvement","SFX","Sports","PhotoStock","Total Training","TTC","VideoStock"]},'BitMeTV': { enabled: 0, global: 1, auth: 0, limit: 35, public: 0, cookies: "www.bitmetv.org|pass=XXX;uid=XXX", cats: ["all","(70s Shows)","(80s Shows)","(Adult Swim)","(Anime)","(Billiards-Snooker-Pool)","(British - UK Comedy)","(British - UK Drama)","(British Mystery)","(Canadian Comedy)","(Canadian TV)","(Cartoons)","(Discovery)","(Documentaries)","(Fantasy-Supernatural)","(Food TV)","(Game Shows)","(HGTV)","(Home and Garden)","(Kids TV)","(National Geographic)","(News)","(Nickelodeon)","(NZTV)","(OZTV)","(PBS)","(Poker)","(Portable TV Episodes)","(Reality TV - Competitive)","(Reality TV - Un-scripted)","(Sci Fi)","(Soaps)","(Stand-Up Comedy)","(Subtitles)","(Sweden Comedy)","(Sweden Drama)","(Talk Shows)","(Tech TV)","(Trailers)","(TV Movies)","(US Comedy)","(US Drama)","(Westerns)","(Wrestling)","(z- Other TV Episodes)"]},'BlackcatsGames': { enabled: 0, global: 1, auth: 1, limit: 50, public: 0, cookies: "", cats: ["all","3DS","Android","Audiobooks","Console Apps","Dreamcast","DS","Game-Dev","Game-Dox|Saves","Game-Mods","Game-OST","Gamecube","iPhone|iPad","JTAG|RGH","Linux","Mac","Mame","Member Creations","NES|SNES","Packs","PC","Phone|PDA","PS1","PS2","PS3","PS4","PSN","PSP","PSXPSP","Roms","Saturn","Tech Vids","Wii","WiiU","WiiVC","WiiWare","XBOX","XBOX 360","XBOX One","XBOXto360"]},'BroadcasThe': { enabled: 0, global: 1, auth: 1, limit: 50, public: 0, cookies: "", cats: ["all","Season","Episode","SD","SD+Season","720p","720p+Season","1080p","1080p+Season","1080i","1080i+Season","Portable","Portable+Season"]},'CPasBien': { enabled: 1, global: 1, auth: 0, limit: 30, public: 1, cookies: "", cats: ["Tout","Films","S����ries","Musique","Ebook","Logiciels","Jeux PC","Jeux Consoles"]},'Demonoid': { enabled: 0, global: 1, auth: 0, limit: 50, public: 0, cookies: "www.demonoid.com|uhsh=XXX;uid=XXX", cats: ["all","Anime","Applications","Audio Books","Books","Comics","Games","Miscellaneous","Movies","Music","Music Videos","Pictures","TV"]},'ExtraTorrent': { enabled: 1, global: 1, auth: 0, limit: 50, public: 1, cookies: "", cats: ["all","Movies","TV","Music","Adult/Porn","Software","Games","Anime","Books","Pictures","iPod","Other"]},'Fenopy': { enabled: 1, global: 1, auth: 0, limit: 50, public: 1, cookies: "", cats: ["all","Animes","Books","Games","Movies","Music","Others","Apps","TV Shows","Videos"]},'FtN': { enabled: 0, global: 1, auth: 1, limit: 15, public: 0, cookies: "", cats: ["all","Apps","DOX","Games","Misc","Movies","Music","Mvids","TV","XXX"]},'GForcesTracker': { enabled: 0, global: 1, auth: 0, limit: 15, public: 0, cookies: "www.thegft.org|c_secure_pass=XXX;c_secure_uid=XXX;c_secure_login=XXX;", cats: ["all","0DAY","Anime","APPS","Carrib Corner","E-Learning","Games/NDS","Games/PC","Games/PS2","Games/PS3","Games/PSP","Games/WII","Games/XBOX360","GFT Gems","MAC","Misc","Movies-DVDR","Movies-X264","Movies-XVID","Music","MVID","Mobile/PDA","TV-DVDRIP","TV-X264","TV-XVID","XXX-0DAY","XXX-DVDR","XXX-HD","XXX-XVID"]},'HDDream': { enabled: 0, global: 1, auth: 1, limit: 15, public: 0, cookies: "", cats: ["all","Animes","BD5","BD9","Bluray","Clip/Concert/Spectacles HD","Covers HD","Divers","DOCUMENTAIRES","Flac","HD 1080p","HD 720p","Logiciels","Piste-Son","REMUX","Series HD","XxX HD"]},'HDTorrents': { enabled: 0, global: 1, auth: 0, limit: 15, public: 0, cookies: "hd-torrents.org|pass=XXX;uid=XXX;", cats: ["all","Movie","TV Show","Music","XXX"]},'HDTs': { enabled: 0, global: 1, auth: 0, limit: 15, public: 0, cookies: "hdts.ru|pass=XXX;uid=XXX;", cats: ["all","Movie(all)","Movie(all-3D only)","Movie/BluRay","Movie/BluRay(3D only)","Movie/Remux","Movie/Remux(3D only)","Movie/1080p/i","Movie/1080p/i(3D only)","Movie/720p","Movie/720p(3D only)","Movie/Audio Track","TV Show(all)","TV Show(all-3D only)","TV Show/Blu-ray","TV Show/Blu-ray(3D only)","TV Show/Remux","TV Show/Remux(3D only)","TV Show/1080p/i","TV Show/1080p/i(3D only)","TV Show/720p","TV Show/720p(3D only)","Music(all)","Music(3D only)","Music/Album","Music/Blu-Ray","Music/Remux","Music/1080p/i","Music/720p","XXX(all)","XXX(3D only)","XXX/Blu-ray","XXX/1080p/i","XXX/720p"]},'HDVnbits': { enabled: 0, global: 1, auth: 0, limit: 50, public: 0, cookies: "hdvnbits.org|c_secure_pass=XXX;c_secure_uid=XXX;c_secure_login=XXX;", cats: ["all","Game","Movie","TV","Software","Music","Misc"]},'ILoveTorrents': { enabled: 0, global: 1, auth: 1, limit: 15, public: 0, cookies: "", cats: ["all","Anime","Appz/Misc","Appz/PC ISO","Ebooks","Games/PC ISO","Games/PC Rips","Games/PS2","Games/PS3","Games/Wii","Games/Xbox360","KIDS-Zone","Movies/DVD-R","Movies/Other","Movies/x264","Movies/XviD","Music Videos","Music/Albums","Other/Stuff","PSP/Handheld","TV/Packs","TV/x264","TV/XviD","XXX"]},'IPTorrents': { enabled: 0, global: 1, auth: 0, limit: 35, public: 0, cookies: "www.iptorrents.com|pass=XXX;uid=XXX", cats: ["all","Movies","TV","Games","Music","Miscellaneous","XXX"]},'ImmortalSeed': { enabled: 0, global: 1, auth: 1, limit: 30, public: 0, cookies: "", cats: ["all","All Nuked","Anime","Apps","Audiobooks","Childrens/Cartoons","Ebooks","|-- Comics","|-- Magazines","Games","|-- Games Xbox","|-- Games-PC ISO","|-- Games-PC Rips","|-- Games-PSx","Movies-HD","|-- Non-English","Movies-Low Def","Movies-SD","Music","|-- FLAC","|-- MP3","|-- Other","|-- Video","Other","Pre edit torrents","Sports Tv","|-- Fitness-Instructional","TV - 480p","TV - High Definition","TV SD - x264","TV SD - XviD","TV Season Packs - HD","TV Season Packs - SD"]},'KickAssTorrents': { enabled: 1, global: 1, auth: 0, limit: 25, public: 1, cookies: "", cats: ["all","Anime","Applications","Books","Games","Movies","Music","Other","TV","XXX"]},'KinozalTV': { enabled: 0, global: 1, auth: 0, limit: 40, public: 0, cookies: "kinozal.tv|uid=XXX;pass=XXX;", cats: ["all","�������� - ������������","�������� - ��������������","�������� - ������������ / ��������������","�������� - �������������� / ����������������","�������� - ����������","�������� - ������������������","�������� - ������������������","�������� - ��������������������","�������� - ��������������","�������� - �������� / ��������������","�������� - ����������������������","�������� - �������� ��������","�������� - ������������������������","�������� - ����������������������������","�������� - ����������","�������� - ����������������","�������� - ��������������","�������� - ����������������","�������� - �������������� / ����-������","�������� - ����������, ����������, ����������","�������� - ��������������","���������� - ��������������������","���������� - ��������������","���������� - ����������","������������ - ��������������������","������������ - ��������������","������������ - ������������������������","������������ - ��������������������","������������ - ��������������������","������������ - ��������","������������ - ������������������","������������ - ��������������","������������ - ��������������������"]},'MMATorrents': { enabled: 0, global: 1, auth: 0, limit: 50, public: 0, cookies: "mma-torrents.com|uid=XXX;pass=XXX;", cats: ["all","Audio Learning","Audio Radio","Bellator All","Boxing All","Classic MMA All","Documentary MMA","DREAM Events","DREAM Retro","HD HD/x264 Bellator","HD HD/x264 Boxing","HD HD/x264 DREAM","HD HD/x264 K-1","HD HD/x264 KOTC","HD HD/x264 Packs","HD HD/x264 Strikeforce","HD HD/x264 TUF","HD HD/x264 TV-Show","HD HD/x264 UFC","HD HD/x264 Unsorted","HD HD/x264 WEC","K-1 Events","K-1 Retro","Kickboxing All","KOTC All","Learning E-book","Learning Fitness","Learning Technique","M-1 Challenge","M-1 Global","Magazines MMA","Misc All","MMA Events Other Events","Movies MMA Related","Muay Thai All","Packs Career","Packs MMA","Pride All","Pride Packs","Sengoku All","Special Misc","Strikeforce All","TUF Episodes","TUF Packs","TV Show HDNet Shows","TV Show InsideMMA","TV Show MMA Live","TV Show Other Shows","UFC All","UFC Retro"]},'MMATracker': { enabled: 0, global: 1, auth: 0, limit: 50, public: 0, cookies: "mma-tracker.net|pass=XXX;uid=XXX;", cats: ["all","Audio","BigPacks","Career","Compilation","Documentary","E-Book","Event","Fight","Highlight","Instructional","Other","Promo","TV Show"]},'Mininova': { enabled: 1, global: 1, auth: 0, limit: 200, public: 1, cookies: "", cats: ["all","Anime","Books","Games","Movies","Music","Other","Pictures","Software","TV Shows","ViewCave"]},'NNMClub': { enabled: 0, global: 1, auth: 1, limit: 50, public: 0, cookies: "", cats: ["all"]},'PirateBay': { enabled: 1, global: 1, auth: 0, limit: 30, public: 1, cookies: "", cats: ["all","Audio","Video","Applications","Games","Porn","Other"]},'PretoMe': { enabled: 0, global: 1, auth: 0, limit: 25, public: 0, cookies: "preto.me|pass=XXX;uid=XXX", cats: ["all","Applications","Ebooks","Games","Miscellaneous","Movies","Music","TV"]},'PtP': { enabled: 0, global: 1, auth: 0, limit: 50, public: 0, cookies: "passthepopcorn.me|session=XXX", cats: ["all","Feature Film","Short Film","Miniseries","Stand-up Comedy","Concert"]},'PuntoTorrent': { enabled: 0, global: 1, auth: 0, limit: 15, public: 0, cookies: "xbt.puntotorrent.com|uid=XXX;pass=XXX", cats: ["all","DVD/Animaci��n","DVD/Deportes","DVD/Documentales","DVD/Pel��culas","DVD/Series","DVD/Adulto (+18)","DVD/Musica","DIVX/Series","DIVX/Animaci��n","DIVX/Deportes","DIVX/Documentales","DIVX/Estrenos","DIVX/Pel��culas","DIVX/Estrenos Baja Calidad","DIVX/Adulto (+18)","DIVX/M��sica","HD/Animaci��n","HD/Deportes","HD/Documentales","HD/Pel��culas","HD/HD Xbox360","HD/HD PS3","HD/Series","HD/Adulto (+18)","HD/M��sica","M��sica/Mp3","M��sica/FLAC","M��sica/Otros formatos de audio","Juegos/Microsoft","Juegos/Sony","Juegos/PC","Juegos/Nintendo","Juegos/Otros","Juegos/Emuladores","Otros/Varios","Otros/eBooks","Otros/Hentai","Otros formatos de v��deo/VCD","Otros formatos de v��deo/Estrenos VCD","Software/Windows","Software/Linux","Software/MAC","Software/Otras Plataformas","Software/Android","Disp. Port��tiles/Series","Disp. Port��tiles/Animaci��n","Disp. Port��tiles/Deportes","Disp. Port��tiles/Documentales","Disp. Port��tiles/Pel��culas","Disp. Port��tiles/Adulto XXX (+18)","Disp. Port��tiles/M��sica","Disp. Port��tiles/Estrenos","Consolas Port��tiles/Animaci��n","Consolas Port��tiles/Deportes","Consolas Port��tiles/Documentales","Consolas Port��tiles/Pel��culas","Consolas Port��tiles/Series","Consolas Port��tiles/Adulto XXX (+18)","Consolas Port��tiles/M��sica","Consolas Port��tiles/Estrenos","Otros Dispositivos","HDRip/Animaci��n","HDRip/Deportes","HDRip/Documentales","HDRip/Pel��culas","HDRip/Series","HDRip/Adulto (+18)","HDRip/M��sica","3D/Animaci��n 3D","3D/Deportes 3D","3D/Documentales 3D","3D/Pel��culas 3D","3D/Adulto XXX (+18) 3D","3D/M��sica 3D","GOLD","SILVER"]},'RUTracker': { enabled: 0, global: 1, auth: 1, limit: 50, public: 0, cookies: "", cats: ["all"]},'RevTT': { enabled: 0, global: 1, auth: 0, limit: 25, public: 0, cookies: "www.revolutiontt.net|pass=XXX;uid=XXX", cats: ["all","Anime","Appz","E-Book","Games","Handheld","Mac","Movies","Music","TV","XXX"]},'ScC': { enabled: 0, global: 1, auth: 0, limit: 25, public: 0, cookies: "www.sceneaccess.org|pass=XXX;uid=XXX", cats: ["all","Movies/DVD-R","Movies/x264","Movies/XviD","TV/DVD-R","TV/DVDRip","TV/x264","TV/XviD","Games/PC","Games/PS3","Games/PSP","Games/WII","Games/XBOX360","APPS","DOX","MISC"]},'SceneHD': { enabled: 0, global: 1, auth: 0, limit: 50, public: 0, cookies: "scenehd.org|pass=XXX;uid=XXX;", cats: ["all","Movie/1080","Movie/720","Movie/BD5/9","Movie/Complete","TV/1080","TV/720","WMV-HD","XXX","MVID","Subpacks","Other"]},'TVTorrents': { enabled: 0, global: 1, auth: 1, limit: 20, public: 0, cookies: "", cats: ["All"]},'Torrent411': { enabled: 0, global: 1, auth: 0, limit: 50, public: 0, cookies: "www.t411.me|uid=XXX;pass=XXX;authKey=XXX", cats: ["Tout","|--Audio","|--|--Karaoke","|--|--Musique","|--|--Samples","|--eBook","|--|--Audio","|--|--Bds","|--|--Comics","|--|--Livres","|--|--Mangas","|--|--Presse","|--Emulation","|--|--Emulateurs","|--|--Roms","|--Jeu vid��o","|--|--Linux","|--|--MacOS","|--|--Windows","|--|--Microsoft","|--|--|--Xbox","|--|--|--Xbox 360","|--|--|--Xbox One","|--|--Nintendo","|--|--|--3Ds","|--|--|--Ds","|--|--|--Gamecube","|--|--|--Wii","|--|--|--WiiU","|--|--Sony","|--|--|--Playstation","|--|--|--Playstation2","|--|--|--Playstation3","|--|--|--Playstation4","|--|--|--Psp","|--|--|--Vita","|--|--Smartphone","|--|--Tablette","|--|--Autre","|--GPS","|--|--Applications","|--|--Cartes","|--|--Divers","|--Application","|--|--Formation","|--Film/Vid��o","|--|--Animation","|--|--Animation S��rie","|--|--Concert","|--|--Documentaire","|--|--Emission TV","|--|--Film","|--|--S��rie TV","|--|--Spectacle","|--|--Sport","|--|--Vid��o-clips"]},'TorrentDamage': { enabled: 0, global: 1, auth: 1, limit: 25, public: 0, cookies: "", cats: ["all","Anime","Appz","Games","Movies","Music","TV","XXX"]},'TorrentDay': { enabled: 0, global: 1, auth: 0, limit: 35, public: 0, cookies: "www.torrentday.com|pass=XXX;uid=XXX;", cats: ["all","Movies","TV","Movies/DVD-R","PC Games","PS2","XXX","TV-X264","PSP","XBOX360","WII","X264","Movie Packs","TV Packs","XXX Packs","Music Videos"]},'TorrentDownloads': { enabled: 1, global: 1, auth: 0, limit: 50, public: 1, cookies: "", cats: ["all","Anime","Books","Games","Movies","Music","Software","TV Shows","Other"]},'TorrentLeech': { enabled: 0, global: 1, auth: 1, limit: 100, public: 0, cookies: "", cats: ["all","Movies","TV","Games","Music","Books","Applications","Anime"]},'TorrentReactor': { enabled: 1, global: 1, auth: 0, limit: 35, public: 1, cookies: "", cats: ["all","Anime","Software","Games","Movies","Music","Other","Series/TV Shows"]},'TorrentZap': { enabled: 1, global: 1, auth: 0, limit: 50, public: 1, cookies: "", cats: ["all","Anime","Books","Games","Movies","Music","Pictures","Software","TV Shows","Other"]},'Torrentech': { enabled: 0, global: 1, auth: 1, limit: 25, public: 0, cookies: "", cats: ["All"]},'Torrentz': { enabled: 1, global: 1, auth: 0, limit: 50, public: 1, cookies: "", cats: ["all","Movies","TV","Music","Software","Games","XXX"]},'TvT': { enabled: 0, global: 1, auth: 0, limit: 15, public: 0, cookies: "freshon.tv|pass=XXX;uid=XXX", cats: ["all","...2010 World Cup Africa...","..Anime..","..Cartoons..","..Comedy..","..Documentaries..","..Miniseries..","..NBA..","..Other..","..Poker..","..Reality-TV..","..Sports.."]},'Vertor': { enabled: 1, global: 1, auth: 0, limit: 30, public: 1, cookies: "", cats: ["all","Anime","Software","Games","Movies","Music","Other","Series/TV Shows"]},'WhatCD': { enabled: 0, global: 1, auth: 1, limit: 50, public: 0, cookies: "", cats: ["all","Music","Applications","E-Books","Audiobooks","E-Learning Videos","Comedy","Comics"]},'jpopsuki': { enabled: 0, global: 1, auth: 1, limit: 50, public: 0, cookies: "", cats: ["all","Album","Single","PV","DVD","TV-Music","TV-Variety","TV-Drama","Fansubs","Pictures","Misc"]},'theBox': { enabled: 0, global: 1, auth: 0, limit: 25, public: 0, cookies: "thebox.bz|pass=XXX;uid=XXX", cats: ["all","Adverts / Idents","Arts & Culture","Big Brother","Comedy","Doctor Who","Documentary / Educational","Drama","Entertainment","Food & Drink","Game Shows","Gardening","Home & Property","Horizon","Kids","Magazine","Motoring","Music","Mystery / Crime Fiction","News","Occult / Horror","QuizComedy","Radio: Arts","Radio: Audio Comedy","Radio: Audio Drama","Radio: Audio Sci-fi","Radio: General","Reality","Sci-Fi","Soaps","Special Events","Special Interest","Sport","Style & Fashion","Talkshow","Trains, Planes","Travel","Wildlife & Nature"]}}; plugin.loadMainCSS(); plugin.loadLang(); plugin.categories = [ 'all', 'movies', 'tv', 'music', 'games', 'anime', 'software', 'pictures', 'books' ]; plugin.set = theSearchEngines.set; theSearchEngines.set = function(val, noSave) { plugin.set.call(theSearchEngines,val,noSave); theSearchEngines.checkForIncorrectCurrent(!noSave); } theSearchEngines.getEngName = function(eng) { return(eng=="all" ? theUILang.All : eng=="public" ? theUILang.extAllPublic : eng=="private" ? theUILang.extAllPrivate : eng); } theSearchEngines.isPublicPresent = function(enable) { var ret = false; $.each(this.sites,function(ndx,val) { if((val.public==enable) && val.enabled && val.global) { ret = true; return(false); } }); return(ret); } plugin.sitesShow = theSearchEngines.show; theSearchEngines.show = function() { if(plugin.enabled) { theContextMenu.clear(); theSearchEngines.checkForIncorrectCurrent(false); if(theSearchEngines.current=='all') theContextMenu.add([CMENU_SEL, theUILang.All, "theSearchEngines.set('all')"]); else theContextMenu.add([theUILang.All, "theSearchEngines.set('all')"]); if(this.isPublicPresent(true) && this.isPublicPresent(false)) { if(theSearchEngines.current=='public') theContextMenu.add([CMENU_SEL, theUILang.extAllPublic, "theSearchEngines.set('public')"]); else theContextMenu.add([theUILang.extAllPublic, "theSearchEngines.set('public')"]); if(theSearchEngines.current=='private') theContextMenu.add([CMENU_SEL, theUILang.extAllPrivate, "theSearchEngines.set('private')"]); else theContextMenu.add([theUILang.extAllPrivate, "theSearchEngines.set('private')"]); } theContextMenu.add([CMENU_SEP]); var public = []; var private = []; var publicPresent = false; var privatePresent = false; $.each(this.sites,function(ndx,val) { if(val.enabled) { if(val.public) publicPresent = true; else privatePresent = true; if(publicPresent && privatePresent) return(false); } }); $.each(this.sites,function(ndx,val) { if(val.enabled) { if(publicPresent && privatePresent) { if(val.public) { if(theSearchEngines.current==ndx) public.push([CMENU_SEL, ndx, "theSearchEngines.set('"+ndx+"')"]); else public.push([ndx, "theSearchEngines.set('"+ndx+"')"]); } else { if(theSearchEngines.current==ndx) private.push([CMENU_SEL, ndx, "theSearchEngines.set('"+ndx+"')"]); else private.push([ndx, "theSearchEngines.set('"+ndx+"')"]); } } else { if(theSearchEngines.current==ndx) theContextMenu.add([CMENU_SEL, ndx, "theSearchEngines.set('"+ndx+"')"]); else theContextMenu.add([ndx, "theSearchEngines.set('"+ndx+"')"]); } } else if(theSearchEngines.current==ndx) theSearchEngines.current=-1; }); if(public.length) theContextMenu.add([CMENU_CHILD, theUILang.extPublic, public]); if(private.length) theContextMenu.add([CMENU_CHILD, theUILang.extPrivate, private]); if(publicPresent || privatePresent) theContextMenu.add([CMENU_SEP]); if(theSearchEngines.current==-1) theContextMenu.add([CMENU_SEL, theUILang.innerSearch, "theSearchEngines.set(-1)"]); else theContextMenu.add([theUILang.innerSearch, "theSearchEngines.set(-1)"]); var offs = $("#search").offset(); theContextMenu.show(offs.left-5,offs.top+5+$("#search").height()); } else plugin.sitesShow.call(theSearchEngines); } theSearchEngines.checkForIncorrectCurrent = function( refreshCats ) { if(plugin.enabled) { if(($type(theSearchEngines.current)=="number") && (theSearchEngines.current>=0)) { theSearchEngines.current = -1; theWebUI.save(); } else { if(( (theSearchEngines.current!='all') && (theSearchEngines.current!='private') && (theSearchEngines.current!='public') && (!$type(theSearchEngines.sites[theSearchEngines.current]) || !theSearchEngines.sites[theSearchEngines.current].enabled) ) || ( !(this.isPublicPresent(true) && this.isPublicPresent(false)) && ((theSearchEngines.current=='private') || (theSearchEngines.current=='public')) )) { theSearchEngines.current = -1; theWebUI.save(); }; } if(refreshCats) plugin.refreshCategories(); } } plugin.sitesRun = theSearchEngines.run; theSearchEngines.run = function() { if(plugin.enabled) { var s = $.trim($("#query").val()); if(s.length) { this.checkForIncorrectCurrent(false); if(theSearchEngines.current==-1) theWebUI.setTeg(s); else { $("#query").prop("readonly",true); theWebUI.requestWithoutTimeout("?action=extsearch&s="+theSearchEngines.current+"&v="+encodeURIComponent(s)+"&v="+encodeURIComponent($("#exscategory").val()),[theWebUI.setExtSearchTag, theWebUI]); } } } else plugin.sitesRun.call(theSearchEngines); } rTorrentStub.prototype.extsearch = function() { this.content = "mode=get&eng="+this.ss[0]+"&what="+this.vs[0]+"&cat="+this.vs[1]; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/extsearch/action.php"; this.dataType = "json"; } rTorrentStub.prototype.loadtegtorrents = function() { this.content = "mode=loadtorrents"; if($("#tegtorrents_start_stopped").prop("checked")) this.content += '&torrents_start_stopped=1'; if($("#tegnot_add_path").prop("checked")) this.content += '&not_add_path=1'; var dir = $.trim($("#tegdir_edit").val()); if(dir.length) this.content += ('&dir_edit='+encodeURIComponent(dir)); var lbl = $.trim($("#teglabel").val()); if(lbl.length) this.content += '&label='+encodeURIComponent(lbl); if($("#tegfast_resume").prop("checked")) this.content += 'fast_resume=1&'; for(var i = 0; i<plugin.tegArray.length; i++) { var item = plugin.tegArray[i]; this.content += ('&url='+encodeURIComponent(item.data.link)+'&eng='+item.data.src+'&teg='+item.id+'&ndx='+item.ndx); } this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/extsearch/action.php"; this.dataType = "json"; } plugin.lastTeg = 0; plugin.tegs = {}; plugin.tegArray = new Array(); plugin.reloadData = function(id) { if($type(plugin.tegs[id])) { var table = theWebUI.getTable("teg"); table.noSort = true; table.clearRows(); table.scrollTo(0); var data = plugin.tegs[id].data; var count = 0; for( var i = 0; i<data.length; i++ ) { var item = data[i]; if(!item.deleted) { if(item.hash && $type(theWebUI.torrents[item.hash])) { table.addRow(theWebUI.getTable("trt").getValues(item.hash), id+'$'+i, theWebUI.getTable("trt").getIcon(item.hash)); } else table.addRowById( { name: item.name, created: item.time-theWebUI.deltaTime/1000, peers: item.peers, seeds: item.seeds, size: item.size, status: item.src, label: item.cat }, id+'$'+i, "Engine"+item.src); count++; } } if(table.sIndex !=- 1) table.Sort(); plugin.correctCounter(id,count); table.noSort = false; } } plugin.enterTeg = function() { plugin.reloadData(theWebUI.actLbl); var lst = $("#List"); var table = theWebUI.getTable("teg"); if(lst.is(":visible")) { theWebUI.getTable("trt").clearSelection(); theWebUI.dID = ""; theWebUI.clearDetails(); var teg = $("#TegList"); teg.css( { width: lst.width(), height: lst.height() } ); table.resize(lst.width(), lst.height()); lst.hide(); teg.show(); table.scrollTo(0); } table.calcSize().resizeHack(); } plugin.leaveTeg = function() { $("#TegList").hide(); $("#List").show(); } plugin.correctCounter = function(id,count) { if($type(plugin.tegs[id])) { if(count===null) { count = 0; var data = plugin.tegs[id].data; for( var i = 0; i<data.length; i++ ) if(!data[i].deleted) count++; } $("#"+id+"-c").text(count); $("#"+id).prop("title",plugin.tegs[id].val+" ("+count+")"); } } plugin.switchLabel = theWebUI.switchLabel; theWebUI.switchLabel = function(obj) { if(plugin.enabled && theWebUI.actLbl && $type(plugin.tegs[theWebUI.actLbl])) plugin.leaveTeg(); plugin.switchLabel.call(theWebUI,obj); if(plugin.enabled && theWebUI.actLbl && $type(plugin.tegs[theWebUI.actLbl])) plugin.enterTeg(); } plugin.filterByLabel = theWebUI.filterByLabel; theWebUI.filterByLabel = function(hash) { if(!$($$(this.actLbl)).hasClass("exteg")) plugin.filterByLabel.call(theWebUI,hash); } theWebUI.setTagsHash = function(d) { if($type(plugin.tegs[d.teg])) { for( var i=0; i<d.data.length; i++ ) { var item = plugin.tegs[d.teg].data[ d.data[i].ndx ]; item.hash = d.data[i].hash; noty( (item.hash ? theUILang.addTorrentSuccess : theUILang.addTorrentFailed) +" ("+item.name+')', (item.hash ? "success" : "error") ); } theWebUI.getTorrents("list=1"); } } theWebUI.tegLoadTorrents = function() { this.request("?action=loadtegtorrents",[theWebUI.setTagsHash, theWebUI]); } theWebUI.extTegLoad = function() { theDialogManager.show("tegLoadTorrents"); } theWebUI.extTegOpen = function() { for(var i = 0; i<plugin.tegArray.length; i++) window.open(plugin.tegArray[i].data.desc,"_blank"); } theWebUI.tegItemRemove = function() { var table = theWebUI.getTable("teg"); for(var i = 0; i<plugin.tegArray.length; i++) { plugin.tegs[theWebUI.actLbl].data[plugin.tegArray[i].ndx].deleted = true; table.removeRow( theWebUI.actLbl+"$"+plugin.tegArray[i].ndx ); } plugin.correctCounter(theWebUI.actLbl,null); table.refreshRows(); } theWebUI.showTegURLInfo = function() { var table = theWebUI.getTable("teg"); for(var i = 0; i<plugin.tegArray.length; i++) { log(theUILang.exsURLGUID+": "+plugin.tegs[theWebUI.actLbl].data[plugin.tegArray[i].ndx].desc); log(theUILang.exsURLHref+": "+plugin.tegs[theWebUI.actLbl].data[plugin.tegArray[i].ndx].link); } } theWebUI.extTegDelete = function() { var lbl = theWebUI.actLbl; theWebUI.switchLabel($$("-_-_-all-_-_-")); delete plugin.tegs[lbl]; $($$(lbl)).remove(); } plugin.createExtTegMenu = function(e, id) { var trtArray = new Array(); plugin.tegArray = new Array(); var sr = theWebUI.getTable("teg").rowSel; for(var k in sr) { if(sr[k] == true) { var nfo = plugin.getTegByRowId(k); if(nfo) { var hash = nfo.data.hash; if(hash && $type(theWebUI.torrents[hash])) trtArray.push(hash); else plugin.tegArray.push(nfo); } } } theContextMenu.clear(); if(plugin.tegArray.length) { if(plugin.canChangeMenu()) { theContextMenu.add([ theUILang.tegMenuLoad, "theWebUI.extTegLoad()"]); theContextMenu.add([ theUILang.tegMenuOpen, "theWebUI.extTegOpen()"]); theContextMenu.add([ theUILang.tegMenuDeleteItem, "theWebUI.tegItemRemove()"]); theContextMenu.add([ theUILang.exsURLInfo, "theWebUI.showTegURLInfo()"] ); } else theContextMenu.hide(); } else if(trtArray.length) { var table = theWebUI.getTable("trt"); for(var k in table.rowSel) table.rowSel[k] = false; table.selCount = trtArray.length; for(var i = 0; i<trtArray.length; i++) table.rowSel[trtArray[i]] = true; table.refreshSelection(); theWebUI.dID = trtArray[0]; theWebUI.createMenu(e, trtArray[0]); } } plugin.extTegContextMenu = function(e) { if(e.which==3) { if(plugin.canChangeMenu()) { var table = theWebUI.getTable("teg"); theWebUI.getTable("trt").clearSelection(); table.clearSelection(); theWebUI.switchLabel(this); table.fillSelection(); var id = table.getFirstSelected(); if(id) { plugin.createExtTegMenu(null, id); theContextMenu.add([CMENU_SEP]); } else theContextMenu.clear(); theContextMenu.add([ theUILang.tegRefresh, "theWebUI.tegRefresh()"]); theContextMenu.add([ theUILang.tegMenuDelete, "theWebUI.extTegDelete()"]); theContextMenu.show(); } else { theContextMenu.hide(); theWebUI.switchLabel(this); } } else theWebUI.switchLabel(this); return(false); }; theWebUI.setExtSearchTag = function( d ) { $("#query").removeAttr("readonly"); var what = $.trim($("#query").val()); var str = theSearchEngines.getEngName(d.eng)+"/"+($type(theUILang["excat"+d.cat]) ? theUILang["excat"+d.cat] : d.cat)+": "+what; for( var id in plugin.tegs ) if(plugin.tegs[id].val==str) { plugin.tegs[id].data = d.data; theWebUI.switchLabel($$(id)); return; } var tegId = "extteg_"+plugin.lastTeg; plugin.lastTeg++; var el = $("<LI>").attr("id",tegId).addClass("exteg").addClass('Engine'+d.eng).attr("title",str+" (0)"). html(escapeHTML(str) + "&nbsp;(<span id=\"" + tegId + "-c\">0</span>)"). mouseclick(plugin.extTegContextMenu).addClass("cat") $("#lblf").append( el ); plugin.tegs[tegId] = { "val": str, "what": what, "cat": d.cat, "eng": d.eng, "data": d.data }; theWebUI.switchLabel(el[0]); } plugin.getTegByRowId = function( rowId ) { var pos = rowId.indexOf('$'); if(pos>0) { var tegId = rowId.substr(0,pos); var index = rowId.substr(pos+1); if($type(plugin.tegs[tegId]) && (plugin.tegs[tegId].data.length>index)) return( { id: tegId, ndx: index, data: plugin.tegs[tegId].data[index] } ); } return(null); } plugin.loadTorrents = theWebUI.loadTorrents; theWebUI.loadTorrents = function(needSort) { plugin.loadTorrents.call(this,needSort); var table = this.getTable("teg"); if(plugin.enabled && this.actLbl && $type(plugin.tegs[this.actLbl])) { var updated = false; var tegItems = plugin.tegs[this.actLbl].data; for(var i=0; i<tegItems.length; i++) { var item = tegItems[i]; var ndx = this.actLbl+'$'+i; if($type(table.rowdata[ndx])) { if((item.hash!="") && $type(this.torrents[item.hash])) updated = table.updateRowFrom(this.getTable("trt"),item.hash,ndx) || updated; else { updated = table.setValuesById(ndx, { name: item.name, created: item.time-theWebUI.deltaTime/1000, peers: item.peers, seeds: item.seeds, size: item.size, status: item.src, label: item.cat },true) || updated; updated = table.setIcon(ndx,"Engine"+item.src) || updated; } } } if(updated && (table.sIndex !=- 1)) table.Sort(); } } theWebUI.tegRefresh = function() { if($type(plugin.tegs[theWebUI.actLbl])) { var item = plugin.tegs[theWebUI.actLbl]; $("#query").val(item.what).prop("readonly",true); theWebUI.requestWithoutTimeout("?action=extsearch&s="+item.eng+"&v="+encodeURIComponent(item.what)+"&v="+encodeURIComponent(item.cat),[theWebUI.setExtSearchTag, theWebUI]); } } theWebUI.tegItemSelect = function(e,id) { var sr = theWebUI.getTable("teg").rowSel; var trtArray = new Array(); for(var k in sr) { if(sr[k] == true) { var nfo = plugin.getTegByRowId(k); if(nfo && nfo.data.hash && $type(theWebUI.torrents[nfo.data.hash])) trtArray.push(nfo.data.hash); } } var table = theWebUI.getTable("trt"); for(var k in table.rowSel) table.rowSel[k] = false; table.selCount = trtArray.length; for(var i = 0; i<trtArray.length; i++) table.rowSel[trtArray[i]] = true; table.refreshSelection(); if(id && (nfo = plugin.getTegByRowId(id)) && nfo.data.hash && $type(theWebUI.torrents[nfo.data.hash])) theWebUI.trtSelect(e, nfo.data.hash); else { theWebUI.dID = ""; theWebUI.clearDetails(); if((e.which==3) && plugin.canChangeMenu()) { plugin.createExtTegMenu(e, id); theContextMenu.show(); } else theContextMenu.hide(); } } theWebUI.tegItemDblClick = function(obj) { var nfo = plugin.getTegByRowId(obj.id); if(nfo) { if(nfo.data.hash && $type(theWebUI.torrents[nfo.data.hash])) { var tmp = new Object(); tmp.id = nfo.data.hash; theWebUI.getTable("trt").ondblclick( tmp ); delete tmp; } else window.open(nfo.data.desc,"_blank"); } } plugin.resizeTop = theWebUI.resizeTop; theWebUI.resizeTop = function( w, h ) { plugin.resizeTop.call(theWebUI,w,h); if(plugin.enabled) { if(w!==null) { $("#TegList").width( w ); if(theWebUI.configured) this.getTable("teg").resize( w ); } if(h!==null) { $("#TegList").height( h ); if(theWebUI.configured) this.getTable("teg").resize(null,h); } } } plugin.config = theWebUI.config; theWebUI.config = function(data) { $("#List").after($("<div>").attr("id","TegList").css("display","none")); this.tables["teg"] = { obj: new dxSTable(), container: "TegList", columns: cloneObject(theWebUI.tables["trt"].columns), format: this.tables.trt.format, onselect: function(e,id) { theWebUI.tegItemSelect(e,id); }, ondblclick: function(obj) { theWebUI.tegItemDblClick(obj); return(false); }, ondelete: function() { theWebUI.tegItemRemove(); } }; plugin.config.call(this,data); theSearchEngines.checkForIncorrectCurrent(true); } if(plugin.enabled && plugin.canChangeOptions()) { plugin.andShowSettings = theWebUI.addAndShowSettings; theWebUI.addAndShowSettings = function(arg) { if(plugin.enabled) { $('#exs_limit').val(theSearchEngines.globalLimit); $.each(theSearchEngines.sites,function(ndx,val) { $('#'+ndx+'_enabled').prop("checked", (val.enabled==1)).change(); $('#'+ndx+'_global').prop("checked", (val.global==1)).change(); $('#'+ndx+'_limit').val(val.limit); if(val.enabled==1) $('#opt_'+ndx).addClass('bld'); else $('#opt_'+ndx).removeClass('bld'); }); } $('#sel_public').change(); $('#sel_private').change(); plugin.andShowSettings.call(theWebUI,arg); } plugin.dataWasChanged = function() { if(iv($('#exs_limit').val())!=theSearchEngines.globalLimit) return(true); var ret = false; $.each(theSearchEngines.sites,function(ndx,val) { if( (($('#'+ndx+'_enabled').prop("checked") ? 1 : 0) ^ val.enabled) || (($('#'+ndx+'_global').prop("checked") ? 1 : 0) ^ val.global) || iv($('#'+ndx+'_limit').val())!=val.limit ) { ret = true; return(false); } }); return(ret); } plugin.setSettings = theWebUI.setSettings; theWebUI.setSettings = function() { plugin.setSettings.call(this); if(plugin.enabled && plugin.dataWasChanged()) this.request("?action=setexsearch",[theSearchEngines.checkForIncorrectCurrent,theSearchEngines]); } rTorrentStub.prototype.setexsearch = function() { var req = "mode=set&limit="+$('#exs_limit').val(); $.each(theSearchEngines.sites,function(ndx,val) { req += ('&'+ndx+'_enabled='+($('#'+ndx+'_enabled').prop("checked") ? 1 : 0)+ '&'+ndx+'_global='+($('#'+ndx+'_global').prop("checked") ? 1 : 0)+ '&'+ndx+'_limit='+$('#'+ndx+'_limit').val()); }); this.content = req; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/extsearch/action.php"; this.dataType = "script"; } } plugin.refreshCategories = function() { $('#exscategory option').remove(); if((theSearchEngines.current == 'all') || (theSearchEngines.current == 'private') || (theSearchEngines.current == 'public')) { if(plugin.allStuffLoaded) { for( var i=0; i<plugin.categories.length; i++) $('#exscategory').append("<option value='"+plugin.categories[i]+"'>"+theUILang["excat"+plugin.categories[i]]+"</option>"); } else $('#exscategory').append("<option value='all'>"+theUILang.excatall+"</option>"); } else if($type(theSearchEngines.sites[theSearchEngines.current])) { for( var i=0; i<theSearchEngines.sites[theSearchEngines.current].cats.length; i++) $('#exscategory').append("<option value='"+theSearchEngines.sites[theSearchEngines.current].cats[i]+"'>"+theSearchEngines.sites[theSearchEngines.current].cats[i]+"</option>"); } $("#exscategory").prop("disabled",(theSearchEngines.current == -1)); } plugin.shutdownOldVersion = function() { if(thePlugins.get('search').allStuffLoaded) { thePlugins.get('search').remove(); theWebUI.plgRefresh(); } else setTimeout(arguments.callee,1000); } plugin.onLangLoaded = function() { theDialogManager.make( "tegLoadTorrents", theUILang.torrent_add, "<div class='content'>"+ "<label>"+theUILang.Base_directory+":</label><input type='text' id='tegdir_edit' class='TextboxLarge'/><br/>"+ "<label></label><input type='checkbox' id='tegnot_add_path'/>"+theUILang.Dont_add_tname+"<br/>"+ "<label></label><input type='checkbox' id='tegtorrents_start_stopped'/>"+theUILang.Dnt_start_down_auto+"<br/>"+ '<label></label><input type="checkbox" id="tegfast_resume"/>'+theUILang.doFastResume+'<br/>'+ "<label>"+theUILang.Label+":</label><input type='text' id='teglabel' class='TextboxLarge'/>"+ "</div>"+ "<div id='buttons' class='aright buttons-list'><input type='button' class='OK Button' value="+theUILang.ok+" onclick='theDialogManager.hide(\"tegLoadTorrents\");theWebUI.tegLoadTorrents();return(false);'/><input type='button' class='Cancel Button' value='"+theUILang.Cancel+"'/></div>", true); if(thePlugins.isInstalled("_getdir")) { $('#tegdir_edit').after($("<input type=button>").addClass("Button").attr("id","tegBtn").focus( function() { this.blur(); } )); var btn = new theWebUI.rDirBrowser( 'tegLoadTorrents', 'tegdir_edit', 'tegBtn' ); theDialogManager.setHandler('tegLoadTorrents','afterHide',function() { btn.hide(); }); } var s = "<fieldset>"+ "<legend>"+theUILang.exsGlobalLimit+"</legend>"+ "<div class='checkbox'><label for='exs_limit' id='lbl_exs_limit'>"+theUILang.exsLimit+":</label><input type='text' class='Textbox num' maxlength=6 id='exs_limit'/></div>"+ "</fieldset>"; var contPublic = ""; var contPrivate = ""; var optPublic = ""; var optPrivate = ""; var styles = ""; var toDisable = []; $.each(theSearchEngines.sites,function(ndx,val) { if(val.public) { contPublic += "<div id='cont_"+ndx+"' class='seng_public'>"+ "<div class='checkbox'><input type='checkbox' id='"+ndx+"_enabled' onchange=\"$('#opt_"+ndx+"').toggleClass('bld'); linked(this, 0, ['"+ndx+"_global','"+ndx+"_limit']);\"/><label for='"+ndx+"_enabled' id='lbl_"+ndx+"_enabled'>"+theUILang.Enabled+"</label></div>"+ "<div class='checkbox'><input type='checkbox' id='"+ndx+"_global' onchange=\"linked(this, 0, ['"+ndx+"_limit']);\"/><label for='"+ndx+"_global' id='lbl_"+ndx+"_global'>"+theUILang.exsGlobal+"</label></div>"+ "<div class='checkbox'><label for='"+ndx+"_limit' id='lbl_"+ndx+"_limit'>"+theUILang.exsLimit+":</label><input type='text' class='Textbox num' maxlength=6 id='"+ndx+"_limit'/></div>"+ "</div>"; optPublic += "<option value='"+ndx+"' id='opt_"+ndx+"'>"+ndx+"</option>"; } else { contPrivate += "<div id='cont_"+ndx+"' class='seng_private'>"+ "<div class='checkbox'><input type='checkbox' id='"+ndx+"_enabled' onchange=\"$('#opt_"+ndx+"').toggleClass('bld'); linked(this, 0, ['"+ndx+"_global','"+ndx+"_limit']);\"/><label for='"+ndx+"_enabled' id='lbl_"+ndx+"_enabled'>"+theUILang.Enabled+"</label></div>"+ "<div class='checkbox'><input type='checkbox' id='"+ndx+"_global' onchange=\"linked(this, 0, ['"+ndx+"_limit']);\"/><label for='"+ndx+"_global' id='lbl_"+ndx+"_global'>"+theUILang.exsGlobal+"</label></div>"+ "<div class='checkbox'><label for='"+ndx+"_limit' id='lbl_"+ndx+"_limit'>"+theUILang.exsLimit+":</label><input type='text' class='Textbox num' maxlength=6 id='"+ndx+"_limit'/></div>"; if(val.cookies) { if(thePlugins.isInstalled("cookies")) contPrivate+= "<div class='checkbox'><a href=\"javascript://void();\" onclick=\"theOptionsSwitcher.run(\'st_cookies\'); return(false);\">"+theUILang.exsCookies+":</a><input type='text' class='TextboxLarge' readOnly=true id='"+ndx+"_cookies' value='"+val.cookies+"'/></div>"; else { contPrivate+="<div class='checkbox'>"+theUILang.exsMustInstallCookies+"</div>"; toDisable.push(ndx); } } else if(val.auth) { if(thePlugins.isInstalled("loginmgr")) contPrivate+= "<div class='checkbox'><a href=\"javascript://void();\" onclick=\"theOptionsSwitcher.run(\'st_loginmgr\'); return(false);\">"+theUILang.exsLoginMgr+"</a></div>"; else { contPrivate+="<div class='checkbox'>"+theUILang.exsMustInstallLoginMgr+"</div>"; toDisable.push(ndx); } } contPrivate+= "</div>"; optPrivate += "<option value='"+ndx+"' id='opt_"+ndx+"'>"+ndx+"</option>"; } styles += (".Engine"+ndx+" {background-image: url(./plugins/extsearch/images/"+ndx+".png); background-repeat: no-repeat}\n"); }); if(contPublic.length) { s+="<fieldset><legend>"+theUILang.exsEngines+" ("+theUILang.extPublic+")</legend>"; s+="<select id='sel_public'>"; s+=optPublic; s+="</select>"; s+=contPublic; s+="</fieldset>"; } if(contPrivate.length) { s+="<fieldset><legend>"+theUILang.exsEngines+" ("+theUILang.extPrivate+")</legend>"; s+="<select id='sel_private'>"; s+=optPrivate; s+="</select>"; s+=contPrivate; s+="</fieldset>"; } if(styles.length) injectCSSText(styles); this.attachPageToOptions($("<div>").attr("id","st_extsearch").html(s)[0],theUILang.exsSearch); for( var i in toDisable ) { $('#'+toDisable[i]+'_enabled').prop("disabled",true).prop("checked",false); $('#lbl_'+toDisable[i]+'_enabled').addClass("disabled"); } $('#sel_public').change( function() { $(".seng_public").hide(); $('#cont_'+$(this).val()).show(); }); $('#sel_private').change( function() { $(".seng_private").hide(); $('#cont_'+$(this).val()).show(); }); var td = $$('rrow').insertCell(2); s ="<select id='exscategory' title='"+theUILang.excat+"'></select>"; $(td).prop("id","exscat").html(s); plugin.markLoaded(); theSearchEngines.checkForIncorrectCurrent(true); if(thePlugins.isInstalled('search')) plugin.shutdownOldVersion(); } plugin.onRemove = function() { theSearchEngines.sites = plugin.sites; theSearchEngines.current = -1; theWebUI.save(); theWebUI.switchLabel($$("-_-_-all-_-_-")); for( var teg in plugin.tegs ) $("#"+teg).remove(); plugin.tegs = {}; $("#TegList").remove(); this.removePageFromOptions("st_extsearch"); $("#exscat").remove(); } })();(function () { var plugin = new rPlugin( 'chunks',3.6,'Zoltan Csala,Novik','This plugin shows the download status of torrent chunks.',256,'http://code.google.com/p/rutorrent/wiki/PluginChunks' ); plugin.loadLang(); plugin.loadMainCSS(); plugin.updateDetails = theWebUI.updateDetails; theWebUI.updateDetails = function() { plugin.updateDetails.call(this); if((this.activeView == 'Chunks') && plugin.enabled && plugin.allStuffLoaded) { if (this.dID != "") { plugin.hash = this.dID; this.request( "?action=getchunks", [plugin.drawChunks, plugin]); } else plugin.clearChunks(); } } plugin.clearDetails = theWebUI.clearDetails; theWebUI.clearDetails = function() { plugin.clearDetails.call(theWebUI); if(plugin.enabled && plugin.allStuffLoaded) plugin.clearChunks(); } plugin.drawChunks = function( d ) { if( $('#cCont').get(0).clientWidth && ($type(d.chunks) || $type(d.seen)) ) { var mode = iv($('#chunks_mode').val()); var cells = mode ? d.seen : d.chunks; var cellsCount = mode ? d.seen.length / 2 : d.chunks.length; var numCols = Math.floor( $('#cCont').get(0).clientWidth / 22 ); var numRows = Math.ceil( cellsCount / numCols ); var table = $('#cTable').get(0); var mustInsert = (cellsCount!=plugin.cellsCount) || (numRows!=table.rows.length) || (numCols!=plugin.numCols); if(mustInsert) plugin.clearChunks(); $('#ccount').text(d.tsize); $('#csize').text(( d.size / 1024 ) + " " + theUILang.KB); $('#cinfohdr').text( (mode ? theUILang.cAvail : theUILang.cDownloaded)+':' ); if(!mode) $('#cinfo').text( theWebUI.torrents[plugin.hash].done/10+'%' ); $('#clegend').text( theUILang.cLegendVal[mode] ); var k = mode; var sumAvail = 0; var sumBitAvail = 0; for(var i=0; i < numRows; i++) { var tRow = mustInsert ? table.insertRow(-1) : table.rows[i]; for(var j=0; j < numCols && (k<cells.length); j++, k++) { var tCell = mustInsert ? tRow.insertCell(-1) : tRow.cells[j]; var chunk = cells.charAt( k ); if( chunk != '0') tCell.innerHTML = chunk; else tCell.innerHTML = "&nbsp;"; tCell.className = "cCell Cell" + chunk; if(mode) { var val = parseInt(chunk,16); sumAvail+=val; if(val) sumBitAvail++; k++; } } } if(mode) $('#cinfo').text( theConverter.round((sumBitAvail==d.tsize) ? sumAvail/d.tsize : sumBitAvail/d.tsize,2) ); plugin.cellsCount = cellsCount; plugin.numCols = numCols; } else plugin.clearChunks(); d = null; } plugin.clearChunks = function() { $('#cTable').empty(); $('#ccount').text(''); $('#csize').text(''); $('#cinfohdr').text( '' ); $('#cinfo').text( '' ); $('#clegend').text( '' ); } rTorrentStub.prototype.getchunks = function() { var commands = ["d.get_bitfield", "d.get_chunk_size", "d.get_size_chunks"]; if(theWebUI.systemInfo.rTorrent.apiVersion>=4) commands.push("d.chunks_seen"); for(var i in commands) { var cmd = new rXMLRPCCommand( commands[i] ); cmd.addParameter("string",plugin.hash); this.commands.push( cmd ); } } rTorrentStub.prototype.getchunksResponse = function(xml) { if(plugin.hash!=theWebUI.dID) return({}); var datas = xml.getElementsByTagName('data'); var data = datas[0]; var values = data.getElementsByTagName('value'); var ret = { chunks: this.getValue(values,1), size: this.getValue(values,3), tsize: this.getValue(values,5) } if(theWebUI.systemInfo.rTorrent.apiVersion>=4) ret.seen = this.getValue(values,7); return(ret); } plugin.resizeBottom = theWebUI.resizeBottom; theWebUI.resizeBottom = function( w, h ) { if(plugin.enabled) { if(theWebUI.configured) { if(h) $('#cCont').height(h-50); } else setTimeout( 'theWebUI.resize()', 1000 ); } plugin.resizeBottom.call(this,w,h); } plugin.onLangLoaded = function() { plugin.attachPageToTabs( $("<div>").attr("id","Chunks").append( $("<div>").attr("id","cHeader").html( "<table width='100%'><tr>"+ "<td class='sthdr'>"+theUILang.chunksCount+":</td>"+ "<td class='stval' id='ccount'>&nbsp;</td>"+ "<td class='sthdr'>"+theUILang.chunkSize+":</td>"+ "<td class='stval' id='csize'>&nbsp;</td>"+ "<td class='sthdr' id='cinfohdr'>"+theUILang.cDownloaded+":</td>"+ "<td class='stval' id='cinfo'>&nbsp;</td>"+ "<td class='sthdr'>"+theUILang.cLegend+":</td>"+ "<td class='stval' id='clegend'>&nbsp;</td>"+ "<td align='right' id='cmode_cont' class='sthdr'>"+ theUILang.cMode+":&nbsp;"+ "<select name='chunks_mode' id='chunks_mode' onchange='theWebUI.updateDetails()'>"+ "<option value='0' selected>"+theUILang.cDownloaded+"</option>"+ "<option value='1'>"+theUILang.cAvail+"</option>"+ "</select>"+ "</td></tr></table>").append( $("<div>").attr("id","cCont").append( $("<table>").attr("id","cTable")))).get(0), theUILang.Chunks,"lcont"); if(theWebUI.systemInfo.rTorrent.apiVersion<4) $('#cmode_cont').empty(); } plugin.onRemove = function() { plugin.removePageFromTabs("Chunks"); } })();(function () { var plugin = new rPlugin( 'history',3.6,'Novik','This plugin is designed to log a history of torrents.',256,'http://code.google.com/p/rutorrent/wiki/PluginHistory' ); theWebUI.history = {"addition":1,"finish":1,"deletion":1,"limit":300,"autoclose":1,"closeinterval":5};plugin.loadLang(); plugin.mark = 0; plugin.hstTimeout = null; plugin.actionNames = ['', '', '', '']; plugin.showNotification = function(item) { if(plugin.allStuffLoaded) { var notification = notify.createNotification( plugin.actionNames[item.action], { body: item.name, icon: { x16: 'images/favicon.ico', x32: 'images/favicon-32x32.png' } } ); setTimeout(function () { notification.close(); }, theWebUI.history.closeinterval*1000); } } plugin.isNotificationsSupported = function() { return( (plugin.allStuffLoaded && !notify.isSupported) ? false : notify.permissionLevel() ); } plugin.rebuildNotificationsPage = function() { if(plugin.allStuffLoaded) { var state = plugin.isNotificationsSupported(); $('#notifTip').text(theUILang.notifTip[state ]); switch(state) { case notify.PERMISSION_DENIED: case false: { $('#notifPerms, #notifParam').hide(); break; } case notify.PERMISSION_GRANTED: { $('#notifPerms').hide(); break; } } } } if(plugin.canChangeOptions()) { plugin.addAndShowSettings = theWebUI.addAndShowSettings; theWebUI.addAndShowSettings = function( arg ) { if(plugin.enabled) { $$('history_addition').checked = ( theWebUI.history.addition != 0 ); $$('history_finish').checked = ( theWebUI.history.finish != 0 ); $$('history_deletion').checked = ( theWebUI.history.deletion != 0 ); $$('not_autoclose').checked = ( theWebUI.history.autoclose != 0 ); $('#not_closeinterval').val( theWebUI.history.closeinterval ); $('#history_limit').val( theWebUI.history.limit ); plugin.rebuildNotificationsPage(); } plugin.addAndShowSettings.call(theWebUI,arg); } theWebUI.historyWasChanged = function() { return( ($$('history_addition').checked != ( theWebUI.history.addition != 0 )) || ($$('history_finish').checked != ( theWebUI.history.finish != 0 )) || ($$('history_deletion').checked != ( theWebUI.history.deletion != 0 )) || ($$('not_autoclose').checked != ( theWebUI.history.autoclose != 0 )) || ($('#not_closeinterval').val() != theWebUI.history.closeinterval) || ($('#history_limit').val() != theWebUI.history.limit)); } plugin.setSettings = theWebUI.setSettings; theWebUI.setSettings = function() { plugin.setSettings.call(this); if( plugin.enabled && this.historyWasChanged() ) this.request( "?action=sethistory" ); } rTorrentStub.prototype.sethistory = function() { this.content = "cmd=set&addition=" + ( $$('history_addition').checked ? '1' : '0' ) + "&deletion=" + ( $$('history_deletion').checked ? '1' : '0' ) + "&finish=" + ( $$('history_finish').checked ? '1' : '0' ) + "&closeinterval=" + $('#not_closeinterval').val() + "&autoclose=" + ( $$('not_autoclose').checked ? '1' : '0' ) + "&limit=" + $('#history_limit').val(); this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/history/action.php"; this.dataType = "script"; } } if(plugin.canChangeTabs()) { plugin.config = theWebUI.config; theWebUI.config = function(data) { plugin.attachPageToTabs($('<div>').attr("id","history").addClass("table_tab stable").get(0),"History","lcont"); theWebUI.tables["hst"] = { obj: new dxSTable(), container: "history", columns: [ { text: theUILang.Name, width: "200px", id: "name", type: TYPE_STRING }, { text: theUILang.Status, width: "100px", id: "status", type: TYPE_STRING }, { text: 'Time', width: "100px", id: "time", type: TYPE_NUMBER }, { text: theUILang.Size, width: "60px", id: "size", type: TYPE_NUMBER }, { text: theUILang.Downloaded, width: "100px", id: "downloaded", type: TYPE_NUMBER }, { text: theUILang.Uploaded, width: "100px", id: "uploaded", type: TYPE_NUMBER }, { text: theUILang.Ratio, width: "60px", id: "ratio", type: TYPE_NUMBER }, { text: theUILang.Label, width: "60px", id: "label", type: TYPE_STRING }, { text: theUILang.Created_on, width: "100px", id: "created", type: TYPE_NUMBER }, { text: 'SeedingTime', width: '100px', id: 'seedingtime', type: TYPE_NUMBER }, { text: 'AddTime', width: '100px', id: 'addtime', type: TYPE_NUMBER }, { text: 'Tracker', width: '100px', id: 'tracker', type: TYPE_STRING } ], format: function(table,arr) { for(var i in arr) { if(arr[i]==null) arr[i] = ''; else switch(table.getIdByCol(i)) { case "seedingtime" : case "time": case "addtime": case 'created' : arr[i] = arr[i] ? theConverter.date(iv(arr[i])+theWebUI.deltaTime/1000) : ''; break; case 'downloaded' : case 'uploaded' : case 'size' : arr[i] = theConverter.bytes(arr[i]); break; case 'ratio' : arr[i] = (arr[i] ==- 1) ? "\u221e" : theConverter.round(arr[i] / 1000, 3); break; case 'status' : arr[i] = plugin.actionNames[arr[i]]; break; } } return(arr); }, ondelete: function() { this.historyRemove(); }, onselect: function(e,id) { this.historySelect(e,id) } }; plugin.config.call(theWebUI,data); plugin.renameHistoryStuff(); } plugin.renameHistoryStuff = function() { if(plugin.allStuffLoaded) { plugin.renameTab("history",theUILang.history); theWebUI.getTable("hst").renameColumnById("seedingtime",theUILang.seedingTime); theWebUI.getTable("hst").renameColumnById("addtime",theUILang.addTime); theWebUI.getTable("hst").renameColumnById("time",theUILang.Time); theWebUI.getTable("hst").renameColumnById("tracker",theUILang.Tracker); plugin.historyRefresh(); } else setTimeout(arguments.callee,1000); } plugin.historyRefresh = function() { theWebUI.requestWithoutTimeout("?action=gethistory",[plugin.onGetHistory, plugin]); } rTorrentStub.prototype.gethistory = function() { this.content = "cmd=get&mark=" + plugin.mark; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/history/action.php"; this.dataType = "json"; } dxSTable.prototype.historyRemove = function() { if(theWebUI.settings["webui.confirm_when_deleting"]) askYesNo( theUILang.hstDelete, theUILang.hstDeletePrompt, "theWebUI.getTable('"+this.prefix+"').cmdHistory('delete')" ); else this.cmdHistory('delete'); } dxSTable.prototype.cmdHistory = function(cmd) { var req = ''; for( var k in this.rowSel ) { if( this.rowSel[k] ) req+=("&hash=" + k); } if(req.length) { theWebUI.request("?action=hst"+cmd+req,[plugin.onGetHistory, plugin]); } } rTorrentStub.prototype.hstdelete = function() { this.content = "cmd=delete"; for(var i=0; i<this.hashes.length; i++) this.content += ('&hash='+this.hashes[i]); this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/history/action.php"; this.dataType = "json"; } if(!$type(theWebUI.getTrackerName)) { theWebUI.getTrackerName = function(announce) { var domain = ''; if(announce) { var parts = announce.match(/^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*):?([^:@]*))?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/); if(parts && (parts.length>6)) { domain = parts[6]; if(!domain.match(/^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/)) { parts = domain.split("."); if(parts.length>2) { if($.inArray(parts[parts.length-2]+"", ["co", "com", "net", "org"])>=0 || $.inArray(parts[parts.length-1]+"", ["uk"])>=0) parts = parts.slice(parts.length-3); else parts = parts.slice(parts.length-2); domain = parts.join("."); } } } } return(domain); } } plugin.onGetHistory = function(d) { var updated = false; var table = theWebUI.getTable("hst"); if($type(d)) { if(d.mode) table.clearRows(); for( var id in d.items ) { var item = d.items[id]; table.addRowById( { time: item.action_time, downloaded: item.downloaded, uploaded: item.uploaded, ratio: item.ratio, label: item.label, created: item.creation, seedingtime: item.finished, addtime: item.added, name: item.name, status: item.action, size: item.size, tracker: theWebUI.getTrackerName(item.tracker) }, item.hash, (item.action==1) ? "Status_Down" : (item.action==2) ? "Status_Completed" : "Status_Error" ); updated = true; if( item.action_time > plugin.mark ) plugin.mark = item.action_time; if(!d.mode && plugin.allStuffLoaded && (plugin.isNotificationsSupported()===notify.PERMISSION_GRANTED)) { plugin.showNotification(item); } } } if(updated) { table.refreshRows(); if(table.sIndex !=- 1) table.Sort(); } if((theWebUI.activeView=='history') || (plugin.allStuffLoaded && (plugin.isNotificationsSupported()===notify.PERMISSION_GRANTED))) plugin.hstTimeout = window.setTimeout(plugin.historyRefresh,theWebUI.settings["webui.update_interval"]); else if(plugin.hstTimeout) { window.clearTimeout(plugin.hstTimeout); plugin.hstTimeout = null; } } plugin.onShow = theTabs.onShow; theTabs.onShow = function(id) { if(id=="history") { var table = theWebUI.getTable("hst"); if(table) { table.refreshRows(); if(!plugin.hstTimeout) plugin.historyRefresh(); } } else plugin.onShow.call(this,id); } plugin.resizeBottom = theWebUI.resizeBottom; theWebUI.resizeBottom = function( w, h ) { plugin.resizeBottom.call(theWebUI,w,h); if(w!==null) w-=8; if(h!==null) { h-=($("#tabbar").height()); h-=2; } if(theWebUI.configured) { var table = this.getTable("hst"); if(table) table.resize(w,h); } } if(plugin.canChangeMenu()) { dxSTable.prototype.historySelect = function(e,id) { if(plugin.enabled && plugin.allStuffLoaded && (e.which==3)) { var self = "theWebUI.getTable('"+this.prefix+"')."; theContextMenu.clear(); theContextMenu.add([theUILang.Remove, self+"cmdHistory('delete')"]); theContextMenu.show(e.clientX,e.clientY); } } } } plugin.onLangLoaded = function() { injectScript(plugin.path+"/desktop-notify.js",function() { plugin.attachPageToOptions( $("<div>").attr("id","st_history").html( "<div class='checkbox'>" + "<label for='history_limit'>"+ theUILang.historyLimit +"</label>"+ "<input type='text' maxlength=4 id='history_limit' class='TextboxShort'/>"+ "</div>" + "<fieldset>"+ "<legend>"+theUILang.historyLog+"</legend>"+ "<div class='checkbox'>" + "<input type='checkbox' id='history_addition'/>"+ "<label for='history_addition'>"+ theUILang.historyAddition +"</label>"+ "</div>" + "<div class='checkbox'>" + "<input type='checkbox' id='history_deletion'/>"+ "<label for='history_deletion'>"+ theUILang.historyDeletion +"</label>"+ "</div>" + "<div class='checkbox'>" + "<input type='checkbox' id='history_finish'/>"+ "<label for='history_finish'>"+ theUILang.historyFinish +"</label>"+ "</div>" + "</fieldset>"+ "<fieldset>"+ "<legend>"+theUILang.historyNotification+"</legend>"+ "<div id='notifTip'>" + "</div>" + "<input type='button' value='"+theUILang.enableNotifications+"' id='notifPerms'/>"+ "<div id='notifParam'>" + "<input type='checkbox' id='not_autoclose' onchange=\"linked(this, 0, ['not_closeinterval']);\" />"+ "<label for='not_autoclose'>"+ theUILang.notifAutoClose +" </label>" + "<input type='text' id='not_closeinterval' class='TextboxShort' maxlength='3'/>" + theUILang.s + "</div>" + "</fieldset>" )[0], theUILang.history ); $('#notifPerms').click( function() { notify.requestPermission(function() { plugin.rebuildNotificationsPage(); plugin.historyRefresh(); }); }); plugin.actionNames = ['', theUILang.Added, theUILang.Finished, theUILang.Deleted]; plugin.markLoaded(); }); } plugin.onRemove = function() { plugin.removePageFromOptions("st_history"); } plugin.langLoaded = function() { if(plugin.enabled) plugin.onLangLoaded(); } })();(function () { var plugin = new rPlugin( 'lbll-suite',0.8,'thezwallrus','The Ultimate Organizational Suite for ruTorrent',256,'' ); // // ruTorrent Torrent-Addition Auto-Labels // Version 0.8 // by thezwallrus // // // jquery replace // $("#tadd_label").wrap('<div id="taddl_cont" />').remove(); $("#taddl_cont").append('<select id="tadd_label" name="tadd_label" style="width:120px;margin-left:4px;"></select>'+ '<input type="text" id="newLabel" value="'+ theUILang.New_label +'" title="'+ theUILang.New_label +'" style="width:90px;"/>'+ '<input type="button" id="add_newLabel" value="+" class="Button" style="width:25px;" />'); $("#tadd_label").append($('<OPTION></OPTION>') .val('') .text('')); $('#addtorrent label').css({'margin-top':'4px'}); $('#addtorrent label:eq(4)').css({'margin-top':'10px'}); $('#addtorrenturl label').css({'margin-top':'4px'}); // // jQuery listeners // var addLab = $('#add_newLabel'); addLab.click( function() { setTimeout( function() { $('#tadd_label') .append($('<OPTION></OPTION>') .val( $('#newLabel').val() ) .text( $('#newLabel').val() ) .attr('selected','selected') ); $('#newLabel').val( $('#newLabel').attr('title') ); }, 300) }); var newLab = $('#newLabel'); newLab.focus( function() { if(this.value == $(this).attr('title')) { this.value=''; } }); newLab.blur( function() { if(this.value == '') { this.value = $(this).attr('title'); } }); // // load labels into dropdown // theWebUI.initLabelDirs = function() { setTimeout( function() { jQuery.each(theWebUI.cLabels, function(lbl, nothing) { $('#tadd_label').append($('<OPTION></OPTION>').val(lbl).html(lbl)); }) }, 3000 ); plugin.markLoaded(); }; theWebUI.initLabelDirs(); // // ruTorrent Nested Categorical Label-Sorter "/" // Version 0.8 // by thezwallrus // plugin.loadLabels = theWebUI.loadLabels; theWebUI.loadLabels = function(d) { if (plugin.enabled) { var p = $("#lbll"); var subArray = []; var temp = new Array(); for(var lbl in d) { this.labels["-_-_-" + lbl + "-_-_-"] = d[lbl]; this.cLabels[lbl] = 1; temp["-_-_-" + lbl + "-_-_-"] = true; if(!$$("-_-_-" + lbl + "-_-_-")) { var splitlbl = lbl.split("/"); if (splitlbl.length>1) { var family = splitlbl.shift(); var catlbl = splitlbl.join("/"); var moveOver = "&nbsp;&nbsp;-"; if ( $.inArray(family, subArray) < 0 ) { subArray.push(family); } } else { catlbl = lbl; moveOver = ""; } p.append( $("<LI>"). attr("id","-_-_-" + lbl + "-_-_-"). html(moveOver + escapeHTML(catlbl) + "&nbsp;(<span id=\"-_-_-" + lbl + "-_-_-c\">" + d[lbl] + "</span>)"). mouseclick(theWebUI.labelContextMenu).addClass("cat") ); } } for (var dadlbl in subArray) { if(!$$("-_-_-" + subArray[dadlbl] + "-_-_-")) { $('#lbll').append( $('<LI>').html(subArray[dadlbl]).css("cursor","default") ); } else { $("#-_-_-" + subArray[dadlbl] + "-_-_-").remove().appendTo( $('#lbll') ).mouseclick(theWebUI.labelContextMenu).addClass("cat"); } $("li[id^='-_-_-" + subArray[dadlbl] + "']").not( $("#-_-_-" + subArray[dadlbl] + "-_-_-") ).remove().appendTo( $('#lbll') ).mouseclick(theWebUI.labelContextMenu).addClass("cat"); } var actDeleted = false; p.children().each(function(ndx,val) { var id = val.id; if(id && !$type(temp[id])) { $(val).remove(); delete theWebUI.labels[id]; delete theWebUI.cLabels[id.substr(5, id.length - 10)]; if(theWebUI.actLbl == id) actDeleted = true; } }); if(actDeleted) { this.actLbl = ""; this.switchLabel($$("-_-_-all-_-_-")); } } else { plugin.loadLabels.call(theWebUI,d); } } })();(function () { var plugin = new rPlugin( 'linkcakebox',1,'Magicalex','Cakebox plugin',128,'https://github.com/Cakebox/linkcakebox/issues' ); plugin.url = 'https://ns3431886.ip-87-98-219.eu:443/cb/';plugin.optionlink = 'window.open';plugin.dirpath = '/home/captaintib/rtorrent/';���plugin.loadLang(); if (theWebUI.theme && theWebUI.theme == 'Oblivion') plugin.loadCSS("linkcakeboxoblivion"); else plugin.loadCSS("linkcakebox"); if(plugin.canChangeMenu()) { theWebUI.urlTabcakebox = function(dID,fno) { function bugurl (url) { url = url.replace("'","%27"); return url; } var base_path = this.torrents[dID].base_path; if (this.files[dID][fno].name != this.torrents[dID].name) base_path = base_path + "/" + this.files[dID][fno].name; base_path = base_path.replace(plugin.dirpath, ""); var cakeboxUrl = "'" + plugin.url + "#/play/" + bugurl(encodeURIComponent(base_path)) + "'"; return cakeboxUrl; } plugin.createFileMenu = theWebUI.createFileMenu; theWebUI.createFileMenu = function( e, id ) { if(plugin.createFileMenu.call(this, e, id)) { if(plugin.enabled) { var fno = null; var table = this.getTable("fls"); if((table.selCount == 1) && (theWebUI.dID.length==40)) { var fid = table.getFirstSelected(); if(this.settings["webui.fls.view"]) { var arr = fid.split('_f_'); fno = arr[1]; } else { if(!this.dirs[this.dID].isDirectory(fid)) fno = fid.substr(3); } } theContextMenu.add( [theUILang.linkcakeboxmenu, (fno == null) ? null : plugin.optionlink + "(" + theWebUI.urlTabcakebox(theWebUI.dID, fno) + ")"] ); } return(true); } return(false); } } if(plugin.canChangeMenu()) { plugin.createMenu = theWebUI.createMenu; theWebUI.createMenu = function(e, id) { plugin.createMenu.call(this, e, id); if(plugin.enabled) { function bugurl (url) { url = url.replace("'","%27"); return url; } var cakeboxUrl = "'" + plugin.url + "#/play/" + bugurl(encodeURIComponent(theWebUI.torrents[id].name)) + "'"; theContextMenu.add( [theUILang.linkcakeboxmenu, (theWebUI.torrents[id].multi_file != 0 ) ? null : plugin.optionlink + "(" + cakeboxUrl + ")"] ); } } } plugin.onLangLoaded = function() { this.addButtonToToolbar("linkcakebox", theUILang.linkcakebox, plugin.optionlink+"('" + plugin.url + "')", "help"); this.addSeparatorToToolbar("help"); } plugin.onRemove = function() { this.removeSeparatorFromToolbar("linkcakebox"); this.removeButtonFromToolbar("linkcakebox"); } })();(function () { var plugin = new rPlugin( 'linkseedboxmanager',1,'Hydrog3n','Seedbox-manager plugin',128,'http://mondedie.fr' ); plugin.url = 'https://ns3431886.ip-87-98-219.eu:443/sm/';plugin.optionlink = 'window.open';���plugin.loadLang(); plugin.loadCSS("linkseedboxmanager"); plugin.onLangLoaded = function() { this.addButtonToToolbar("linkseedboxmanager", theUILang.linkseedboxmanager, plugin.optionlink+"('" + plugin.url + "')", "help"); this.addSeparatorToToolbar("help"); } plugin.onRemove = function() { this.removeSeparatorFromToolbar("linkseedboxmanager"); this.removeButtonFromToolbar("linkseedboxmanager"); } })();(function () { var plugin = new rPlugin( 'tracklabels',3.6,'Novik','This plugin adds tracker-based labels to the category panel.',256,'http://code.google.com/p/rutorrent/wiki/PluginTracklabels' ); plugin.loadMainCSS(); theWebUI.trackersLabels = {}; plugin.injectedStyles = {}; plugin.config = theWebUI.config; theWebUI.config = function(data) { if(plugin.canChangeColumns()) { theWebUI.tables.trt.columns.push({ text: theUILang.Tracker, width: '100px', id: 'tracker', type: TYPE_STRING}); plugin.config.call(this,data); plugin.reqId = theRequestManager.addRequest("trk", null, function(hash,tracker,value) { var domain = theWebUI.getTrackerName( tracker.name ); tracker.icon = "trk"+domain.replace(/\./g, "_"); if(!plugin.injectedStyles[tracker.icon]) { plugin.injectedStyles[tracker.icon] = true; injectCSSText( "."+tracker.icon+" {background-image: url(./plugins/tracklabels/action.php?tracker="+domain+"); background-repeat: no-repeat}\n" ); } }); } } plugin.filterByLabel = theWebUI.filterByLabel; theWebUI.filterByLabel = function(hash) { if(plugin.enabled && theWebUI.actLbl && $($$(theWebUI.actLbl)).hasClass('tracker')) theWebUI.filterByTracker(hash); else plugin.filterByLabel.call(theWebUI,hash); } theWebUI.filterByTracker = function(hash) { if(theWebUI.isTrackerInActualLabel(hash)) this.getTable("trt").unhideRow(hash); else this.getTable("trt").hideRow(hash); } plugin.isActualLabel = function(lbl) { return(theWebUI.actLbl && $($$(theWebUI.actLbl)).hasClass('tracker') && ('i'+lbl==theWebUI.actLbl)); } theWebUI.isTrackerInActualLabel = function(hash) { var ret = false; if($type(this.torrents[hash]) && $type(this.trackers) && $type(this.trackers[hash])) { for( var i=0; i<this.trackers[hash].length; i++) { if(this.trackers[hash][i].group==0) { var tracker = theWebUI.getTrackerName( this.trackers[hash][i].name ); if(tracker && plugin.isActualLabel(tracker)) { ret = true; break; } } } } return(ret); } plugin.addTrackers = theWebUI.addTrackers; theWebUI.addTrackers = function(data) { plugin.addTrackers.call(theWebUI,data); if(plugin.enabled) theWebUI.rebuildTrackersLabels(); } if(!$type(theWebUI.getTrackerName)) { theWebUI.getTrackerName = function(announce) { var domain = ''; if(announce) { var parts = announce.match(/^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*):?([^:@]*))?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/); if(parts && (parts.length>6)) { domain = parts[6]; if(!domain.match(/^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/)) { parts = domain.split("."); if(parts.length>2) { if($.inArray(parts[parts.length-2]+"", ["co", "com", "net", "org"])>=0 || $.inArray(parts[parts.length-1]+"", ["uk"])>=0) parts = parts.slice(parts.length-3); else parts = parts.slice(parts.length-2); domain = parts.join("."); } } } } return(domain); } } theWebUI.trackersLabelContextMenu = function(e) { if(e.which==3) { var table = theWebUI.getTable("trt"); table.clearSelection(); theWebUI.switchLabel(this); table.fillSelection(); var id = table.getFirstSelected(); if(id && plugin.canChangeMenu()) { theWebUI.createMenu(null, id); theContextMenu.show(); } else theContextMenu.hide(); } else theWebUI.switchLabel(this); return(false); } plugin.updateLabalsImages = function() { $('#plabel_cont ul li').each( function() { var lbl = this.id.substr(5,this.id.length-10); if(!$$("lbl_"+lbl)) $(this).prepend( $("<img>").attr("id","lbl_"+lbl).attr("src","plugins/tracklabels/action.php?label="+lbl).addClass("tfavicon") ).css({ padding: "2px 4px" }); }); } plugin.updateLabels = theWebUI.updateLabels; theWebUI.updateLabels = function(wasRemoved) { plugin.updateLabels.call(theWebUI,wasRemoved); if(plugin.enabled) { if(wasRemoved) theWebUI.rebuildTrackersLabels(); plugin.updateLabalsImages(); } } theWebUI.rebuildTrackersLabels = function() { if(!plugin.allStuffLoaded) setTimeout('theWebUI.rebuildTrackersLabels()',1000); else { var table = this.getTable('trt'); var trackersLabels = new Object(); var counted = new Object(); for(var hash in this.trackers) { if($type(this.torrents[hash])) { this.torrents[hash].tracker = null; counted[hash] = new Array(); for( var i=0; i<this.trackers[hash].length; i++) { if(this.trackers[hash][i].group==0) { var tracker = theWebUI.getTrackerName( this.trackers[hash][i].name ); if(tracker) { if(!this.torrents[hash].tracker) { this.torrents[hash].tracker = tracker; if(plugin.canChangeColumns()) table.setValueById(hash, 'tracker', tracker); } if($.inArray(tracker, counted[hash]) == -1) { if($type(trackersLabels[tracker])) trackersLabels[tracker]++; else trackersLabels[tracker] = 1; counted[hash].push(tracker); } } } } } } if(plugin.canChangeColumns()) { table.refreshRows(); if(table.sIndex !=- 1) table.Sort(); } var ul = $("#torrl"); var keys = new Array(); for(var lbl in trackersLabels) keys.push(lbl); keys.sort(); for(var i=0; i<keys.length; i++) { var lbl = keys[i]; var li = null; if(lbl in this.trackersLabels) { li = $($$('i'+lbl)); li.children("span").text(trackersLabels[lbl]); } else { li = $('<li>').attr("id",'i'+lbl). html(escapeHTML(lbl)+'&nbsp;(<span id="-'+lbl+'_c">'+trackersLabels[lbl]+'</span>)'). mouseclick(theWebUI.trackersLabelContextMenu).addClass("cat tracker").attr("title",lbl+" ("+trackersLabels[lbl]+")"). prepend( $("<img>").attr("src","plugins/tracklabels/action.php?tracker="+lbl).addClass("tfavicon") ).css({ padding: "2px 4px" }); ul.append(li); } if(plugin.isActualLabel(lbl)) li.addClass("sel"); } var needSwitch = false; for(var lbl in this.trackersLabels) if(!(lbl in trackersLabels)) { $($$('i'+lbl)).remove(); if(plugin.isActualLabel(lbl)) needSwitch = true; } this.trackersLabels = trackersLabels; if(needSwitch) theWebUI.switchLabel($$("-_-_-all-_-_-")); } } theWebUI.initTrackersLabels = function() { plugin.addPaneToCategory("ptrackers",theUILang.Trackers). append($("<ul></ul>").attr("id","torrl")); plugin.markLoaded(); }; plugin.onRemove = function() { plugin.removePaneFromCategory('ptrackers'); theWebUI.switchLabel($$("-_-_-all-_-_-")); if(plugin.canChangeColumns()) { theWebUI.getTable("trt").removeColumnById("tracker"); if(thePlugins.isInstalled("rss")) theWebUI.getTable("rss").removeColumnById("tracker"); theRequestManager.removeRequest('trk',plugin.reqId); } } theWebUI.initTrackersLabels(); })();(function () { var plugin = new rPlugin( 'trafic',3.6,'Novik','This plugin allows to monitor rTorrent system wide and per-tracker traffic totals.',256,'http://code.google.com/p/rutorrent/wiki/PluginTrafic' ); plugin.collectStatForTorrents = true;plugin.updateInterval = 15;plugin.disableClearButton = false;if(browser.isKonqueror && (browser.versionMajor<4)) plugin.disable(); theWebUI.ratiosStat = {}; if(plugin.canChangeTabs()) { function rTraficGraph() { } rTraficGraph.prototype.create = function( aOwner ) { this.owner = aOwner; this.owner.parent().css('overflow', 'hidden'); this.down = { label: theUILang.DL, bars: {"show": "true"}, data: [], color: "#1C8DFF" }; this.up = { label: theUILang.UL, bars: {"show": "true"}, data: [], color: "#009900" }; this.oldDown = { label: theUILang.DL, bars: {"show": "true"}, data: [], color: "#0849BB" }; this.oldUp = { label: theUILang.UL, bars: {"show": "true"}, data: [], color: "#005500" }; this.ticks = new Array(); this.previousPoint = null; var rule = getCSSRule("div.graph_tab"); this.gridColor = rule ? rule.style.color : "#545454"; this.backgroundColor = rule ? rule.style.borderColor : null; this.checked = [ true, true, true, true ]; this.datasets = [ this.down, this.up, this.oldDown, this.oldUp ]; } rTraficGraph.prototype.getDataSets = function() { var ret = new Array(); for( var i in this.checked ) { if(this.checked[i]) ret.push(this.datasets[i]); else { var arr = cloneObject( this.datasets[i] ); arr.data = []; ret.push(arr); } } return(ret); } rTraficGraph.prototype.draw = function() { var self = this; $(function() { if(self.owner.height() && self.owner.width()) { clearCanvas( self.owner[0] ); self.owner.empty(); $.plot(self.owner, self.getDataSets(), { colors: [ self.down.color, self.up.color, self.oldDown.color, self.oldUp.color ], xaxis: { ticks: self.ticks }, grid: { backgroundColor: self.backgroundColor, color: self.gridColor, hoverable: true }, yaxis: { min: 0, tickFormatter: function(n) { return(theConverter.bytes(n)) } } }); function showTooltip(x, y, contents) { $('<div id="tooltip">' + contents + '</div>').css( { position: 'absolute', display: 'none', top: y + 5, left: x + 5, border: '1px solid #fdd', padding: '2px', 'background-color': '#fee', 'color': 'black', 'font-size': '11px', 'font-weight': 'bold', 'font-family': 'Tahoma, Arial, Helvetica, sans-serif', opacity: 0.80 }).appendTo("body").fadeIn(200); } self.owner.off("plothover"); self.owner.on("plothover", function (event, pos, item) { if(item) { if(self.previousPoint != item.datapoint) { self.previousPoint = item.datapoint; $("#tooltip").remove(); var y = item.datapoint[1]; showTooltip(item.pageX, item.pageY, item.series.label + " = " + theConverter.bytes(y)); } } else { $("#tooltip").remove(); self.previousPoint = null; } } ); $('#'+self.owner.attr('id')+' .legendColorBox').before("<td class='legendCheckBox'><input type='checkbox'></td>"); $.each($('#'+self.owner.attr('id')+' .legendCheckBox input'),function(ndx,element) { $(element).click( function() { self.checked[ndx] = !self.checked[ndx]; self.draw(); }).prop("checked",self.checked[ndx]); }); } }); } rTraficGraph.prototype.resize = function( newWidth, newHeight ) { if(newWidth) this.owner.width(newWidth-8); if(newHeight) { newHeight-=(iv($$(this.owner.attr("id")+'_ctrl').style.height)+$("#tabbar").height()); if(newHeight>0) this.owner.height(newHeight); } this.draw(); } rTraficGraph.prototype.setData = function( arr ) { this.down.data = new Array(); this.up.data = new Array(); this.oldDown.data = new Array(); this.oldUp.data = new Array(); this.ticks = new Array(); for(var i=0; i<arr.up.length; i++) { if(arr.labels[i]!=0) { // var dt = new Date(arr.labels[i]*1000-theWebUI.serverDeltaTime); var dt = new Date(arr.labels[i]*1000); var month = dt.getMonth()+1; month = (month < 10) ? ("0" + month) : month; var day = dt.getDate(); day = (day < 10) ? ("0" + day) : day; var h = dt.getHours(); h = (h < 10) ? ("0" + h) : h; var now = new Date(); now.setTime(now.getTime()-theWebUI.deltaTime); var actualData = true; switch(arr.mode) { case 'day': this.ticks.push([i,h+":00"]); actualData = (now.getDate()==dt.getDate()); break; case 'month': this.ticks.push([i+0.5,day+"."+month]); actualData = (now.getMonth()==dt.getMonth()); break; case 'year': this.ticks.push([i+0.5,month+"."+dt.getFullYear()]); actualData = (now.getFullYear()==dt.getFullYear()); break; } if(actualData) { this.down.data.push([i,arr.down[i]]); this.up.data.push([i,arr.up[i]]); this.oldDown.data.push([i,null]); this.oldUp.data.push([i,null]); } else { this.oldDown.data.push([i,arr.down[i]]); this.oldUp.data.push([i,arr.up[i]]); this.down.data.push([i,null]); this.up.data.push([i,null]); } } else { this.down.data.push([i,null]); this.up.data.push([i,null]); this.oldDown.data.push([i,null]); this.oldUp.data.push([i,null]); this.ticks.push([i+0.5,""]); } } this.draw(); } theWebUI.clearStats = function() { if(theWebUI.settings["webui.confirm_when_deleting"]) askYesNo( theUILang.ClearButton, theUILang.ClearQuest, "theWebUI.reqForTraficGraph(true)" ); else theWebUI.reqForTraficGraph(true); } theWebUI.reqForTraficGraph = function(isClear) { var sel = $('#traf_mode'); if(sel.length) { var v = isClear ? "clear" : sel.val(); this.request("?action=gettrafic&v="+v+"&s="+$('#tracker_mode').val(),[this.showTrafic, this]); } } plugin.resizeBottom = theWebUI.resizeBottom; theWebUI.resizeBottom = function( w, h ) { if(plugin.enabled) { if(plugin.allStuffLoaded) this.trafGraph.resize(w,h); else setTimeout( 'theWebUI.resize()', 1000 ); } plugin.resizeBottom.call(this,w,h); } theWebUI.showTrafic = function(d) { var s = $('#tracker_mode').val(); $('#tracker_mode option').remove(); var tMode = plugin.collectStatForTorrents ? "<option value='none'>"+theUILang.selectedTorrent+"</option>" : ""; $('#tracker_mode').append(tMode+"<option value='global' selected>"+theUILang.allTrackers+"</option>"); for(var i=0; i<d.trackers.length; i++) $('#tracker_mode').append("<option value='"+d.trackers[i]+"'>"+d.trackers[i]+"</option>"); $('#tracker_mode').val(s); if(s!=$('#tracker_mode').val()) $('#tracker_mode').val('global'); $('#traf_mode').val(d.mode); this.trafGraph.setData(d); } rTorrentStub.prototype.gettrafic = function() { this.content = "mode="+this.vs[0]+"&tracker="+this.ss[0]+"&hash="+theWebUI.dID; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/trafic/getdata.php"; this.dataType = "json"; } if(plugin.collectStatForTorrents) { plugin.showDetails = theWebUI.showDetails; theWebUI.showDetails = function(hash, noSwitch) { plugin.showDetails.call(this,hash,noSwitch); if( (this.activeView == 'traf') && ($('#tracker_mode').val()=='none')) theWebUI.reqForTraficGraph(); } } } if(plugin.canChangeColumns() && plugin.collectStatForTorrents) { plugin.config = theWebUI.config; theWebUI.config = function(data) { this.tables.trt.columns.push({ text: 'Ratio/day', width: '75x', id: "ratioday", type: TYPE_NUMBER}); this.tables.trt.columns.push({ text: 'Ratio/week', width: '75px', id: "ratioweek", type: TYPE_NUMBER}); this.tables.trt.columns.push({ text: 'Ratio/month', width: '75px', id: "ratiomonth", type: TYPE_NUMBER}); plugin.trtFormat = this.tables.trt.format; this.tables.trt.format = function(table,arr) { for(var i in arr) { var s = table.getIdByCol(i); if((s=="ratioday") || (s=="ratiomonth") || (s=="ratioweek")) arr[i] = (arr[i]!=null) ? theConverter.round(arr[i], 3) : ""; } return(plugin.trtFormat(table,arr)); } plugin.config.call(this,data); plugin.reqId = theRequestManager.addRequest("trt", null, function(hash,torrent,value) { if($type(theWebUI.ratiosStat[hash]) && torrent.size) { torrent.ratioday = theWebUI.ratiosStat[hash][0]/torrent.size; torrent.ratioweek = theWebUI.ratiosStat[hash][1]/torrent.size; torrent.ratiomonth = theWebUI.ratiosStat[hash][2]/torrent.size; } }); plugin.trtRenameColumn(); } plugin.trtRenameColumn = function() { if(plugin.allStuffLoaded) { theWebUI.getTable("trt").renameColumnById("ratioday",theUILang.ratioDay); theWebUI.getTable("trt").renameColumnById("ratioweek",theUILang.ratioWeek); theWebUI.getTable("trt").renameColumnById("ratiomonth",theUILang.ratioMonth); if(thePlugins.isInstalled("rss")) plugin.rssRenameColumn(); if(thePlugins.isInstalled("extsearch")) plugin.tegRenameColumn(); } else setTimeout(arguments.callee,1000); } plugin.rssRenameColumn = function() { if(theWebUI.getTable("rss").created) { theWebUI.getTable("rss").renameColumnById("ratioday",theUILang.ratioDay); theWebUI.getTable("rss").renameColumnById("ratioweek",theUILang.ratioWeek); theWebUI.getTable("rss").renameColumnById("ratiomonth",theUILang.ratioMonth); } else setTimeout(arguments.callee,1000); } plugin.tegRenameColumn = function() { if(theWebUI.getTable("teg").created) { theWebUI.getTable("teg").renameColumnById("ratioday",theUILang.ratioDay); theWebUI.getTable("teg").renameColumnById("ratioweek",theUILang.ratioWeek); theWebUI.getTable("teg").renameColumnById("ratiomonth",theUILang.ratioMonth); } else setTimeout(arguments.callee,1000); } plugin.startRatios = function() { theWebUI.request("?action=getratios",[plugin.updateRatios, this]); } plugin.updateRatios = function( d ) { window.setTimeout( plugin.startRatios, plugin.updateInterval*60000 ); } rTorrentStub.prototype.getratios = function() { this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/trafic/action.php"; this.dataType = "script"; } plugin.startRatios(); } plugin.onLangLoaded = function() { if(this.canChangeTabs()) { this.attachPageToTabs( $('<div>').attr("id","traf").html( "<div id='traf_graph_ctrl' class='graph_tab' align=right style='height:30px;'>"+ (plugin.disableClearButton ? "" : "<input type='button' value='"+theUILang.ClearButton+"' class='Button' onclick='theWebUI.clearStats();return(false);'>")+ "<select name='tracker_mode' id='tracker_mode' onchange='theWebUI.reqForTraficGraph()'>"+ "<option value='global' selected>"+theUILang.allTrackers+"</option>"+ "</select>"+ "<select name='traf_mode' id='traf_mode' onchange='theWebUI.reqForTraficGraph()'>"+ "<option value='day'>"+theUILang.perDay+"</option>"+ "<option value='month'>"+theUILang.perMonth+"</option>"+ "<option value='year'>"+theUILang.perYear+"</option>"+ "</select>"+ "</div><div id='traf_graph' class='graph_tab'></div>").get(0),theUILang.traf,"lcont"); theWebUI.trafGraph = new rTraficGraph(); theWebUI.trafGraph.create($("#traf_graph")); plugin.onShow = theTabs.onShow; theTabs.onShow = function(id) { if(id=="traf") { if(theWebUI.activeView!="traf") theWebUI.reqForTraficGraph(); else theWebUI.trafGraph.resize(); } else plugin.onShow.call(this,id); }; theWebUI.resize(); } }; plugin.onRemove = function() { this.removePageFromTabs("traf"); if(plugin.canChangeColumns() && plugin.collectStatForTorrents) { theRequestManager.removeRequest( "trt", plugin.reqId ); theWebUI.getTable("trt").removeColumnById("ratioday"); theWebUI.getTable("trt").removeColumnById("ratioweek"); theWebUI.getTable("trt").removeColumnById("ratiomonth"); if(thePlugins.isInstalled("rss")) { theWebUI.getTable("rss").removeColumnById("ratioday"); theWebUI.getTable("rss").removeColumnById("ratioweek"); theWebUI.getTable("rss").removeColumnById("ratiomonth"); } } } plugin.loadLang(true); })();(function () { var plugin = new rPlugin( 'unpack',3.6,'Novik','This plugin is designed to manually or automatically unrar/unzip torrent data.',256,'http://code.google.com/p/rutorrent/wiki/PluginUnpack' ); plugin.useUnzip = true;plugin.useUnrar = true;theWebUI.unpackData = { enabled: 0, path : '', filter : '/.*/', addLabel: 0, addName: 0 }; plugin.loadLang(); plugin.loadMainCSS(); if(plugin.canChangeMenu()) { plugin.createFileMenu = theWebUI.createFileMenu; theWebUI.createFileMenu = function( e, id ) { if(plugin.createFileMenu.call(this, e, id)) { if(plugin.enabled) { plugin.fno = null; plugin.mode = null; var table = this.getTable("fls"); if((table.selCount == 1) && this.dID && (this.dID.length==40)) { var fid = table.getFirstSelected(); if(this.settings["webui.fls.view"]) { var arr = fid.split('_f_'); plugin.fno = arr[1]; } else if(!this.dirs[this.dID].isDirectory(fid)) plugin.fno = fid.substr(3); if(plugin.fno!=null) { if(this.files[this.dID][plugin.fno].percent!=100) plugin.fno=null; else if(plugin.useUnrar && (/.*\.(rar|r\d\d|\d\d\d)$/i).test(this.files[this.dID][plugin.fno].name)) plugin.mode = 'rar'; else if(plugin.useUnzip && (/.*\.zip$/i).test(this.files[this.dID][plugin.fno].name)) plugin.mode = 'zip'; else plugin.fno=null; } } if(!thePlugins.isInstalled("data")) theContextMenu.add([CMENU_SEP]); if(thePlugins.isInstalled("quotaspace") && theWebUI.quotaAlreadyWarn) plugin.fno=null; this.uID = (plugin.fno==null) ? null : this.dID; theContextMenu.add( [theUILang.unpack+'...', (plugin.fno==null) ? null : "theDialogManager.show('dlg_unpack')"] ); } return(true); } return(false); } plugin.createMenu = theWebUI.createMenu; theWebUI.createMenu = function( e, id ) { plugin.createMenu.call(this, e, id); if(plugin.enabled) { plugin.fno = null; plugin.mode = null; var rarPresent = false; var zipPresent = false; var checked = false; this.uID = ((this.getTable("trt").selCount == 1) && !(thePlugins.isInstalled("quotaspace") && theWebUI.quotaAlreadyWarn)) ? (id || this.dID) : null; if(this.uID && (this.torrents[this.uID].done==1000) && $type(this.files[this.uID])) { for(var i in this.files[this.uID]) { var file = this.files[this.uID][i]; if(plugin.useUnrar && (/.*\.(rar|r\d\d|\d\d\d)$/i).test(file.name)) rarPresent = true; else if(plugin.useUnzip && (/.*\.zip$/i).test(file.name)) zipPresent = true; checked = true; } } theContextMenu.add( [theUILang.unpack+'...', (this.uID && (this.uID.length==40) && (this.torrents[this.uID].done==1000) && (!checked || rarPresent || zipPresent)) ? "theDialogManager.show('dlg_unpack')" : null] ); } } } if(plugin.canChangeOptions()) { plugin.addAndShowSettings = theWebUI.addAndShowSettings; theWebUI.addAndShowSettings = function( arg ) { if(plugin.enabled && plugin.allStuffLoaded) { $('#unpack_enabled').prop('checked',(theWebUI.unpackData.enabled == 1)); $('#unpack_label').prop('checked',(theWebUI.unpackData.addLabel == 1)); $('#unpack_name').prop('checked',(theWebUI.unpackData.addName == 1)); $('#edit_unpack1').val( theWebUI.unpackData.path ); $('#edit_filter').val( theWebUI.unpackData.filter ); if(plugin.btn) plugin.btn.hide(); } plugin.addAndShowSettings.call(theWebUI,arg); } theWebUI.unpackWasChanged = function() { return( plugin.allStuffLoaded && (($('#unpack_enabled').prop('checked') != (theWebUI.unpackData.enabled == 1 )) || ($('#unpack_label').prop('checked') != ( theWebUI.unpackData.addLabel == 1 )) || ($('#unpack_name').prop('checked') != ( theWebUI.unpackData.addName == 1 )) || ($('#edit_unpack1').val() != theWebUI.unpackData.path) || ($('#edit_filter').val() != theWebUI.unpackData.filter)) ); } plugin.setSettings = theWebUI.setSettings; theWebUI.setSettings = function() { plugin.setSettings.call(this); if( plugin.enabled && this.unpackWasChanged() ) this.request( "?action=setunpack" ); } rTorrentStub.prototype.setunpack = function() { this.content = "cmd=set&unpack_enabled=" + ( $('#unpack_enabled').prop('checked') ? '1' : '0' ) + "&unpack_name=" + ( $('#unpack_name').prop('checked') ? '1' : '0' ) + "&unpack_label=" + ( $('#unpack_label').prop('checked') ? '1' : '0' ) + "&unpack_filter=" + encodeURIComponent($('#edit_filter').val()) + "&unpack_path=" + encodeURIComponent($('#edit_unpack1').val()); this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/unpack/action.php"; this.dataType = "script"; } } theWebUI.unpack = function() { theDialogManager.hide('dlg_unpack'); theWebUI.startConsoleTask( "unpack", plugin.name, { hash: theWebUI.uID, dir: $('#edit_unpack').val(), mode: plugin.mode || '', no: plugin.fno || '' }, { noclose: true }); } plugin.onLangLoaded = function() { var plg = thePlugins.get("_task"); if(!plg.allStuffLoaded) setTimeout(arguments.callee,1000); else { theDialogManager.make( 'dlg_unpack', theUILang.unpack, "<div class='cont fxcaret'>" + "<fieldset>" + "<div>" + theUILang.unpackPath + "</div>" + "<input type='text' id='edit_unpack' class='TextboxLarge' maxlength='200'/>" + "<input type='button' id='btn_unpack' class='Button' value='...' />" + "</fieldset>" + "</div>"+ "<div class='aright buttons-list'>" + "<input type='button' value='" + theUILang.ok + "' class='OK Button' " + " onclick='theWebUI.unpack(); return(false);' />" + "<input type='button' value='"+ theUILang.Cancel + "' class='Cancel Button'/>" + "</div>", true); plugin.attachPageToOptions( $("<div>").attr("id","st_unpack").html( "<div>"+ "<input id=\"unpack_enabled\" type=\"checkbox\"/>"+ "<label for=\"unpack_enabled\">"+ theUILang.unpackEnabled+ "</label>"+ "<input type='text' id='edit_filter' class='TextboxMid' maxlength='200'/>" + "</div>"+ "<fieldset>"+ "<legend>"+theUILang.unpackPath+"</legend>"+ "<input type='text' id='edit_unpack1' class='TextboxLarge' maxlength='200'/>" + "<input type='button' id='btn_unpack1' class='Button' value='...' />" + "</fieldset>"+ "<fieldset>"+ "<legend>"+theUILang.unpackTorrents+"</legend>"+ "<div class='checkbox'>" + "<input type='checkbox' id='unpack_label'/>"+ "<label for='unpack_label'>"+ theUILang.unpackAddLabel +"</label>"+ "</div>" + "<div class='checkbox'>" + "<input type='checkbox' id='unpack_name'/>"+ "<label for='unpack_name'>"+ theUILang.unpackAddName +"</label>"+ "</div>"+ "</fieldset>" )[0], theUILang.unpack ); $('#edit_unpack').val( theWebUI.unpackData.path ); if(thePlugins.isInstalled("_getdir")) { var btn = new theWebUI.rDirBrowser( 'dlg_unpack', 'edit_unpack', 'btn_unpack' ); theDialogManager.setHandler('dlg_unpack','afterHide',function() { btn.hide(); }); if(plugin.canChangeOptions()) plugin.btn = new theWebUI.rDirBrowser( 'st_unpack', 'edit_unpack1', 'btn_unpack1' ); } else { $('#btn_unpack').remove(); $('#btn_unpack1').remove(); } plugin.markLoaded(); } } plugin.onRemove = function() { theDialogManager.hide("dlg_unpack"); plugin.removePageFromOptions("st_unpack"); } plugin.langLoaded = function() { if(plugin.enabled) plugin.onLangLoaded(); } })();(function () { var plugin = new rPlugin( 'throttle',3.6,'Novik','This plugin gives a convenient control over speed limits for groups of torrents.',256,'http://code.google.com/p/rutorrent/wiki/PluginThrottle' ); theWebUI.throttles = [{ up: 16, down: 0, name : "up16" },{ up: 32, down: 0, name : "up32" },{ up: 64, down: 0, name : "up64" },{ up: 128, down: 0, name : "up128" },{ up: 256, down: 0, name : "up256" },{ up: 0, down: 16, name : "down16" },{ up: 0, down: 32, name : "down32" },{ up: 0, down: 64, name : "down64" },{ up: 0, down: 128, name : "down128" },{ up: 0, down: 256, name : "down256" }]; theWebUI.maxThrottle = 10; theWebUI.defaultThrottle = 0; plugin.loadLang(); plugin.loadMainCSS(); plugin.config = theWebUI.config; theWebUI.config = function(data) { if(plugin.canChangeColumns()) { this.tables.trt.columns.push({ text: 'Channel', width: '60px', id: "throttle", type: TYPE_STRING}); plugin.trtFormat = this.tables.trt.format; this.tables.trt.format = function(table,arr) { for(var i in arr) { if((table.getIdByCol(i)=="throttle") && arr[i]) { var thr = arr[i].match(/^thr_(\d{1,2})$/); arr[i] = ( thr && (thr.length>1) && theWebUI.isCorrectThrottle(thr[1]) ? theWebUI.throttles[thr[1]].name : "" ); break; } } return(plugin.trtFormat(table,arr)); }; } plugin.reqId = theRequestManager.addRequest("trt", "d.get_throttle_name=",function(hash,torrent,value) { torrent.throttle = value; }); plugin.config.call(this,data); if(plugin.canChangeColumns()) plugin.trtRenameColumn(); } if(plugin.canChangeColumns()) { plugin.trtRenameColumn = function() { if(plugin.allStuffLoaded) { theWebUI.getTable("trt").renameColumnById("throttle",theUILang.throttle); if(thePlugins.isInstalled("rss")) plugin.rssRenameColumn(); if(thePlugins.isInstalled("extsearch")) plugin.tegRenameColumn(); } else setTimeout(arguments.callee,1000); } plugin.rssRenameColumn = function() { if(theWebUI.getTable("rss").created) theWebUI.getTable("rss").renameColumnById("throttle",theUILang.throttle); else setTimeout(arguments.callee,1000); } plugin.tegRenameColumn = function() { if(theWebUI.getTable("teg").created) theWebUI.getTable("teg").renameColumnById("throttle",theUILang.throttle); else setTimeout(arguments.callee,1000); } } if(plugin.canChangeOptions()) { plugin.addAndShowSettings = theWebUI.addAndShowSettings; theWebUI.addAndShowSettings = function(arg) { if(plugin.enabled) { for(var i=0; i<theWebUI.maxThrottle; i++) { if(theWebUI.isCorrectThrottle(i)) { $('#thr_up'+i).val( theWebUI.throttles[i].up ); $('#thr_down'+i).val( theWebUI.throttles[i].down ); $('#thr_name'+i).val( theWebUI.throttles[i].name ); } else $('#thr_up'+i+',#thr_down'+i+',#thr_name'+i).val(''); } $('#chDefault').val(theWebUI.defaultThrottle); } plugin.addAndShowSettings.call(theWebUI,arg); } theWebUI.throttleWasChanged = function() { for(var i=0; i<theWebUI.maxThrottle; i++) { if( (theWebUI.throttles[i].up!=$('#thr_up'+i).val()) || (theWebUI.throttles[i].down!=$('#thr_down'+i).val()) || (theWebUI.throttles[i].name!=$('#thr_name'+i).val())) return(true); } return($('#chDefault').val()!=theWebUI.defaultThrottle); } plugin.setSettings = theWebUI.setSettings; theWebUI.setSettings = function() { plugin.setSettings.call(this); if(plugin.enabled && this.throttleWasChanged()) this.request("?action=setthrottleprm"); } rTorrentStub.prototype.setthrottleprm = function() { this.content = "default="+iv($('#chDefault').val()); for(var i=0; i<theWebUI.maxThrottle; i++) { var name = $.trim($('#thr_name'+i).val()); var up = iv($('#thr_up'+i).val()); var down = iv($('#thr_down'+i).val()); if(name.length) this.content += ('&thr_up'+i+'='+up+'&thr_down'+i+'='+down+'&thr_name'+i+'='+encodeURIComponent(name)); } this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/throttle/action.php"; this.dataType = "script"; } } if(plugin.canChangeMenu()) { theWebUI.getThrottleData = function(id) { var curNo = -1; var s = this.torrents[id].throttle; var arr = s.match(/^thr_(\d{1,2})$/); if(arr && (arr.length>1)) curNo = arr[1]; return(curNo); } plugin.createMenu = theWebUI.createMenu; theWebUI.createMenu = function(e, id) { plugin.createMenu.call(this, e, id); if(plugin.enabled && plugin.allStuffLoaded) { var el = theContextMenu.get(theUILang.Priority); var curNo = null; var table = this.getTable("trt"); if((table.selCount==1) && (table.getFirstSelected().length>40)) theContextMenu.add(el,[theUILang.mnuThrottle, null]); else { if(table.selCount==1) curNo = theWebUI.getThrottleData(id); var down = []; down.push([theUILang.mnuUnlimited, (curNo==-1) ? null : "theWebUI.setThrottle('-1')"]); down.push([CMENU_SEP]); for(var i=0; i<theWebUI.maxThrottle; i++) { if(theWebUI.isCorrectThrottle(i)) down.push([theWebUI.throttles[i].name,(i!=curNo) ? "theWebUI.setThrottle('"+i+"')" : null]); } theContextMenu.add(el,[CMENU_CHILD, theUILang.mnuThrottle, down]); } } } theWebUI.setThrottle = function(throttle) { var sr = this.getTable("trt").rowSel; var req = ''; for(var k in sr) if(sr[k] && (k.length==40)) req += ("&hash=" + k + "&v="+throttle); if(req.length>0) this.request("?action=setthrottle"+req+"&list=1",[this.addTorrents, this]); } rTorrentStub.prototype.setthrottle = function() { for(var i=0; i<this.vs.length; i++) { var needRestart = (theWebUI.torrents[this.hashes[i]].status==theUILang.Seeding) || (theWebUI.torrents[this.hashes[i]].status==theUILang.Downloading); var name = (this.vs[i]>=0) ? "thr_"+this.vs[i] : ""; if(needRestart) { cmd = new rXMLRPCCommand('d.stop'); cmd.addParameter("string",this.hashes[i]); this.commands.push( cmd ); } cmd = new rXMLRPCCommand('d.set_throttle_name'); cmd.addParameter("string",this.hashes[i]); cmd.addParameter("string",name); this.commands.push( cmd ); if(needRestart) { cmd = new rXMLRPCCommand('d.start'); cmd.addParameter("string",this.hashes[i]); this.commands.push( cmd ); } } } } theWebUI.isCorrectThrottle = function(i) { return( ((i>=0) && (i<theWebUI.throttles.length)) && (theWebUI.throttles[i].name!="") && (theWebUI.throttles[i].up>=0) && (theWebUI.throttles[i].down>=0)); } plugin.onLangLoaded = function() { var s = "<fieldset>"+ "<legend>"+theUILang.throttles+"</legend>"+ "<div id='st_throttle_h'>"+ "<table>"+ "<tr>"+ "<td><b>"+theUILang.Num_No+"</b></td>"+ "<td><b>"+theUILang.channelName+"</b></td>"+ "<td><b>"+theUILang.UL+" ("+theUILang.KB+"/"+theUILang.s+")</b></td>"+ "<td><b>"+theUILang.DL+" ("+theUILang.KB+"/"+theUILang.s+")</b></td>"+ "</tr>"; for(var i=0; i<theWebUI.maxThrottle; i++) s += "<tr>"+ "<td class='alr'><b>"+(i+1)+".</b></td>"+ "<td><input type='text' id='thr_name"+i+"' class='TextboxLarge'/></td>"+ "<td><input type='text' id='thr_up"+i+"' class='Textbox num' maxlength='6'/></td>"+ "<td><input type='text' id='thr_down"+i+"' class='Textbox num' maxlength='6'/></td>"+ "</tr>"; s+="</table></div></fieldset>"; s+="<div class='aright'><label>"+theUILang.channelDefault+":</label><select id='chDefault'><option value='0'>"+theUILang.dontSet+"</option>"; for(var i=1; i<=theWebUI.maxThrottle; i++) s+="<option value='"+i+"'>"+i+"</option>"; s+="</select></div>"; this.attachPageToOptions($("<div>").attr("id","st_throttle").html(s).get(0),theUILang.throttles); } plugin.onRemove = function() { this.removePageFromOptions("st_throttle"); theWebUI.getTable("trt").removeColumnById("throttle"); if(thePlugins.isInstalled("rss")) theWebUI.getTable("rss").removeColumnById("throttle"); theRequestManager.removeRequest( "trt", plugin.reqId ); } })();(function () { var plugin = new rPlugin( 'ratio',3.6,'Novik','This plugin allows to manage ratio limits for groups of torrents.',256,'http://code.google.com/p/rutorrent/wiki/PluginRatio' ); theWebUI.ratios = [{ action: 0, min: 100, max: 300, time: -1, upload: 20, name : "ratio0" },{ action: 0, min: 100, max: 300, time: -1, upload: 20, name : "ratio1" },{ action: 0, min: 100, max: 300, time: -1, upload: 20, name : "ratio2" },{ action: 0, min: 100, max: 300, time: -1, upload: 20, name : "ratio3" },{ action: 0, min: 100, max: 300, time: -1, upload: 20, name : "ratio4" },{ action: 0, min: 100, max: 300, time: -1, upload: 20, name : "ratio5" },{ action: 0, min: 100, max: 300, time: -1, upload: 20, name : "ratio6" },{ action: 0, min: 100, max: 300, time: -1, upload: 20, name : "ratio7" }]; theWebUI.maxRatio = 8; theWebUI.defaultRatio = 0; plugin.loadLang(); plugin.loadMainCSS(); plugin.allDone = function() { if(!thePlugins.isInstalled("seedingtime")) { $('.ratio_time').remove(); } if(thePlugins.isInstalled("throttle")) { for(var i=0; i<theWebUI.maxThrottle; i++) if(theWebUI.isCorrectThrottle(i)) { for(var j=0; j<theWebUI.maxRatio; j++) $('#rat_action'+j).append("<option value='"+(i+10)+"'>"+theUILang.setThrottleTo+" "+theWebUI.throttles[i].name+"</option>"); } } } plugin.config = theWebUI.config; theWebUI.config = function(data) { if(plugin.canChangeColumns()) { theWebUI.tables.trt.columns.push({ text: 'RatioGroup', width: '60px', id: 'ratiogroup', type: TYPE_STRING}); plugin.trtFormat = this.tables.trt.format; theWebUI.tables.trt.format = function(table,arr) { for(var i in arr) { if((table.getIdByCol(i)=="ratiogroup") && arr[i]) { var rat = arr[i].match(/rat_(\d+)/); arr[i] = ( rat && (rat.length>1) && theWebUI.isCorrectRatio(rat[1]) ? theWebUI.ratios[rat[1]].name : "" ); break; } } return(plugin.trtFormat(table,arr)); }; } plugin.config.call(this,data); plugin.reqId = theRequestManager.addRequest("trt", theRequestManager.map("cat=")+'$'+theRequestManager.map("d.views="),function(hash,torrent,value) { torrent.ratiogroup = value; }); if(plugin.canChangeColumns()) plugin.trtRenameColumn(); thePlugins.waitLoad( "thePlugins.get('ratio').allDone" ); } if(plugin.canChangeColumns()) { plugin.trtRenameColumn = function() { if(plugin.allStuffLoaded) { theWebUI.getTable("trt").renameColumnById("ratiogroup",theUILang.ratio); if(thePlugins.isInstalled("rss")) plugin.rssRenameColumn(); if(thePlugins.isInstalled("extsearch")) plugin.tegRenameColumn(); } else setTimeout(arguments.callee,1000); } plugin.rssRenameColumn = function() { if(theWebUI.getTable("rss").created) theWebUI.getTable("rss").renameColumnById("ratiogroup",theUILang.ratio); else setTimeout(arguments.callee,1000); } plugin.tegRenameColumn = function() { if(theWebUI.getTable("teg").created) theWebUI.getTable("teg").renameColumnById("ratiogroup",theUILang.ratio); else setTimeout(arguments.callee,1000); } } if(plugin.canChangeOptions()) { plugin.addAndShowSettings = theWebUI.addAndShowSettings; theWebUI.addAndShowSettings = function(arg) { if(plugin.enabled) { for(var i=0; i<theWebUI.maxRatio; i++) { $('#rat_min'+i).val( theWebUI.ratios[i].min ); $('#rat_max'+i).val( theWebUI.ratios[i].max ); $('#rat_action'+i).val( theWebUI.ratios[i].action ); $('#rat_upload'+i).val( theWebUI.ratios[i].upload ); $('#rat_time'+i).val( theWebUI.ratios[i].time ); $('#rat_name'+i).val( theWebUI.ratios[i].name ); } $('#ratDefault').val(theWebUI.defaultRatio); } plugin.addAndShowSettings.call(theWebUI,arg); } theWebUI.ratioWasChanged = function() { for(var i=0; i<theWebUI.maxRatio; i++) { if( (theWebUI.ratios[i].min != $('#rat_min'+i).val()) || (theWebUI.ratios[i].max != $('#rat_max'+i).val()) || (theWebUI.ratios[i].action != $('#rat_action'+i).val()) || ($('#rat_upload'+i).val() != theWebUI.ratios[i].upload) || ($('#rat_time'+i).val() != theWebUI.ratios[i].time) || ($('#rat_name'+i).val() != theWebUI.ratios[i].name)) return(true); } return($('#ratDefault').val()!=theWebUI.defaultRatio); } plugin.setSettings = theWebUI.setSettings; theWebUI.setSettings = function() { plugin.setSettings.call(this); if(plugin.enabled && this.ratioWasChanged()) this.request("?action=setratioprm"); } rTorrentStub.prototype.setratioprm = function() { this.content = "default="+iv($('#ratDefault').val()); for(var i=0; i<theWebUI.maxRatio; i++) { var name = $.trim($('#rat_name'+i).val()); var upload = iv($('#rat_upload'+i).val()); var min = $('#rat_min'+i).val(); var time = $('#rat_time'+i).val(); var max = $('#rat_max'+i).val(); var action = $('#rat_action'+i).val(); if(name.length) this.content += ('&rat_upload'+i+'='+upload+'&rat_action'+i+'='+action+'&rat_min'+i+'='+min+'&rat_max'+i+'='+max+'&rat_time'+i+'='+time+'&rat_name'+i+'='+encodeURIComponent(name)); } this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/ratio/action.php"; this.dataType = "script"; } } if(plugin.canChangeMenu()) { theWebUI.getRatioData = function(id) { var curNo = -1; var s = this.torrents[id].ratiogroup; var arr = s.match(/rat_(\d{1,2})/); if(arr && (arr.length>1)) curNo = arr[1]; return(curNo); } plugin.createMenu = theWebUI.createMenu; theWebUI.createMenu = function(e, id) { plugin.createMenu.call(this, e, id); if(plugin.enabled && plugin.allStuffLoaded) { var el = theContextMenu.get(theUILang.Priority); var curNo = null; var table = this.getTable("trt"); if((table.selCount==1) && (table.getFirstSelected().length!=40)) theContextMenu.add(el,[theUILang.mnuRatio, null]); else { if(table.selCount==1) curNo = theWebUI.getRatioData(id); var down = []; down.push([theUILang.mnuRatioUnlimited,(curNo==-1) ? null : "theWebUI.setRatio('-1')"]); down.push([CMENU_SEP]); for(var i=0; i<theWebUI.maxRatio; i++) if(theWebUI.isCorrectRatio(i)) down.push([theWebUI.ratios[i].name,(i!=curNo) ? "theWebUI.setRatio('"+i+"')" : null]); theContextMenu.add(el,[CMENU_CHILD, theUILang.mnuRatio, down]); } } } theWebUI.setRatio = function(ratio) { var sr = this.getTable("trt").rowSel; var req = ''; for(var k in sr) if(sr[k] && (k.length==40)) req += ("&hash=" + k + "&v="+ratio); if(req.length>0) this.request("?action=setratio"+req+"&list=1",[this.addTorrents, this]); } rTorrentStub.prototype.setratio = function() { for(var i=0; i<this.vs.length; i++) { var wasNo = theWebUI.getRatioData(this.hashes[i]); if(wasNo!=this.vs[i]) { if(wasNo>=0) { cmd = new rXMLRPCCommand('view.set_not_visible'); cmd.addParameter("string",this.hashes[i]); cmd.addParameter("string","rat_"+wasNo); this.commands.push( cmd ); cmd = new rXMLRPCCommand('d.views.remove'); cmd.addParameter("string",this.hashes[i]); cmd.addParameter("string","rat_"+wasNo); this.commands.push( cmd ); } if(this.vs[i]>=0) { cmd = new rXMLRPCCommand('d.views.push_back_unique'); cmd.addParameter("string",this.hashes[i]); cmd.addParameter("string","rat_"+this.vs[i]); this.commands.push( cmd ); cmd = new rXMLRPCCommand('view.set_visible'); cmd.addParameter("string",this.hashes[i]); cmd.addParameter("string","rat_"+this.vs[i]); this.commands.push( cmd ); } } } } } theWebUI.isCorrectRatio = function(i) { return( ((i>=0) && (i<theWebUI.ratios.length)) && (theWebUI.ratios[i].name!="")); } plugin.onLangLoaded = function() { var s = "<fieldset>"+ "<legend>"+theUILang.ratios+"</legend>"+ "<div id='st_ratio_h'>"+ "<table>"+ "<tr>"+ "<td><b>"+theUILang.Num_No+"</b></td>"+ "<td align=center><b>"+theUILang.ratioName+"</b></td>"+ "<td align=center><b>"+theUILang.minRatio+",%</b></td>"+ "<td align=center><b>"+theUILang.maxRatio+",%</b></td>"+ "<td align=center><b>"+theUILang.ratioUpload+","+theUILang.MB+"</b></td>"+ "<td class='ratio_time' align=center><b>"+theUILang.maxTime+","+theUILang.time_h.substr(0,theUILang.time_h.length-1)+"</b></td>"+ "<td align=center><b>"+theUILang.ratioAction+"</b></td>"+ "</tr>"; for(var i=0; i<theWebUI.maxRatio; i++) s += "<tr>"+ "<td class='alr'><b>"+(i+1)+".</b></td>"+ "<td><input type='text' id='rat_name"+i+"' class='TextboxShort'/></td>"+ "<td><input type='text' id='rat_min"+i+"' class='Textbox num1'/></td>"+ "<td><input type='text' id='rat_max"+i+"' class='Textbox num1'/></td>"+ "<td><input type='text' id='rat_upload"+i+"' class='Textbox num1' maxlength='6'/></td>"+ "<td class='ratio_time'><input type='text' id='rat_time"+i+"' class='Textbox num1' maxlength='6'/></td>"+ "<td><select id='rat_action"+i+"'><option value='0'>"+theUILang.ratioStop+"</option><option value='1'>"+theUILang.ratioStopAndRemove+"</option><option value='2'>"+theUILang.ratioErase+"</option><option value='3'>"+theUILang.ratioEraseData+"</option></select></td>"+ "</tr>"; s+="</table></div></fieldset>"; s+="<div class='aright'><label>"+theUILang.ratioDefault+":</label><select id='ratDefault'><option value='0'>"+theUILang.dontSet+"</option>"; for(var i=1; i<=theWebUI.maxRatio; i++) s+="<option value='"+i+"'>"+i+"</option>"; s+="</select></div>"; this.attachPageToOptions($("<div>").attr("id","st_ratio").html(s).get(0),theUILang.ratios); } plugin.onRemove = function() { this.removePageFromOptions("st_ratio"); theWebUI.getTable("trt").removeColumnById("ratiogroup"); if(thePlugins.isInstalled("rss")) theWebUI.getTable("rss").removeColumnById("ratiogroup"); if(thePlugins.isInstalled("extsearch")) theWebUI.getTable("teg").removeColumnById("ratiogroup"); theRequestManager.removeRequest( "trt", plugin.reqId ); } })();(function () { var plugin = new rPlugin( 'seedingtime',3.6,'Novik','This plugin adds the columns \'Finished\' and \'Added\' to the torrents list.',256,'http://code.google.com/p/rutorrent/wiki/PluginSeedingtime' ); plugin.loadLang(); if(plugin.canChangeColumns()) { plugin.config = theWebUI.config; theWebUI.config = function(data) { this.tables.trt.columns.push({text: 'SeedingTime', width: '100px', id: 'seedingtime', type: TYPE_NUMBER}); this.tables.trt.columns.push({text: 'AddTime', width: '100px', id: 'addtime', type: TYPE_NUMBER}); plugin.trtFormat = this.tables.trt.format; this.tables.trt.format = function(table,arr) { for(var i in arr) { var s = table.getIdByCol(i); if(s=="seedingtime") arr[i] = (arr[i]>3600*24*365) ? theConverter.time(new Date().getTime()/1000-(iv(arr[i])+theWebUI.deltaTime/1000),true) : ""; else if(s=="addtime") arr[i] = (arr[i]>3600*24*365) ? theConverter.date(iv(arr[i])+theWebUI.deltaTime/1000) : ""; } return(plugin.trtFormat(table,arr)); } plugin.config.call(this,data); plugin.reqId1 = theRequestManager.addRequest("trt", theRequestManager.map("d.get_custom=")+"seedingtime",function(hash,torrent,value) { torrent.seedingtime = value; }); plugin.reqId2 = theRequestManager.addRequest("trt", theRequestManager.map("d.get_custom=")+"addtime",function(hash,torrent,value) { torrent.addtime = value; }); plugin.trtRenameColumn(); } plugin.trtRenameColumn = function() { if(plugin.allStuffLoaded) { theWebUI.getTable("trt").renameColumnById("seedingtime",theUILang.seedingTime); theWebUI.getTable("trt").renameColumnById("addtime",theUILang.addTime); if(thePlugins.isInstalled("rss")) plugin.rssRenameColumn(); if(thePlugins.isInstalled("extsearch")) plugin.tegRenameColumn(); } else setTimeout(arguments.callee,1000); } plugin.rssRenameColumn = function() { if(theWebUI.getTable("rss").created) { theWebUI.getTable("rss").renameColumnById("seedingtime",theUILang.seedingTime); theWebUI.getTable("rss").renameColumnById("addtime",theUILang.addTime); } else setTimeout(arguments.callee,1000); } plugin.tegRenameColumn = function() { if(theWebUI.getTable("teg").created) { theWebUI.getTable("teg").renameColumnById("seedingtime",theUILang.seedingTime); theWebUI.getTable("teg").renameColumnById("addtime",theUILang.addTime); } else setTimeout(arguments.callee,1000); } } plugin.onRemove = function() { theWebUI.getTable("trt").removeColumnById("seedingtime"); theWebUI.getTable("trt").removeColumnById("addtime"); if(thePlugins.isInstalled("rss")) { theWebUI.getTable("rss").removeColumnById("seedingtime"); theWebUI.getTable("rss").removeColumnById("addtime"); } theRequestManager.removeRequest( "trt", plugin.reqId1 ); theRequestManager.removeRequest( "trt", plugin.reqId2 ); } })();(function () { var plugin = new rPlugin( 'extratio',3.6,'Novik','This plugin extends the functionality of the ratio plugin.',256,'http://code.google.com/p/rutorrent/wiki/PluginExtRatio' ); plugin.loadMainCSS(); if(browser.isIE && browser.versionMajor < 8) plugin.loadCSS("ie"); plugin.loadLang(); plugin.curRule = null; plugin.maxRuleNo = 0; theWebUI.showRatioRules = function() { theWebUI.request("?action=getratiorules",[plugin.loadRules, this]); } plugin.storeRuleParams = function() { var no = 0; if(this.curRule) { no = parseInt(this.curRule.id.substr(4)); this.rules[no].pattern = $('#ratio_pattern').val(); this.rules[no].reason = $('#ratio_reason').val(); this.rules[no].ratio = $('#dst_ratio').val(); this.rules[no].channel = $('#dst_throttle').val(); } return(no); } theWebUI.selectRatioRule = function( el ) { if(plugin.curRule!=el) { if(plugin.curRule) plugin.curRule.className = 'TextboxNormal'; plugin.storeRuleParams(); plugin.curRule = el; plugin.curRule.className = 'TextboxFocus'; var no = parseInt(plugin.curRule.id.substr(4)); var rle = plugin.rules[no]; $('#ratio_pattern').val(rle.pattern); $('#ratio_reason').val(rle.reason); $('#dst_ratio').val(rle.ratio); $('#dst_throttle').val(rle.channel); plugin.setButtonsState(); } } plugin.loadRules = function( rle ) { var fltThrottle = $('#dst_throttle'); if(fltThrottle.length) { $('#dst_throttle option').remove(); fltThrottle.append("<option value=''>"+theUILang.dontSet+"</option>"); for(var i=0; i<theWebUI.maxThrottle; i++) if(theWebUI.isCorrectThrottle(i)) fltThrottle.append("<option value='thr_"+i+"'>"+theWebUI.throttles[i].name+"</option>"); } var fltRatio = $('#dst_ratio'); if(fltRatio.length) { $('#dst_ratio option').remove(); fltRatio.append("<option value=''>"+theUILang.dontSet+"</option>"); for(var i=0; i<theWebUI.maxRatio; i++) if(theWebUI.isCorrectRatio(i)) fltRatio.append("<option value='rat_"+i+"'>"+theWebUI.ratios[i].name+"</option>"); } plugin.curRule = null; var list = $("#rlsul"); list.empty(); plugin.rules = rle; plugin.maxRuleNo = 0; for(var i=0; i<plugin.rules.length; i++) { var f = plugin.rules[i]; if(plugin.maxRuleNo<f.no) plugin.maxRuleNo = f.no; list.append( $("<li>").html("<input type='checkbox' id='_rre"+i+"'/><input type='text' class='TextboxNormal' onfocus=\"theWebUI.selectRatioRule(this);\" id='_rrn"+i+"'/>")); $("#_rrn"+i).val(f.name); if(f.enabled) $("#_rre"+i).prop("checked",true); } for(var i=0; i<plugin.rules.length; i++) { var f = plugin.rules[i]; if(f.no<0) { plugin.maxRuleNo++; f.no = plugin.maxRuleNo; } } plugin.correctCSS(); theDialogManager.show("dlgEditRatioRules"); $("#_rrn0").focus(); plugin.setButtonsState(); } plugin.setButtonsState = function() { if(plugin.curRule) { if($(plugin.curRule).parent().prev().length) $('#ratUpRule').removeClass('disabled'); else $('#ratUpRule').addClass('disabled'); if($(plugin.curRule).parent().next().length) $('#ratDownRule').removeClass('disabled'); else $('#ratDownRule').addClass('disabled'); if(plugin.rules.length) $('#ratDelRule').removeClass('disabled'); else $('#ratDelRule').addClass('disabled'); } else $('#ratDelRule,#ratUpRule,#ratDownRule').addClass('disabled'); $('#ratio_reason').change(); } theWebUI.upRatioRule = function() { if(plugin.curRule && $(plugin.curRule).parent().prev().length) { var cur = $(plugin.curRule).parent(); var prev = $(plugin.curRule).parent().prev(); var curId = parseInt(plugin.curRule.id.substr(4)); var prevId = parseInt( prev.children().get(0).id.substr(4) ); prev.children().get(0).id = "_rre"+curId; prev.children().get(1).id = "_rrn"+curId; cur.children().get(0).id = "_rre"+prevId; cur.children().get(1).id = "_rrn"+prevId; var tmp = plugin.rules[curId]; plugin.rules[curId] = plugin.rules[prevId]; plugin.rules[prevId] = tmp; prev.before( cur ); plugin.setButtonsState(); } } theWebUI.downRatioRule = function() { if(plugin.curRule && $(plugin.curRule).parent().next().length) { var cur = $(plugin.curRule).parent(); var next = $(plugin.curRule).parent().next(); var curId = parseInt(plugin.curRule.id.substr(4)); var nextId = parseInt( next.children().get(0).id.substr(4) ); next.children().get(0).id = "_rre"+curId; next.children().get(1).id = "_rrn"+curId; cur.children().get(0).id = "_rre"+nextId; cur.children().get(1).id = "_rrn"+nextId; var tmp = plugin.rules[curId]; plugin.rules[curId] = plugin.rules[nextId]; plugin.rules[nextId] = tmp; next.after( cur ); plugin.setButtonsState(); } } theWebUI.addNewRatioRule = function() { var list = $("#rlsul"); plugin.maxRuleNo++; var f = { name: theUILang.ratioNewRule, enabled: 1, pattern: "mininova.org", reason: 1, ratio: "", channel: "", no: plugin.maxRuleNo }; var i = plugin.rules.length; list.append( $("<li>").html("<input type='checkbox' id='_rre"+i+"'/><input type='text' class='TextboxNormal' onfocus=\"theWebUI.selectRatioRule(this);\" id='_rrn"+i+"'/>")); plugin.rules.push(f); $("#_rrn"+i).val( f.name ); if(f.enabled) $("#_rre"+i).prop("checked",true); $("#_rrn"+i).focus(); plugin.setButtonsState(); } theWebUI.deleteCurrentRatioRule = function() { if(plugin.curRule) { var no = parseInt(plugin.curRule.id.substr(4)); plugin.rules.splice(no,1); $(plugin.curRule).parent().remove(); plugin.curRule = null; if(plugin.rules.length) { for(var i=no+1; i<plugin.rules.length+1; i++) { $("#_rrn"+i).prop("id", "_rrn"+(i-1)); $("#_rre"+i).prop("id", "_rre"+(i-1)); } if(no>=plugin.rules.length) no = no - 1; $("#_rrn"+no).focus(); } else { $('#dst_ratio,#ratio_pattern,#dst_throttle').val(''); $('#ratio_reason').val('0'); } plugin.setButtonsState(); } } theWebUI.setRatioRules = function() { this.request("?action=setratiorules"); } rTorrentStub.prototype.setratiorules = function() { this.content = "mode=setrules"; plugin.storeRuleParams(); for(var i=0; i<plugin.rules.length; i++) { var rle = plugin.rules[i]; var enabled = $("#_rre"+i).prop("checked") ? 1 : 0; var name = $("#_rrn"+i).val(); this.content = this.content+"&name="+encodeURIComponent(name)+"&pattern="+encodeURIComponent(rle.pattern)+"&enabled="+enabled+ "&reason="+rle.reason+ "&channel="+rle.channel+"&ratio="+rle.ratio+ "&no="+rle.no; } this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/extratio/action.php"; this.dataType = "json"; } rTorrentStub.prototype.getratiorules = function() { this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/extratio/action.php"; this.dataType = "json"; this.method = 'GET'; this.cache = true; } rTorrentStub.prototype.checklabels = function() { this.content = "mode=checklabels"; for(var i=0; i<this.hashes.length; i++) this.content += ("&hash="+this.hashes[i]); this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/extratio/action.php"; this.dataType = "json"; } plugin.setlabelResponse = rTorrentStub.prototype.setlabelResponse; rTorrentStub.prototype.setlabelResponse = function( data ) { if(this.hashes.length) { var req = "?action=checklabels"; for(var i=0; i<this.hashes.length; i++) req+=("&hash="+this.hashes[i]); theWebUI.request(req); } return($type(plugin.setlabelResponse) ? plugin.setlabelResponse(data) : data); } plugin.correctCSS = function() { if(!this.cssCorrected) { rule = getCSSRule("div#CatList ul li.sel"); rule3 = getCSSRule(".lf_rru li input.TextboxFocus"); if(rule && rule3) { rule3.style.backgroundColor = rule.style.backgroundColor; rule3.style.color = rule.style.color; } rule = getCSSRule("div#stg .lm"); rule1 = getCSSRule(".lf_rru"); rule2 = getCSSRule(".lf_rru li input.TextboxNormal"); var ruleMain = getCSSRule("html, body"); if(!ruleMain) ruleMain = getCSSRule("html"); if(rule && rule1 && rule2 && ruleMain) { rule1.style.borderColor = rule.style.borderColor; rule1.style.backgroundColor = rule.style.backgroundColor; rule2.style.backgroundColor = rule.style.backgroundColor; rule2.style.color = ruleMain.style.color; } rule = getCSSRule(".stg_con"); rule1 = getCSSRule(".rf_rru"); if(rule && rule1) rule1.style.backgroundColor = rule.style.backgroundColor; this.cssCorrected = true; } } plugin.createPluginMenu = function() { if(this.enabled) theContextMenu.add([theUILang.mnu_ratiorule, "theWebUI.showRatioRules()"]); } plugin.onLangLoaded = function() { this.registerTopMenu(7); theDialogManager.make( "dlgEditRatioRules", theUILang.ratioRulesManager, "<div class='fxcaret'>"+ "<div class='lfc_rru'>"+ "<div class='lf_rru' id='ratioRuleList'>"+ "<ul id='rlsul'></ul>"+ "</div>"+ "<div id='exratio_buttons1'>"+ "<input type='button' id='ratAddRule' class='Button' value='"+theUILang.ratAddRule+"' onclick='theWebUI.addNewRatioRule(); return(false);'/>"+ "<input type='button' id='ratDelRule' class='Button' value='"+theUILang.ratDelRule+"' onclick='theWebUI.deleteCurrentRatioRule(); return(false);'/>"+ "<input type='button' id='ratUpRule' class='Button' value='"+theUILang.ratUpRule+"' onclick='theWebUI.upRatioRule(); return(false);'/>"+ "<input type='button' id='ratDownRule' class='Button' value='"+theUILang.ratDownRule+"' onclick='theWebUI.downRatioRule(); return(false);'/>"+ "</div>"+ "</div>"+ "<div class='rf_rru'>"+ "<fieldset>"+ "<legend>"+theUILang.ratioIfLegend+"</legend>"+ "<select id='ratio_reason'>"+ "<option value='0'>"+theUILang.ratLabelContain+"</option>"+ "<option value='1'>"+theUILang.ratTrackerContain+"</option>"+ "<option value='3'>"+theUILang.ratTrackerPublic+"</option>"+ "<option value='2'>"+theUILang.ratTrackerPrivate+"</option>"+ "</select><br/>"+ "<input type='text' id='ratio_pattern' class='TextboxLarge'/><br/>"+ "</fieldset>"+ "<fieldset>"+ "<legend>"+theUILang.ratioThenLegend+"</legend>"+ "<table>"+ "<tr><td>"+theUILang.setRatioTo+"</td>"+ "<td><select id='dst_ratio'></select></td></tr>"+ "<tr><td>"+theUILang.setChannelTo+"</td>"+ "<td><select id='dst_throttle'></select></td></tr>"+ "</table>"+ "</fieldset>"+ "</div>"+ "</div>"+ "<div id='exratio_buttons2' class='aright buttons-list'>"+ "<input type='button' class='OK Button' value='"+theUILang.ok+"' onclick='theDialogManager.hide(\"dlgEditRatioRules\");theWebUI.setRatioRules();return(false);'/>"+ "<input type='button' class='Cancel Button' value='"+theUILang.Cancel+"'/>"+ "</div>"); $('#ratio_reason').change( function() { if(iv($(this).val())>1) $('#ratio_pattern').css("visibility","hidden"); else $('#ratio_pattern').css("visibility","visible"); }); }; plugin.onRemove = function() { theDialogManager.hide("dlgEditRatioRules"); } })();(function () { var plugin = new rPlugin( 'mediainfo',3.6,'Novik','This plugin is intended to display media file information.',256,'http://code.google.com/p/rutorrent/wiki/PluginMediainfo' ); plugin.loadLang(); if(plugin.canChangeMenu()) { theWebUI.mediaInfo = function( hash, no ) { theWebUI.startConsoleTask( "mediainfo", plugin.name, { "hash": hash, "no": no }, { noclose: true } ); } plugin.createFileMenu = theWebUI.createFileMenu; theWebUI.createFileMenu = function( e, id ) { if(plugin.createFileMenu.call(this, e, id)) { if(plugin.enabled) { // theContextMenu.add([CMENU_SEP]); var fno = null; var table = this.getTable("fls"); if((table.selCount == 1) && (theWebUI.dID.length==40)) { var fid = table.getFirstSelected(); if(this.settings["webui.fls.view"]) { var arr = fid.split('_f_'); fno = arr[1]; } else if(!this.dirs[this.dID].isDirectory(fid)) fno = fid.substr(3); } theContextMenu.add( [theUILang.mediainfo, (fno==null) ? null : "theWebUI.mediaInfo('" + theWebUI.dID + "',"+fno+")"] ); } return(true); } return(false); } } })();(function () { var plugin = new rPlugin( 'rssurlrewrite',3.6,'Novik','This plugin extends the functionality of the RSS plugin.',256,'http://code.google.com/p/rutorrent/wiki/PluginRSSURLRewrite' ); plugin.loadMainCSS(); if(browser.isIE && browser.versionMajor < 8) plugin.loadCSS("ie"); plugin.loadLang(); theWebUI.curRule = null; theWebUI.maxRuleNo = 0; theWebUI.showRules = function() { theWebUI.request("?action=getrules",[this.loadRules, this]); } theWebUI.storeRuleParams = function() { var no = 0; if(this.curRule) { no = parseInt(this.curRule.id.substr(3)); this.rules[no].pattern = $('#RLS_pattern').val(); this.rules[no].replacement = $('#RLS_replacement').val(); this.rules[no].hrefAsSrc = $('#RLS_src').val(); this.rules[no].hrefAsDest = $('#RLS_dst').val(); this.rules[no].rssHash = $('#RLS_rss').val(); } return(no); } theWebUI.selectRule = function( el ) { if(this.curRule!=el) { if(this.curRule) this.curRule.className = 'TextboxNormal'; this.storeRuleParams(); this.curRule = el; this.curRule.className = 'TextboxFocus'; var no = parseInt(this.curRule.id.substr(3)); var rle = this.rules[no]; $('#RLS_pattern').val(rle.pattern); $('#RLS_replacement').val(rle.replacement); $('#RLS_src').val(rle.hrefAsSrc); $('#RLS_dst').val(rle.hrefAsDest); $('#RLS_rss').val(rle.rssHash); } } theWebUI.loadRules = function( rle ) { this.curRule = null; var list = $("#rlslist"); list.empty(); $('#RLS_rss option').remove(); $('#RLS_rss').append("<option value=''>"+theUILang.allFeeds+"</option>"); for(var lbl in this.rssGroups) $('#RLS_rss').append("<option value='"+lbl+"'>"+this.rssGroups[lbl].name+"</option>"); for(var lbl in this.rssLabels) $('#RLS_rss').append("<option value='"+lbl+"'>"+this.rssLabels[lbl].name+"</option>"); this.rules = rle; theWebUI.maxRuleNo = 0; for(var i=0; i<this.rules.length; i++) { var f = this.rules[i]; if(theWebUI.maxRuleNo<f.no) theWebUI.maxRuleNo = f.no; list.append( $("<li>").html("<input type='checkbox' id='_re"+i+"'/><input type='text' class='TextboxNormal' onfocus=\"theWebUI.selectRule(this);\" id='_rn"+i+"'/>")); $("#_rn"+i).val(f.name); if(f.enabled) $("#_re"+i).prop("checked",true); } for(var i=0; i<this.rules.length; i++) { var f = this.rules[i]; if(f.no<0) { theWebUI.maxRuleNo++; f.no = theWebUI.maxRuleNo; } } plugin.correctCSS(); theDialogManager.show("dlgEditRules"); $("#_rn0").focus(); } theWebUI.addNewRule = function() { var list = $("#rlslist"); theWebUI.maxRuleNo++; var f = { name: theUILang.rssNewRule, enabled: 1, pattern: "|http://www.mininova.org/get/(\\d+)|i", replacement: "http://www.mininova.org/tor/${1}", rssHash: "", hrefAsSrc: 1, hrefAsDest: 0, no: theWebUI.maxRuleNo }; var i = this.rules.length; list.append( $("<li>").html("<input type='checkbox' id='_re"+i+"'/><input type='text' class='TextboxNormal' onfocus=\"theWebUI.selectRule(this);\" id='_rn"+i+"'/>")); this.rules.push(f); $("#_rn"+i).val( f.name ); if(f.enabled) $("#_re"+i).prop("checked",true); $("#_rn"+i).focus(); } theWebUI.deleteCurrentRule = function() { if(this.curRule) { var no = parseInt(this.curRule.id.substr(3)); this.rules.splice(no,1); $(this.curRule).parent().remove(); this.curRule = null; if(this.rules.length) { for(var i=no+1; i<this.rules.length+1; i++) { $("#_rn"+i).prop("id", "_rn"+(i-1)); $("#_re"+i).prop("id", "_re"+(i-1)); } if(no>=this.rules.length) no = no - 1; $("#_rn"+no).focus(); } else { $('#RLS_replacement,#RLS_pattern,#RLS_rss').val(''); } } } theWebUI.checkCurrentRule = function() { if(this.curRule) { $('#RLS_result').val(''); this.request("?action=checkrule",[this.showRuleResults, this]); } } theWebUI.showRuleResults = function( d ) { var msg = d.msg ? d.msg : theUILang.rssPatternError; $('#RLS_result').val(msg); } theWebUI.setRules = function() { this.request("?action=setrules"); } rTorrentStub.prototype.setrules = function() { this.content = "mode=setrules"; theWebUI.storeRuleParams(); for(var i=0; i<theWebUI.rules.length; i++) { var rle = theWebUI.rules[i]; var enabled = $("#_re"+i).prop("checked") ? 1 : 0; var name = $("#_rn"+i).val(); this.content = this.content+"&name="+encodeURIComponent(name)+"&pattern="+encodeURIComponent(rle.pattern)+"&enabled="+enabled+ "&replacement="+encodeURIComponent(rle.replacement)+ "&hash="+rle.rssHash+"&hrefAsSrc="+rle.hrefAsSrc+"&hrefAsDest="+rle.hrefAsDest+ "&no="+rle.no; } this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rssurlrewrite/action.php"; this.dataType = "json"; } rTorrentStub.prototype.checkrule = function() { var no = theWebUI.storeRuleParams(); var rle = theWebUI.rules[no]; this.content = "mode=checkrule&pattern="+encodeURIComponent(rle.pattern)+"&replacement="+encodeURIComponent(rle.replacement)+"&test="+encodeURIComponent($('#RLS_test').val()); this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rssurlrewrite/action.php"; this.dataType = "json"; } rTorrentStub.prototype.getrules = function() { this.content = "mode=getrules"; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/rssurlrewrite/action.php"; this.dataType = "json"; this.method = 'GET'; this.cache = true; } plugin.correctCSS = function() { if(!this.cssCorrected) { rule = getCSSRule("div#CatList ul li.sel"); rule3 = getCSSRule(".lf_rur li input.TextboxFocus"); if(rule && rule3) { rule3.style.backgroundColor = rule.style.backgroundColor; rule3.style.color = rule.style.color; } rule = getCSSRule("div#stg .lm"); rule1 = getCSSRule(".lf_rur"); rule2 = getCSSRule(".lf_rur li input.TextboxNormal"); var ruleMain = getCSSRule("html, body"); if(!ruleMain) ruleMain = getCSSRule("html"); if(rule && rule1 && rule2 && ruleMain) { rule1.style.borderColor = rule.style.borderColor; rule1.style.backgroundColor = rule.style.backgroundColor; rule2.style.backgroundColor = rule.style.backgroundColor; rule2.style.color = ruleMain.style.color; } rule = getCSSRule(".stg_con"); rule1 = getCSSRule(".rf_rur"); if(rule && rule1) rule1.style.backgroundColor = rule.style.backgroundColor; this.cssCorrected = true; } } if(plugin.canChangeMenu()) { plugin.createRSSMenuPrim = theWebUI.createRSSMenuPrim; theWebUI.createRSSMenuPrim = function() { plugin.createRSSMenuPrim.call(this); if(plugin.enabled) { var el = theContextMenu.get( theUILang.rssMenuManager ); if( el ) theContextMenu.add( el, [theUILang.rssRulesManager, "theWebUI.showRules()"] ); } } theWebUI.showURLInfo = function(id) { if($type(theWebUI.rssItems[id])) { log(theUILang.rssURLGUID+": "+theWebUI.rssItems[id].guid); log(theUILang.rssURLHref+": "+theWebUI.rssItems[id].href); } } plugin.createRSSMenu = theWebUI.createRSSMenu; theWebUI.createRSSMenu = function(e,id) { plugin.createRSSMenu.call(this,e,id); if(plugin.enabled) { var el = theContextMenu.get( theUILang.rssMenuAddToFilter ); if( el && $type(theWebUI.rssItems[id])) theContextMenu.add( el, [theUILang.rssURLInfo, "theWebUI.showURLInfo('"+id+"')"] ); } } } plugin.createPluginMenu = function() { if(this.enabled) theContextMenu.add([theUILang.mnu_rssurlrewrite, "theWebUI.showRules()"]); } plugin.onLangLoaded = function() { this.registerTopMenu(5); theDialogManager.make( "dlgEditRules", theUILang.rssRulesManager, "<div class='fxcaret'>"+ "<div class='lfc_rur'>"+ "<div class='lf_rur' id='ruleList'>"+ "<ul id='rlslist'></ul>"+ "</div>"+ "<div id='RLSchk_buttons'>"+ "<input type='button' class='Button' value='"+theUILang.rssAddRule+"' onclick='theWebUI.addNewRule(); return(false);'/>"+ "<input type='button' class='Button' value='"+theUILang.rssDelRule+"' onclick='theWebUI.deleteCurrentRule(); return(false);'/>"+ "<input type='button' id='chkRuleBtn' class='Button' value='"+theUILang.rssCheckRule+"' onclick='theWebUI.checkCurrentRule(); return(false);'/>"+ "</div>"+ "</div>"+ "<div class='rf_rur' id='ruleProps'>"+ "<fieldset id='rulePropsFieldSet'>"+ "<legend>"+theUILang.rssRulesLegend+"</legend>"+ "<select id='RLS_src'>"+ "<option value='1'>"+theUILang.rssSrcHref+"</option>"+ "<option value='0'>"+theUILang.rssSrcGuid+"</option>"+ "</select><br/>"+ "<input type='text' id='RLS_pattern' class='TextboxLarge'/><br/>"+ "<select id='RLS_dst'>"+ "<option value='1'>"+theUILang.rssDstHref+"</option>"+ "<option value='0'>"+theUILang.rssDstGuid+"</option>"+ "</select><br/>"+ "<input type='text' id='RLS_replacement' class='TextboxLarge'/><br/>"+ "<label>"+theUILang.rssStatus+":</label><select id='RLS_rss'><option value=''>"+theUILang.allFeeds+"</option></select>"+ "</fieldset>"+ "<fieldset id='rulePropsFieldSet'>"+ "<legend>"+theUILang.rssRulesDebug+"</legend>"+ "<label>"+theUILang.rssTestString+":</label><input type='text' id='RLS_test' class='TextboxLarge' value='http://www.mininova.org/get/12345'/><br/>"+ "<label>"+theUILang.rssTestResult+":</label><input type='text' id='RLS_result' class='TextboxLarge'/><br/>"+ "</fieldset>"+ "</div>"+ "</div>"+ "<div id='RLS_buttons' class='aright buttons-list'>"+ "<input type='button' class='OK Button' value='"+theUILang.ok+"' onclick='theDialogManager.hide(\"dlgEditRules\");theWebUI.setRules();return(false);'/>"+ "<input type='button' class='Cancel Button' value='"+theUILang.Cancel+"'/>"+ "</div>"); }; plugin.onRemove = function() { theDialogManager.hide("dlgEditRules"); } })();(function () { var plugin = new rPlugin( 'screenshots',3.6,'Novik','This plugin is intended to show screenshots from video files.',256,'http://code.google.com/p/rutorrent/wiki/PluginScreenshots' ); plugin.ffmpegSettings = {"exusewidth":0,"exfrmwidth":320,"exfrmcount":3,"exfrmoffs":3,"exfrminterval":5,"explayinterval":3,"exformat":0}; plugin.extensions = ["3g2","3gp","4xm","iff","iss","mtv","roq","a64","ac3","anm","apc","asf","avi","avm2","avs","bethsoftvid","bink","c93","cavsvideo","cdg","dirac","dnxhd","dsicin","dts","dv","dv1394","dvd","ea","eac3","ffm","film_cpk","filmstrip","flic","flv","gxf","h261","h263","h264","idcin","image2","image2pipe","ingenient","ipmovie","ipod","iv8","ivf","m4v","matroska","mjpeg","mov","m4a","mj2","mp2","mp4","mpeg","mpeg1video","mpeg2video","mpegts","mpegtsraw","mpegvideo","msnwctcp","mvi","mxf","mxf_d10","nc","nsv","nuv","ogg","psp","psxstr","rawvideo","rm","rpl","rtsp","smk","svcd","swf","vcd","video4linux","video4linux2","vob","webm","wmv","mkv","ogm","mpg","mpv","m1v","m2v","mp2","qt","rmvb","dat","ts"];var explorerIsInstalled = thePlugins.isInstalled("explorer"); plugin.loadMainCSS(); plugin.loadLang(); plugin.playTimer = null; if(plugin.canChangeOptions() && !explorerIsInstalled) { plugin.addAndShowSettings = theWebUI.addAndShowSettings; theWebUI.addAndShowSettings = function(arg) { if(plugin.enabled && plugin.allStuffLoaded) { $.each( plugin.ffmpegSettings, function(name,val) { if($('#'+name).is(":checkbox")) $('#'+name).prop('checked', val!=0).change(); else $('#'+name).val(val); }); } plugin.addAndShowSettings.call(theWebUI,arg); } plugin.ffmpegWasChanged = function() { var ret = false; if( plugin.allStuffLoaded ) { $.each( plugin.ffmpegSettings, function(name,val) { if($('#'+name).is(":checkbox")) { if($('#'+name).prop('checked')!=val) { ret = true; return(false); } } else if($('#'+name).val()!=val) { ret = true; return(false); } }); } return(ret); } plugin.ffmpegSet = function(data) { plugin.ffmpegSettings = data; } plugin.setSettings = theWebUI.setSettings; theWebUI.setSettings = function() { plugin.setSettings.call(this); if(plugin.enabled && plugin.ffmpegWasChanged()) this.request("?action=setffmpeg",[plugin.ffmpegSet,plugin]); } rTorrentStub.prototype.setffmpeg = function() { var s = ''; $.each( plugin.ffmpegSettings, function(name,val) { if($('#'+name).is(":checkbox")) s+=("&"+name+"="+ ($('#'+name).prop('checked') ? 1 : 0) ); else s+=("&"+name+"="+encodeURIComponent($.trim($('#'+name).val()))); }); this.content = "cmd=ffmpegset"+s; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/screenshots/action.php"; this.dataType = "json"; } } if(plugin.canChangeMenu()) { plugin.createFileMenu = theWebUI.createFileMenu; theWebUI.createFileMenu = function( e, id ) { if(plugin.createFileMenu.call(this, e, id)) { if(plugin.enabled && plugin.allStuffLoaded) { var fno = null; var table = this.getTable("fls"); if((table.selCount == 1) && (theWebUI.dID.length==40)) { var fid = table.getFirstSelected(); var ext = ''; var s = table.getRawValue(fid,0); var pos = s.lastIndexOf("."); if(pos>0) { ext = s.substring(pos+1); s = s.substring(0,pos); } $('#scimgfile').val(s); if(this.settings["webui.fls.view"]) { var arr = fid.split('_f_'); fno = arr[1]; } else if(!this.dirs[this.dID].isDirectory(fid)) fno = fid.substr(3); if($.inArray( ext.toLowerCase(), plugin.extensions )==-1) fno = null; } theContextMenu.add( [theUILang.exFFMPEG, (fno==null) ? null : "theWebUI.fileFFMPEG('" + theWebUI.dID + "',"+fno+")"] ); } return(true); } return(false); } theWebUI.fileFFMPEG = function(hash,no) { this.startConsoleTask( "ffmpeg", plugin.name, { "hash" : hash, "no" : no }, { noclose: true }); } plugin.onTaskShowInterface = function(task) { $('.scplay').hide(); $('#tskcmdlog').addClass('scframe_cont'); } plugin.onTaskShowLog = function(task,line,id,ndx) { if(id=='tskcmdlog') { if( !$('#scframe'+ndx+' img').length ) { if(!ndx) $('#'+id).empty(); else $('.scframe').hide(); $('#'+id).append("<div class='scframe' id='scframe"+ndx+"'><img src='plugins/screenshots/action.php?cmd=ffmpeggetimage&no="+task.no+ "&fno="+line+"&file="+encodeURIComponent($('#scimgfile').val())+"' /></div>"); $('#scframe'+ndx+' img').load(function() { plugin.centerFrame(ndx); }); } return(''); } return(escapeHTML(line)+'<br>'); } plugin.onTaskFinished = function(task,onBackground) { if(!onBackground) { if($('.scframe').length) { $('.scframe').hide(); $('#scframe0').show(); } $("#sctaskno").val(task.no); plugin.setPlayControls(); } } plugin.onTaskHideInterface = function(task) { $('.scplay').hide(); $('#tskcmdlog').removeClass('scframe_cont'); if(plugin.playTimer) { window.clearInterval(plugin.playTimer); plugin.playTimer = null; } } plugin.setPlayControls = function() { if($('.scframe').length) { $('.scplay').show(); var current = plugin.getCurrentFrame(); $("#tskConsole-header").html(theUILang.exScreenshot+" "+(current+1)+"/"+$('.scframe').length); $("#scplay").val(plugin.playTimer ? "���" : "���") if((current==0) || plugin.playTimer) { $("#scfirst,#scprev").prop("disabled",true); $("#scfirst,#scprev").addClass("disabled"); } else { $("#scfirst,#scprev").prop("disabled",false); $("#scfirst,#scprev").removeClass("disabled"); } if((current==$('.scframe').length-1) || plugin.playTimer) { $("#sclast,#scnext").prop("disabled",true); $("#sclast,#scnext").addClass("disabled"); } else { $("#sclast,#scnext").prop("disabled",false); $("#sclast,#scnext").removeClass("disabled"); } if($('.scframe').length==1) { $("#scplay,#scsaveall").prop("disabled",true); $("#scplay,#scsaveall").addClass("disabled"); } else { $("#scplay,#scsaveall").prop("disabled",false); $("#scplay,#scsaveall").removeClass("disabled"); } } else $('.scplay').hide(); } } plugin.centerFrame = function(no) { var img = $('#scframe'+no+' img'); if(img.height()) { var delta = ($('#tskcmdlog').height()-img.height())/2; if(delta>0) img.parent().css("top",delta); } } plugin.getCurrentFrame = function() { return($('.scframe:visible').length ? iv($('.scframe:visible').attr("id").substr(7)) : 0); } plugin.setNextFrame = function() { plugin.setCurrentFrame( plugin.getCurrentFrame()+1 ); } plugin.setCurrentFrame = function(no) { if(no<0) no = $('.scframe').length-1; if(no>=$('.scframe').length) no = 0; $('.scframe:visible').hide(); $('#scframe'+no).show(); plugin.centerFrame(no); plugin.setPlayControls(); } plugin.onLangLoaded = function() { if(!thePlugins.get("_task").allStuffLoaded) setTimeout(arguments.callee,1000); else { if(!explorerIsInstalled) plugin.attachPageToOptions($("<div>").attr("id","st_screenshots").html( "<fieldset>"+ "<legend>"+theUILang.exFFMPEG+"</legend>"+ "<table>"+ "<tr><td><input type=\"checkbox\" id=\"exusewidth\" onchange=\"linked(this, 0, ['exfrmwidth']);\"/><label id='lbl_exfrmwidth' for='exfrmwidth' class='disabled'>"+ theUILang.exFrameWidth+'<label></td><td class="alr"><input type="text" id="exfrmwidth" class="TextboxShort" disabled=true/></td></tr>'+ "<tr><td>"+theUILang.exFramesCount+'</td><td class="alr"><input type="text" id="exfrmcount" class="TextboxShort"/></td></tr>'+ "<tr><td>"+theUILang.exStartOffset+', '+theUILang.time_s+'</td><td class="alr"><input type="text" id="exfrmoffs" class="TextboxShort"/></td></tr>'+ "<tr><td>"+theUILang.exBetween+', '+theUILang.time_s+'</td><td class="alr"><input type="text" id="exfrminterval" class="TextboxShort"/></td></tr>'+ "<tr><td>"+theUILang.exPlayInterval+', '+theUILang.time_s+'</td><td class="alr"><input type="text" id="explayinterval" class="TextboxShort"/></td></tr>'+ "<tr><td>"+theUILang.exImageFormat+'</td><td class="alr"><select id="exformat" class="TextboxShort">'+ "<option value='0'>JPEG</option>"+ "<option value='1'>PNG</option>"+ '</select></td></tr>'+ "</table>"+ "</fieldset>" )[0],theUILang.exFFMPEG); $('#tsk_btns').prepend( "<input type='button' class='Button scplay' id='scfirst' value='<<'>"+ "<input type='button' class='Button scplay' id='scprev' value='<'>"+ "<input type='button' class='Button scplay' id='scplay' value='���'>"+ "<input type='button' class='Button scplay' id='scnext' value='>'>"+ "<input type='button' class='Button scplay' id='sclast' value='>>'>&nbsp;&nbsp;&nbsp;&nbsp;"+ "<input type='button' class='Button scplay' id='scsave' value='"+theUILang.exSave+"'>"+ "<input type='button' class='Button scplay' id='scsaveall' value='"+theUILang.exSaveAll+"'>" ); $("#scfirst").click( function() { plugin.setCurrentFrame(0); }); $("#sclast").click( function() { plugin.setCurrentFrame($('.scframe').length-1); }); $("#scprev").click( function() { plugin.setCurrentFrame( plugin.getCurrentFrame()-1 ); }); $("#scnext").click( plugin.setNextFrame ); $("#scplay").click( function() { if(plugin.playTimer) { window.clearInterval(plugin.playTimer); plugin.playTimer = null; plugin.setPlayControls(); } else { plugin.playTimer = window.setInterval( plugin.setNextFrame, iv(plugin.ffmpegSettings.explayinterval)*1000 ); plugin.setNextFrame(); } }); $(document.body).append($("<iframe name='scplayfrm'/>").css({visibility: "hidden"}).attr( { name: "scplayfrm", id: "scplayfrm" } ).width(0).height(0)); $(document.body).append( $('<form action="plugins/screenshots/action.php" id="scgetimg" method="post" target="scplayfrm">'+ '<input type="hidden" name="cmd" id="scimgcmd" value="ffmpeggetimage">'+ '<input type="hidden" name="no" id="sctaskno" value="0">'+ '<input type="hidden" name="fno" id="scimgno" value="0">'+ '<input type="hidden" name="file" id="scimgfile" value="frame">'+ '</form>').width(0).height(0)); $("#scsave").click( function() { $("#scimgno").val(plugin.getCurrentFrame()); $("#scimgcmd").val("ffmpeggetimage"); $('#scgetimg').submit(); }); $("#scsaveall").click( function() { $("#scimgcmd").val("ffmpeggetall"); $('#scgetimg').submit(); }); plugin.markLoaded(); } } plugin.onRemove = function() { if(!explorerIsInstalled) this.removePageFromOptions("st_screenshots"); } plugin.langLoaded = function() { if(plugin.enabled) plugin.onLangLoaded(); } })();(function () { var plugin = new rPlugin( 'httprpc',3.6,'Novik','This plugin is a low-traffic replacement for the mod_scgi webserver module.',384,'http://code.google.com/p/rutorrent/wiki/PluginHTTPRPC' ); theRequestManager.torrents = {}; plugin.XMLRPCMountPoint = theURLs.XMLRPCMountPoint; theURLs.XMLRPCMountPoint = "plugins/httprpc/action.php"; plugin.origlist = rTorrentStub.prototype.list; rTorrentStub.prototype.list = function() { if(plugin.enabled) { this.dataType = "json"; this.contentType = "application/x-www-form-urlencoded"; this.content = "mode=list"; if(theRequestManager.cid) this.content+=("&cid="+theRequestManager.cid); for(var i=theRequestManager.trt.count; i<theRequestManager.trt.commands.length; i++) this.content+=("&cmd="+encodeURIComponent(theRequestManager.map("trt",i))); } else plugin.origlist.call(this); } plugin.origlistResponse = rTorrentStub.prototype.listResponse; rTorrentStub.prototype.listResponse = function(data) { if(this.dataType == "json") { var ret = { labels: {}, torrents: {} }; theRequestManager.cid = data.cid; if(data.d) $.each( data.d, function( ndx, hash ) { delete theRequestManager.torrents[hash]; }); $.each( data.t, function( hash, values ) { if($type(theRequestManager.torrents[hash])) { $.each( values, function( ndx, value ) { theRequestManager.torrents[hash][ndx] = value; }); } else theRequestManager.torrents[hash] = values; }); $.each( theRequestManager.torrents, function( hash, values ) { var torrent = {}; var state = 0; var is_open = iv(values[0]); var is_hash_checking = iv(values[1]); var is_hash_checked = iv(values[2]); var get_state = iv(values[3]); var get_hashing = iv(values[23]); var is_active = iv(values[28]); torrent.msg = values[29]; if(is_open!=0) { state|=dStatus.started; if((get_state==0) || (is_active==0)) state|=dStatus.paused; } if(get_hashing!=0) state|=dStatus.hashing; if(is_hash_checking!=0) state|=dStatus.checking; if(torrent.msg.length && torrent.msg!="Tracker: [Tried all trackers.]") state|=dStatus.error; torrent.state = state; torrent.name = values[4]; torrent.size = values[5]; var get_completed_chunks = iv(values[6]); var get_hashed_chunks = iv(values[24]); var get_size_chunks = iv(values[7]); var chunks_processing = (is_hash_checking==0) ? get_completed_chunks : get_hashed_chunks; torrent.done = Math.floor(chunks_processing/get_size_chunks*1000); torrent.downloaded = iv(values[8]); torrent.uploaded = iv(values[9]); torrent.ratio = iv(values[10]); torrent.ul = iv(values[11]); torrent.dl = iv(values[12]); var get_chunk_size = iv(values[13]); torrent.eta = (torrent.dl>0) ? Math.floor((get_size_chunks-get_completed_chunks)*get_chunk_size/torrent.dl) : -1; try { torrent.label = $.trim(decodeURIComponent(values[14])); } catch(e) { torrent.label = ''; } if(torrent.label.length>0) { if(!$type(ret.labels[torrent.label])) ret.labels[torrent.label] = 1; else ret.labels[torrent.label]++; } var get_peers_not_connected = iv(values[16]); var get_peers_connected = iv(values[17]); var get_peers_all = get_peers_not_connected+get_peers_connected; torrent.peers_actual = values[15]; torrent.peers_all = get_peers_all; torrent.seeds_actual = values[18]; torrent.seeds_all = get_peers_all; torrent.remaining = values[19]; torrent.priority = values[20]; torrent.state_changed = values[21]; torrent.skip_total = values[22]; torrent.base_path = values[25]; torrent.created = values[26]; torrent.tracker_focus = values[27]; try { torrent.comment = values[30]; if(torrent.comment.search("VRS24mrker")==0) torrent.comment = decodeURIComponent(torrent.comment.substr(10)); } catch(e) { torrent.comment = ''; } torrent.free_diskspace = values[31]; torrent.private = values[32]; torrent.multi_file = iv(values[33]); torrent.seeds = torrent.seeds_actual + " (" + torrent.seeds_all + ")"; torrent.peers = torrent.peers_actual + " (" + torrent.peers_all + ")"; $.each( theRequestManager.trt.handlers, function(i,handler) { if(handler) handler.response( hash, torrent, (handler.ndx===null) ? null : values[handler.ndx-1] ); }); ret.torrents[hash] = torrent; }); return( ret ); } return(plugin.origlistResponse.call(this,data)); } rTorrentStub.prototype.getCommon = function(cmd) { if(plugin.enabled) { this.dataType = "json"; this.contentType = "application/x-www-form-urlencoded"; this.content = "mode="+cmd; for(var i=0; i<this.hashes.length; i++) this.content+=("&hash="+this.hashes[i]); for(var i=0; i<this.vs.length; i++) this.content+=("&v="+encodeURIComponent(this.vs[i])); for(var i=0; i<this.ss.length; i++) this.content+=("&s="+encodeURIComponent(this.ss[i])); if($type(theRequestManager[cmd])) for(var i=theRequestManager[cmd].count; i<theRequestManager[cmd].commands.length; i++) this.content+=("&cmd="+encodeURIComponent(theRequestManager.map(cmd,i))); } else plugin["orig"+cmd].call(this); } plugin.origfls = rTorrentStub.prototype.getfiles; rTorrentStub.prototype.getfiles = function() { this.getCommon("fls"); } plugin.origprs = rTorrentStub.prototype.getpeers; rTorrentStub.prototype.getpeers = function() { this.getCommon("prs"); } plugin.origtrk = rTorrentStub.prototype.gettrackers; rTorrentStub.prototype.gettrackers = function() { this.getCommon("trk"); } plugin.origtrkstate = rTorrentStub.prototype.settrackerstate; rTorrentStub.prototype.settrackerstate = function() { this.getCommon("trkstate"); } plugin.origsetprio = rTorrentStub.prototype.setprio; rTorrentStub.prototype.setprio = function() { this.getCommon("setprio"); } plugin.origrecheck = rTorrentStub.prototype.recheck; rTorrentStub.prototype.recheck = function() { this.getCommon("recheck"); } plugin.origstart = rTorrentStub.prototype.start; rTorrentStub.prototype.start = function() { this.getCommon("start"); } plugin.origstop = rTorrentStub.prototype.stop; rTorrentStub.prototype.stop = function() { this.getCommon("stop"); } plugin.origpause = rTorrentStub.prototype.pause; rTorrentStub.prototype.pause = function() { this.getCommon("pause"); } plugin.origunpause = rTorrentStub.prototype.unpause; rTorrentStub.prototype.unpause = function() { this.getCommon("unpause"); } plugin.origremove = rTorrentStub.prototype.remove; rTorrentStub.prototype.remove = function() { this.getCommon("remove"); } plugin.origdsetprio = rTorrentStub.prototype.dsetprio; rTorrentStub.prototype.dsetprio = function() { this.getCommon("dsetprio"); } plugin.origsetlabel = rTorrentStub.prototype.setlabel; rTorrentStub.prototype.setlabel = function() { this.getCommon("setlabel"); } plugin.origtrkall = rTorrentStub.prototype.getalltrackers; rTorrentStub.prototype.getalltrackers = function() { if( this.hashes.length > 50 ) this.hashes = []; this.getCommon("trkall"); if(plugin.enabled) for(var i=theRequestManager.trk.count; i<theRequestManager.trk.commands.length; i++) this.content+=("&cmd="+encodeURIComponent(theRequestManager.map("trk",i))); } plugin.origsetsettings = rTorrentStub.prototype.setsettings; rTorrentStub.prototype.setsettings = function() { this.getCommon("setsettings"); } plugin.origstg = rTorrentStub.prototype.getsettings; rTorrentStub.prototype.getsettings = function() { this.getCommon("stg"); } plugin.origttl = rTorrentStub.prototype.gettotal; rTorrentStub.prototype.gettotal = function() { this.getCommon("ttl"); } plugin.origprp = rTorrentStub.prototype.getprops; rTorrentStub.prototype.getprops = function() { this.getCommon("prp"); } plugin.origsetprops = rTorrentStub.prototype.setprops; rTorrentStub.prototype.setprops = function() { this.getCommon("setprops"); } plugin.origsetul = rTorrentStub.prototype.setulrate; rTorrentStub.prototype.setulrate = function() { this.getCommon("setul"); } plugin.origsetdl = rTorrentStub.prototype.setdlrate; rTorrentStub.prototype.setdlrate = function() { this.getCommon("setdl"); } plugin.origsnub = rTorrentStub.prototype.snub; rTorrentStub.prototype.snub = function() { this.getCommon("snub"); } plugin.origunsnub = rTorrentStub.prototype.unsnub; rTorrentStub.prototype.unsnub = function() { this.getCommon("unsnub"); } plugin.origban = rTorrentStub.prototype.ban; rTorrentStub.prototype.ban = function() { this.getCommon("ban"); } plugin.origkick = rTorrentStub.prototype.kick; rTorrentStub.prototype.kick = function() { this.getCommon("kick"); } plugin.origaddpeer = rTorrentStub.prototype.addpeer; rTorrentStub.prototype.addpeer = function() { this.getCommon("add_peer"); } plugin.origgetchunks = rTorrentStub.prototype.getchunks; rTorrentStub.prototype.getchunks = function() { this.hashes[0] = theWebUI.dID; this.getCommon("getchunks"); } plugin.origgetchunksResponse = rTorrentStub.prototype.getchunksResponse; rTorrentStub.prototype.getchunksResponse = function(data) { if(this.dataType == "json") return(data); return(plugin.origgetchunksResponse.call(this,data)); } plugin.origgetpropsResponse = rTorrentStub.prototype.getpropsResponse; rTorrentStub.prototype.getpropsResponse = function(values) { if(this.dataType == "json") { var ret = {}; var hash = this.hashes[0]; ret[hash] = { pex: (values[5]!='0') ? -1 : values[0], peers_max: values[1], peers_min: values[2], tracker_numwant: values[3], ulslots: values[4], superseed: (values[6]=="initial_seed") ? 1 : 0 }; $.each( theRequestManager.prp.handlers, function(i,handler) { if(handler) handler.response( hash, ret, (handler.ndx===null) ? null : values[handler.ndx] ); }); return(ret); } return(plugin.origgetpropsResponse.call(this,values)); } plugin.origgettotalResponse = rTorrentStub.prototype.gettotalResponse; rTorrentStub.prototype.gettotalResponse = function(values) { if(this.dataType == "json") { var ret = { UL: iv(values[0]), DL: iv(values[1]), rateUL: iv(values[2]), rateDL: iv(values[3]) }; $.each( theRequestManager.ttl.handlers, function(i,handler) { if(handler) handler.response( ret, (handler.ndx===null) ? null : values[handler.ndx] ); }); return( ret ); } return(plugin.origgettotalResponse.call(this,values)); } plugin.origgetsettingsResponse = rTorrentStub.prototype.getsettingsResponse; rTorrentStub.prototype.getsettingsResponse = function(values) { if(this.dataType == "json") { var ret = {}; ret.dht = values[0]; for( var cmd=0; cmd<theRequestManager.stg.count; cmd++ ) { var v = values[cmd+1]; switch(theRequestManager.stg.commands[cmd]) { case "hash_interval": v = iv(v)/1000; break; case "hash_read_ahead": v = iv(v)/1048576; break; } ret[theRequestManager.stg.commands[cmd]] = v; } $.each( theRequestManager.stg.handlers, function(i,handler) { if(handler) handler.response( ret, (handler.ndx===null) ? null : values[handler.ndx+1] ); }); return(ret); } return(plugin.origgetsettingsResponse.call(this,values)); } plugin.origgetfilesResponse = rTorrentStub.prototype.getfilesResponse; rTorrentStub.prototype.getfilesResponse = function(values) { if(this.dataType == "json") { var ret = {}; var hash = this.hashes[0]; ret[hash] = []; for(var j=0; j<values.length; j++) { var data = values[j]; var fls = {}; fls.name = data[0]; fls.size = iv(data[3]); var get_size_chunks = iv(data[2]); // f.get_size_chunks var get_completed_chunks = iv(data[1]); // f.get_completed_chunks if(get_completed_chunks>get_size_chunks) get_completed_chunks = get_size_chunks; var get_completed_bytes = (get_size_chunks==0) ? 0 : fls.size/get_size_chunks*get_completed_chunks; fls.done = get_completed_bytes; fls.priority = data[4]; $.each( theRequestManager.fls.handlers, function(i,handler) { if(handler) handler.response( hash, fls, (handler.ndx===null) ? null : data[handler.ndx] ); }); ret[hash].push(fls); } return(ret); } return(plugin.origgetfilesResponse.call(this,values)); } plugin.origgetpeersResponse = rTorrentStub.prototype.getpeersResponse; rTorrentStub.prototype.getpeersResponse = function(values) { if(this.dataType == "json") { var ret = {}; for(var j=0;j<values.length;j++) { var data = values[j]; var peer = {}; peer.name = data[1]; peer.ip = peer.name; var cv = data[2]; var mycv = theBTClientVersion.get(data[11]); if((mycv.indexOf("Unknown")>=0) && (cv.indexOf("Unknown")<0)) mycv = cv; peer.version = mycv; peer.flags = ''; if(data[3]==1) // p.is_incoming peer.flags+='I'; if(data[4]==1) // p.is_encrypted peer.flags+='E'; peer.snubbed = 0; if(data[5]==1) // p.is_snubbed { peer.flags+='S'; peer.snubbed = 1; } peer.done = iv(data[6]); // get_completed_percent peer.downloaded = iv(data[7]); // p.get_down_total peer.uploaded = iv(data[8]); // p.get_up_total peer.dl = iv(data[9]); // p.get_down_rate peer.ul = iv(data[10]); // p.get_up_rate var id = data[0]; $.each( theRequestManager.prs.handlers, function(i,handler) { if(handler) handler.response( id, peer, (handler.ndx===null) ? null : data[handler.ndx] ); }); ret[id] = peer; } return(ret); } return(plugin.origgetpeersResponse.call(this,values)); } plugin.origgettrackersResponse = rTorrentStub.prototype.gettrackersResponse; rTorrentStub.prototype.gettrackersResponse = function(values) { if(this.dataType == "json") { var ret = {}; var hash = this.hashes[0]; ret[hash] = []; for(var j=0;j<values.length;j++) { var data = values[j]; var trk = {}; trk.name = data[0]; trk.type = data[1]; trk.enabled = data[2]; trk.group = data[3]; trk.seeds = data[4]; trk.peers = data[5]; trk.downloaded = data[6]; trk.interval = data[7]; trk.last = data[8]; $.each( theRequestManager.trk.handlers, function(i,handler) { if(handler) handler.response( hash, trk, (handler.ndx===null) ? null : data[handler.ndx] ); }); ret[hash].push(trk); } return(ret); } return(plugin.origgettrackersResponse.call(this,values)); } plugin.origgetalltrackersResponse = rTorrentStub.prototype.getalltrackersResponse; rTorrentStub.prototype.getalltrackersResponse = function(values) { if(this.dataType == "json") { var ret = {}; for( var hash in values ) { ret[hash] = []; var torrent = values[hash]; for(var j=0; j<torrent.length; j++) { var data = torrent[j]; var trk = {}; trk.name = data[0]; trk.type = data[1]; trk.enabled = data[2]; trk.group = data[3]; trk.seeds = data[4]; trk.peers = data[5]; trk.downloaded = data[6]; $.each( theRequestManager.trk.handlers, function(i,handler) { if(handler) handler.response( hash, trk, (handler.ndx===null) ? null : data[handler.ndx] ); }); ret[hash].push(trk); } } return(ret); } return(plugin.origgetalltrackersResponse.call(this,values)); } plugin.onRemove = function() { theRequestManager.torrents = {}; theRequestManager.cid = 0; theURLs.XMLRPCMountPoint = plugin.XMLRPCMountPoint; } })();(function () { var plugin = new rPlugin( 'geoip',3.6,'Zoltan Csala,Novik','This plugin shows geolocation of peers for the selected torrent.',256,'http://code.google.com/p/rutorrent/wiki/PluginGeoIP' ); plugin.retrieveCountry = true;plugin.retrieveHost = true;plugin.loadLang(); plugin.loadMainCSS(); var thePeersCache = { MAX_SIZE: 1024, ips: [], info: {}, add: function( data ) { for( var i = 0; i< data.length; i++ ) { this.ips.push(data[i].ip); this.info[data[i].ip] = data[i].info; } }, strip: function() { if(this.ips.length>=this.MAX_SIZE) { for(var i=0; i<this.MAX_SIZE/2; i++) delete this.info[this.ips[i]]; this.ips.splice(0,this.MAX_SIZE/2); } }, update: function( ip, comment ) { if(this.get(ip)) this.info[ip].comment = comment; }, get: function( ip ) { return( $type(this.info[ip]) ? this.info[ip] : null ); }, fill: function(peer) { if(!peer.processed) { var info = this.get(peer.ip); if(info) { peer.processed = true; if(plugin.retrieveCountry) { peer.country = info.country; peer.icon = "geoip geoip_flag_"+peer.country.substr(0,2); } if(plugin.retrieveComments) peer.comment = info.comment; peer.name = info.host; } } return(peer.processed); } }; plugin.config = theWebUI.config; theWebUI.config = function(data) { if(plugin.canChangeColumns()) { if(plugin.retrieveCountry) { this.tables.prs.columns.unshift({text : 'Country', width : '60px', id: 'country', type : TYPE_STRING}); plugin.prsFormat = this.tables.prs.format; theWebUI.tables.prs.format = function(table,arr) { if(plugin.allStuffLoaded) for(var i in arr) { if(arr[i]==null) arr[i] = ''; else if(table.getIdByCol(i)=="country") { var countryName = theUILang.country[arr[i].substr(0,2)]; if(countryName) arr[i] = countryName+arr[i].substr(2); break; } } return(plugin.prsFormat(table,arr)); } } if(plugin.retrieveComments) this.tables.prs.columns.push({text : 'Comment', width : '200px', id: 'comment', type : TYPE_STRING}); } plugin.config.call(this,data); if((plugin.retrieveCountry || plugin.retrieveComments) && plugin.canChangeColumns()) plugin.done(); } plugin.getpeersResponse = rTorrentStub.prototype.getpeersResponse; rTorrentStub.prototype.getpeersResponse = function(xml) { var peers = plugin.getpeersResponse.call(this,xml); if(plugin.enabled) { var content = ""; $.each( peers, function(id,peer) { if(!thePeersCache.fill(peer)) content += ("&ip="+peer.ip); }); if(content.length) { var AjaxReq = jQuery.ajax( { type: "POST", contentType: "application/x-www-form-urlencoded", processData: false, timeout: theWebUI.settings["webui.reqtimeout"], async : false, url : "plugins/geoip/lookup.php", data : "dummy=1"+content, dataType : "json", cache: false, success : function(data) { thePeersCache.add(data); } }); $.each( peers, function(id,peer) { thePeersCache.fill(peer); }); thePeersCache.strip(); } } return(peers); } if(plugin.canChangeColumns()) { plugin.done = function() { if(plugin.allStuffLoaded) { var table = theWebUI.getTable("prs"); table.renameColumnById("country",theUILang.countryName); table.renameColumnById("comment",theUILang.commentName); table.oldFilesSortAlphaNumeric = table.sortAlphaNumeric; table.sortAlphaNumeric = function(x, y) { if(this.getIdByCol(this.sIndex)=="country") { var newX = { key: x.k, v: x.v, e: x.e }; var newY = { key: y.k, v: y.v, e: y.e }; if(theUILang.country[x.v]) newX.v = theUILang.country[x.v]; if(theUILang.country[y.v]) newY.v = theUILang.country[y.v]; return(this.oldFilesSortAlphaNumeric(newX,newY)); } return(this.oldFilesSortAlphaNumeric(x,y)); } } else setTimeout(arguments.callee,1000); } } if(plugin.canChangeMenu() && plugin.retrieveComments) { plugin.createPeerMenu = theWebUI.createPeerMenu; theWebUI.createPeerMenu = function(e, id) { if(plugin.createPeerMenu.call(theWebUI,e,id)) { var el = theContextMenu.get( theUILang.peerAdd ); if(el) { theContextMenu.add(el,[theUILang.peerComment+'...', this.isTorrentCommandEnabled('commentpeer',this.dID) && (theWebUI.getTable("prs").selCount==1) ? "theDialogManager.show('cadd')" : null]); return(true); } } return(false); } theWebUI.addNewComment = function() { this.request("?action=addpeercomment", [plugin.peerCommentAdded, plugin]); } rTorrentStub.prototype.addpeercomment = function() { this.content = "ip="+plugin.ip+"&comment="+encodeURIComponent($('#peerComment').val()); this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/geoip/action.php"; this.dataType = "json"; } plugin.peerCommentAdded = function(data) { thePeersCache.update( data.ip, data.comment ); theWebUI.updatePeers(); } } plugin.onLangLoaded = function() { if(plugin.retrieveComments) { theDialogManager.make("cadd",theUILang.peerComment, '<div class="content fxcaret">'+theUILang.peerCommentLabel+'<br><input type="text" id="peerComment" class="Textbox" maxlength="64"/></div>'+ '<div class="aright buttons-list"><input type="button" class="OK Button" value="'+theUILang.ok+'" onclick="theWebUI.addNewComment();theDialogManager.hide(\'cadd\');return(false);" />'+ '<input type="button" class="Cancel Button" value="'+theUILang.Cancel+'"/></div>', true); theDialogManager.setHandler('cadd','beforeShow',function() { var peer = theWebUI.peers[theWebUI.getTable("prs").getFirstSelected()]; plugin.ip = peer.ip; $('#peerComment').val(peer.comment); }); } } plugin.onRemove = function() { if(plugin.retrieveCountry) theWebUI.getTable("prs").removeColumnById("country"); if(plugin.retrieveComments) theWebUI.getTable("prs").removeColumnById("country"); } })();(function () { var plugin = new rPlugin( 'ipad',3.6,'Novik','This plugin allows ruTorrent to work properly on iPad-like devices.',256,'http://code.google.com/p/rutorrent/wiki/PluginIPad' ); $.extend($.support, { touchable: 'createTouch' in document }); plugin.holdMouse = { x:0, y: 0 }; plugin.curMouse = null; plugin.scrollInterval = 40; plugin.accel = 1.1; plugin.emulateRightClick = function() { if(( (Math.abs(plugin.rightClick.screenX - plugin.holdMouse.x)<8) && (Math.abs(plugin.rightClick.screenY - plugin.holdMouse.y)<8))) { var mouseEvent = document.createEvent("MouseEvent"); mouseEvent.initMouseEvent("contextmenu", true, true, window, 1, plugin.rightClick.screenX + 20, plugin.rightClick.screenY + 5, plugin.rightClick.clientX + 20, plugin.rightClick.clientY + 5, false, false, false, false, 2, null); plugin.rightClick.target.dispatchEvent(mouseEvent); plugin.cancelMouseUp = true; } plugin.rightClick = null; } plugin.cancelHold = function() { if(plugin.rightClick) { window.clearTimeout(plugin.holdTimeout); plugin.rightClick = null; } } plugin.startHold = function(touch) { if(!plugin.rightClick) { plugin.holdMouse = { x: touch.screenX, y: touch.screenY }; plugin.rightClick = touch; plugin.holdTimeout = window.setTimeout(plugin.emulateRightClick, 600); } } plugin.dispatchMouse = function(event,type) { var touch = event.changedTouches[0]; touch.timeStamp = $.now(); window.setTimeout( function() { var mouseEvent = document.createEvent("MouseEvent"); mouseEvent.initMouseEvent(type, true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null); touch.target.dispatchEvent(mouseEvent); }, 0); return(touch); } plugin.cancelTarget = function() { plugin.target = null; } plugin.touchStart = function(event) { if(event.changedTouches.length) { plugin.stopScroll(); if($(event.changedTouches[0].target).is("select") || $(event.changedTouches[0].target).is("input")) return; plugin.dispatchMouse(event,"mousemove"); var touch = plugin.dispatchMouse(event,"mousedown");; if(plugin.targetTimeout) window.clearTimeout(plugin.targetTimeout); if(!plugin.target || (plugin.target != touch.target)) { plugin.target = touch.target; plugin.targetTimeout = window.setTimeout(plugin.cancelTarget, 600); plugin.startHold(touch); } else { if(plugin.target) { plugin.cancelTarget(); plugin.dispatchMouse(event,"click"); plugin.dispatchMouse(event,"dblclick"); } } plugin.curMouse = { x: touch.screenX, y: touch.screenY, timeStamp: $.now() }; } event.preventDefault(); return(false); } plugin.stopScroll = function() { if(plugin.scrollTimeout) window.clearTimeout(plugin.scrollTimeout); plugin.scrollTimeout = null; } plugin.startScroll = function( prop, speed, target ) { plugin.speed = speed; if((plugin.prop!=prop) || (plugin.target!=target)) plugin.stopScroll(); plugin.prop = prop; plugin.target = target; if(!plugin.scrollTimeout) plugin.scrollTimeout = window.setTimeout( function() { var pos = target[prop]; target[prop] -= plugin.speed*plugin.scrollInterval; var scrollEvent = document.createEvent("HTMLEvents"); scrollEvent.initEvent( 'scroll', true, true ) target.dispatchEvent(scrollEvent); if(pos!=target[prop]) plugin.scrollTimeout = window.setTimeout( arguments.callee, plugin.scrollInterval ); else plugin.scrollTimeout = null; }, 40); } plugin.touchMove = function(event) { if(event.changedTouches.length) { var touch = plugin.dispatchMouse(event,"mousemove"); if(plugin.rightClick && (plugin.rightClick.target!=touch.target)) plugin.cancelMouseUp = false; if(plugin.curMouse) { var delta = { x:touch.screenX-plugin.curMouse.x, y:touch.screenY-plugin.curMouse.y, tm: touch.timeStamp-plugin.curMouse.timeStamp }; if((delta.x || delta.y) && delta.tm) { var target = $(touch.target); var mode = { x: true, y: true }; while(target.length) { if(target.css("overflow")=="auto") break; else if(target.css("overflow-x")=="auto") { mode.y = false; break; } else if(target.css("overflow-y")=="auto") { mode.x = false; break; } target = target.parent(); } if(target.length) { if(mode.x && mode.y) { if(Math.abs(delta.x)>Math.abs(delta.y)) mode.y = false; else mode.x = false; } target = target.get(0); if(mode.x) plugin.startScroll( "scrollLeft", delta.x/delta.tm*plugin.accel, target ); if(mode.y) plugin.startScroll( "scrollTop", delta.y/delta.tm*plugin.accel, target ); /* if(mode.x) target.scrollLeft = target.scrollLeft-delta.x; if(mode.y) target.scrollTop = target.scrollTop-delta.y; var scrollEvent = document.createEvent("HTMLEvents"); scrollEvent.initEvent( 'scroll', true, true ) target.dispatchEvent(scrollEvent); */ } } } plugin.curMouse = { x: touch.screenX, y: touch.screenY, timeStamp: $.now() }; } event.preventDefault(); return(false); } plugin.touchEnd = function(event) { if(event.changedTouches.length) { if(plugin.cancelMouseUp) { plugin.cancelMouseUp = false; event.preventDefault(); return(false); } plugin.cancelHold(); var touch = plugin.dispatchMouse(event,"mouseup"); if(plugin.target && (plugin.target == touch.target)) plugin.dispatchMouse(event,"click"); plugin.curMouse = null; } } if($.support.touchable) { document.addEventListener("touchstart", plugin.touchStart, false); document.addEventListener("touchmove", plugin.touchMove, false); document.addEventListener("touchend", plugin.touchEnd, false); } })();(function () { var plugin = new rPlugin( 'mobile',1,'zebraxxl,xombiemp','This plugin provides a mobile version of ruTorrent. (Not compatible with the ipad plugin)',256,'' ); /*** Configurable Options ***/ plugin.enableAutodetect = true; plugin.tabletsDetect = true; plugin.eraseWithDataDefault = false; plugin.sort = 'name'; /* 'name', 'size', 'uploaded', 'downloaded', 'done', 'eta', 'ul', 'dl', 'ratio', 'addtime', 'seedingtime'. Add preceding negative for descending sort. */ /*** End Configurable Options ***/ plugin.statusFilter = {downloading: 1, completed: 2, label: 4, all: 3, tracker: 5, active: 6, inactive: 7, error: 8}; plugin.navFilter = undefined; plugin.torrents = null; plugin.labels = null; plugin.torrent = undefined; plugin.lastHref = ""; plugin.currFilter = plugin.statusFilter.all; plugin.labelInEdit = false; plugin.eraseWithDataLoaded = false; plugin.ratioGroupsLoaded = false; plugin.throttleLoaded = false; plugin.seedingtimeLoaded = false; plugin.getDirLoaded = false; plugin.bootstrapJS = false; var pageToHash = { 'torrentsList': '', 'torrentDetails': 'details', 'globalSettings': 'settings', 'torrentSort': 'sort', 'addTorrent': 'add', 'confimTorrentDelete': 'delete', 'getDirList': 'filesystem' }; var detailsIdToLangId = { 'status' : 'Status', 'done' : 'Done', 'downloaded' : 'Downloaded', 'size' : 'Size', 'timeElapsed' : 'Time_el', 'remaining' : 'Remaining', 'eta' : 'ETA', 'ratio' : 'Ratio', 'downloadSpeed' : 'Down_speed', 'wasted' : 'Wasted', 'uploaded' : 'Uploaded', 'uploadSpeed' : 'Ul_speed', 'seeds' : 'Seeds', 'peers' : 'Peers', 'label' : 'Label', 'priority' : 'Priority', 'trackerStatus' : 'Track_status' }; if(!$type(theWebUI.getTrackerName)) { theWebUI.getTrackerName = function(announce) { var domain = ''; if(announce) { var parts = announce.match(/^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*):?([^:@]*))?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/); if(parts && (parts.length>6)) { domain = parts[6]; if(!domain.match(/^(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})$/)) { parts = domain.split("."); if(parts.length>2) { if($.inArray(parts[parts.length-2]+"", ["co", "com", "net", "org"])>=0 || $.inArray(parts[parts.length-1]+"", ["uk"])>=0) parts = parts.slice(parts.length-3); else parts = parts.slice(parts.length-2); domain = parts.join("."); } } } } return(domain); } } $(document).on('blur', 'input, select, textarea', function() { setTimeout(function() { $(window).scrollTop($(window).scrollTop()+1); }, 0); }); plugin.getRatioData = function(id) { var curNo = -1; var s = this.torrents[id].ratiogroup; var arr = s.match(/rat_(\d{1,2})/); if(arr && (arr.length>1)) { curNo = arr[1]; } return(curNo); }; plugin.toogleDisplay = function(s) { if (s.css('display') == 'none') { s.css('display', '') } else{ s.css('display', 'none'); } }; plugin.backListener = function() { if (this.lastHref != window.location.href) { if (window.location.hash == '#details') { if (this.torrent != undefined) { this.showDetails(this.torrent.hash); } } else if (window.location.hash == '#settings') { this.showSettings(); } else if (window.location.hash == '#add') { this.addTorrent(); } else if (window.location.hash == '#sort') { this.showSort(); } else if (window.location.hash == '#delete') { if (this.torrent != undefined) { this.delete(); } } else { this.showList(); } } }; plugin.request = function(url, func) { theWebUI.requestWithTimeout(url, function(d){if (func != undefined) func(d);}, function(){}, function(){}); }; plugin.setHash = function(page) { window.location.hash = pageToHash[page]; this.lastHref = window.location.href; window.scrollTo(0,0); }; plugin.showAlert = function(message,alerttype) { $('#alert_placeholder').append('<div id="alertdiv" class="alert alert-dismissible fade in navbar-fixed-top '+ alerttype +'" role="alert"><button type="button" class="close" data-dismiss="alert"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>'+ message +'</div>'); setTimeout(function() { $('#alertdiv').removeClass('in'); setTimeout(function() { $("#alertdiv").remove(); }, 1500); }, 5000); }; plugin.createiFrame = function() { $('#addTorrent').prepend('<iframe id="uploadFrame" name="uploadFrame" style="visibility: hidden; width: 0; height: 0; line-height: 0; font-size: 0; border: 0;"></iframe>') $('#uploadFrame').load(function() { var d = (this.contentDocument || this.contentWindow.document); if(d && (d.location.href != "about:blank")) { var matchedRegex = d.body.innerHTML.match(/noty\(".*"\+(.*),"(.*)"/); if (matchedRegex != null) { var message = ''; try {message = eval(matchedRegex[1]);} catch(e) { } if (message != '') { if(matchedRegex[2] == "success") { plugin.showAlert(message,"alert-success"); } else if (matchedRegex[2] == "error") { plugin.showAlert(message,"alert-danger"); } } } } $('#uploadFrame').remove(); }); }; plugin.showPage = function(page) { $('.mainContainer').css('display', 'none'); $('.torrentControl').css('display', 'none'); $('#' + page).css('display', ''); this.setHash(page); }; plugin.showList = function() { this.showPage('torrentsList'); }; plugin.filter = function(f, self, l) { if ($('#torrentsList').is(':visible')) { $('#torrentsLabels').css('width', ''); $('#torrentsTrackers').css('width', ''); $('#torrentsLabels > a > span').css('width', ''); $('#torrentsTrackers > a > span').css('width', ''); } if (f == this.statusFilter.label) { $('.torrentBlock').css('display', 'none'); $('.label' + this.labelIds[l]).css('display', ''); this.navFilter = l; if (l == '') l = theUILang.No_label; $('#torrentsStatus > a > span').html(theUILang.Status); $('#torrentsTrackers > a > span').html(theUILang.Trackers); $('#torrentsLabels > a > span').html(l); $('#torrentsList ul li').removeClass('active'); $('#torrentsLabels').addClass('active'); var totalWidth = $('#torrentsList .nav').width(); var combinedWidth = $('#torrentsStatus').outerWidth(true) + $('#torrentsTrackers').outerWidth(true) + $('#sort').outerWidth(true); var selfWidth = $('#torrentsLabels').width(); var selfExcess = $('#torrentsLabels').outerWidth(true) - selfWidth; var diffWidth = totalWidth - combinedWidth - selfExcess; if (diffWidth < selfWidth && selfWidth > 0 && diffWidth > 0) { $('#torrentsLabels').width(diffWidth); var spanWidth = $('#torrentsLabels > a').width() - $('#torrentsLabels > a > b').outerWidth(true); $('#torrentsLabels > a > span').width(spanWidth); } } else if (f == this.statusFilter.tracker) { $('.torrentBlock').css('display', 'none'); $('.tracker' + this.trackerIds[l]).css('display', ''); this.navFilter = l; $('#torrentsStatus > a > span').html(theUILang.Status); $('#torrentsLabels > a > span').html(theUILang.Labels); $('#torrentsTrackers > a > span').html(l); $('#torrentsList ul li').removeClass('active'); $('#torrentsTrackers').addClass('active'); var totalWidth = $('#torrentsList .nav').width(); var combinedWidth = $('#torrentsStatus').outerWidth(true) + $('#torrentsLabels').outerWidth(true) + $('#sort').outerWidth(true); var selfWidth = $('#torrentsTrackers').width(); var selfExcess = $('#torrentsTrackers').outerWidth(true) - selfWidth; var diffWidth = totalWidth - combinedWidth - selfExcess; if (diffWidth < selfWidth && selfWidth > 0 && diffWidth > 0) { $('#torrentsTrackers').width(diffWidth); var spanWidth = $('#torrentsTrackers > a').width() - $('#torrentsTrackers > a > b').outerWidth(true); $('#torrentsTrackers > a > span').width(spanWidth); } } else { if (f == this.statusFilter.all) { $('.statusDownloading').css({display: ''}); $('.statusCompleted').css({display: ''}); $('#torrentsStatus > a > span').html(theUILang.All); } if (f == this.statusFilter.downloading) { $('.statusDownloading').css({display: ''}); $('.statusCompleted').css({display: 'none'}); $('#torrentsStatus > a > span').html(theUILang.Downloading); } if (f == this.statusFilter.completed) { $('.statusDownloading').css({display: 'none'}); $('.statusCompleted').css({display: ''}); $('#torrentsStatus > a > span').html(theUILang.Finished); } if (f == this.statusFilter.active) { $('.stateActive').css({display: ''}); $('.stateInactive').css({display: 'none'}); $('#torrentsStatus > a > span').html(theUILang.Active); } if (f == this.statusFilter.inactive) { $('.stateActive').css({display: 'none'}); $('.stateInactive').css({display: ''}); $('#torrentsStatus > a > span').html(theUILang.Inactive); } if (f == this.statusFilter.error) { $('.errorNo').css({display: 'none'}); $('.errorYes').css({display: ''}); $('#torrentsStatus > a > span').html(theUILang.Error); } $('#torrentsLabels > a > span').html(theUILang.Labels); $('#torrentsTrackers > a > span').html(theUILang.Trackers); $('#torrentsList ul li').removeClass('active'); $('#torrentsStatus').addClass('active'); } this.currFilter = f; }; plugin.showSettings = function() { this.request("?action=gettotal", function(total) { $('#dlLimit').html(''); $('#ulLimit').html(''); var speeds = theWebUI.settings["webui.speedlistdl"].split(","); for (var i = 0; i < speeds.length; i++) { var spd = speeds[i] * 1024; $('#dlLimit').append('<option' + (spd == total.rateDL ? ' selected' : '') + ' value="' + spd + '">' + theConverter.speed(spd) + '</option>'); }; $('#dlLimit').append('<option' + ((total.rateDL <= 0 || total.rateDL >= 100*1024*1024) ? ' selected' : '') + ' value="' + 100 * 1024 * 1024 + '">' + theUILang.unlimited + '</option>'); speeds=theWebUI.settings["webui.speedlistul"].split(","); for (var i = 0; i < speeds.length; i++) { var spd = speeds[i] * 1024; $('#ulLimit').append('<option' + (spd == total.rateUL ? ' selected' : '') + ' value="' + spd + '">' + theConverter.speed(spd) + '</option>'); }; $('#ulLimit').append('<option' + ((total.rateUL <= 0 || total.rateUL >= 100*1024*1024) ? ' selected' : '') + ' value="' + 100 * 1024 * 1024 + '">' + theUILang.unlimited + '</option>'); plugin.showPage('globalSettings'); }); }; plugin.showSort = function() { $('#sortOption option').prop('selected', false); $('#sort_asc').prop('checked', false); $('#sort_desc').prop('checked', false); var sort = ''; if(plugin.sort[0] === "-") { sort = plugin.sort.substr(1); $('#sort_desc').prop('checked', true); } else { sort = plugin.sort; $('#sort_asc').prop('checked', true); } sortHtml = '<option value="name">' + theUILang.Name + '</option>' + '<option value="size">' + theUILang.Size + '</option>' + '<option value="uploaded">' + theUILang.Uploaded + '</option>' + '<option value="downloaded">' + theUILang.Downloaded + '</option>' + '<option value="done">' + theUILang.Done + '</option>' + '<option value="eta">' + theUILang.ETA + '</option>' + '<option value="ul">' + theUILang.Ul_speed + '</option>' + '<option value="dl">' + theUILang.Down_speed + '</option>' + '<option value="ratio">' + theUILang.Ratio + '</option>'; if (this.seedingtimeLoaded) { sortHtml += '<option value="addtime">' + theUILang.Added + '</option>' + '<option value="seedingtime">' + theUILang.seedingTime + '</option>' } $('#sortOption').html(sortHtml); $('#sortOption option[value=' + sort + ']').prop('selected', true); plugin.showPage('torrentSort'); }; plugin.setDLLimit = function() { theWebUI.setDLRate($('#dlLimit').val()); }; plugin.setULLimit = function() { theWebUI.setULRate($('#ulLimit').val()); }; plugin.setSort = function() { var sort = $('#sortOption').val(); if($('#sort_desc').prop('checked')) { sort = '-' + sort } plugin.sort = sort; plugin.update(true); history.go(-1); }; plugin.addTorrent = function() { this.showPage('addTorrent'); var used = ($('#dir_edit').outerWidth(true) - $('#dir_edit').width()) + $('#showGetDir').outerWidth(true) + 1; $('#dir_edit').width($('#addTorrentFile').outerWidth(true) - used); }; plugin.fillLabel = function(label) { if (this.labelInEdit) { return; } $('#torrentDetails #label td:last').text(label + ' ').append('<button class="btn btn-default btn-sm" type="button" onclick="mobile.editLabel();"><i class="glyphicon glyphicon-edit .icon-black"></i></button>'); }; plugin.fillDetails = function(d) { $('#torrentName').text(d.name); var percent = d.done / 10.0; $('#torrentProgress').removeClass('active'); if (d.done != 1000) { $('#torrentProgress').addClass('active'); } $('#torrentProgress .progress-bar').css('width', percent + '%'); $('#torrentProgress .progress-bar').text(percent + '% of ' + theConverter.bytes(d.size,2)); $('#torrentDetails #status td:last').text(theWebUI.getStatusIcon(d)[1] + ' ').append('<button class="btn btn-default btn-sm" type="button" onclick="mobile.recheck();"><i class="glyphicon glyphicon-refresh .icon-black"></i></button>'); $('#torrentPriority option').prop('selected', false); $('#torrentPriority option[value=' + d.priority + ']').prop('selected', true); if (this.ratioGroupsLoaded) { $('#torrentRatioGrp option').prop('selected', false); if (d.ratiogroup) { $('#torrentRatioGrp option[value=' + d.ratiogroup.replace('rat_','') + ']').prop('selected', true); } else { $('#torrentRatioGrp option[value=-1]').prop('selected', true); } } if (this.throttleLoaded) { $('#torrentChannel option').prop('selected', false); if (d.throttle) { $('#torrentChannel option[value=' + d.throttle.replace('thr_','') + ']').prop('selected', true); } else { $('#torrentChannel option[value=-1]').prop('selected', true); } } this.fillLabel(d.label); $('#torrentDetails #done td:last').text(percent + '%'); $('#torrentDetails #downloaded td:last').text(theConverter.bytes(d.downloaded,2)); $('#torrentDetails #size td:last').text(theConverter.bytes(d.size,2)); $('#torrentDetails #remaining td:last').text(theConverter.bytes(d.remaining,2)); $('#torrentDetails #timeElapsed td:last').text(theConverter.time(Math.floor((new Date().getTime()-theWebUI.deltaTime)/1000-iv(d.state_changed)),true)); if (this.seedingtimeLoaded) { $('#torrentDetails #seedtime td:last').text((d.seedingtime>3600*24*365) ? theConverter.time(new Date().getTime()/1000-(iv(d.seedingtime)+theWebUI.deltaTime/1000),true) : ""); $('#torrentDetails #dateAdded td:last').text((d.addtime>3600*24*365) ? theConverter.date(iv(d.addtime)+theWebUI.deltaTime/1000) : ""); } $('#torrentDetails #eta td:last').html((d.eta ==- 1) ? "&#8734;" : theConverter.time(d.eta)); $('#torrentDetails #ratio td:last').html((d.ratio ==- 1) ? "&#8734;" : theConverter.round(d.ratio/1000,3)); $('#torrentDetails #downloadSpeed td:last').text(theConverter.speed(d.dl)); $('#torrentDetails #wasted td:last').text(theConverter.bytes(d.skip_total,2)); $('#torrentDetails #uploaded td:last').text(theConverter.bytes(d.uploaded,2)); $('#torrentDetails #uploadSpeed td:last').text(theConverter.speed(d.ul)); $('#torrentDetails #seeds td:last').text(d.seeds_actual + " " + theUILang.of + " " + d.seeds_all + " " + theUILang.connected); $('#torrentDetails #peers td:last').text(d.peers_actual + " " + theUILang.of + " " + d.peers_all + " " + theUILang.connected); $('#torrentDetails #trackerStatus td:last').text(d.msg); }; plugin.changePriority = function() { this.request('?action=dsetprio&v=' + $('#torrentPriority').val() + '&hash=' + this.torrent.hash); }; plugin.changeRatioGrp = function() { this.request('?action=setratio&v=' + $('#torrentRatioGrp').val() + '&hash=' + this.torrent.hash); }; plugin.changeChannel = function() { this.request('?action=setthrottle&v=' + $('#torrentChannel').val() + '&hash=' + this.torrent.hash); }; plugin.editLabel = function() { plugin.labelInEdit = true; $('#torrentDetails #label td:last') .html('<div class="input-append">' + '<input class="form-control" id="labelEdit" type="text" value="' + plugin.torrent.label +'"/>' + '<button class="btn btn-default btn-sm"><i class="glyphicon glyphicon-ok icon-black"></i></button></div>'); $('#labelEdit').focus(); $('#labelEdit').blur(function() { var newLabel = $('#labelEdit').val(); plugin.labelInEdit = false; plugin.fillLabel(newLabel); if (plugin.torrent.label != newLabel) { plugin.torrent.label = newLabel; plugin.torrents[plugin.torrent.hash].label = newLabel; plugin.request('?action=setlabel&hash=' + plugin.torrent.hash + '&s=label&v=' + encodeURIComponent(newLabel)); }; }); }; plugin.showDetails = function(e) { this.torrent = this.torrents[e]; if (this.torrent == undefined) return; this.torrent.hash = e; var d = this.torrent; this.fillDetails(d); this.showPage('torrentDetails'); setTimeout(function() { var totalWidth = $('#torrentDetails').width(); var combinedWidth = $('#detailsDetailsPage #priority td:nth-child(1)').outerWidth(true); var tdExcess = $('#detailsDetailsPage #priority td:nth-child(2)').outerWidth(true) - $('#detailsDetailsPage #priority td:nth-child(2)').width(); var diffWidth = totalWidth - combinedWidth - tdExcess; $('#torrentDetails select').css('max-width',diffWidth); }, 0); $('.torrentControl').css('display', ''); this.showDetailsInDetails(); }; plugin.showDetailsInDetails = function() { $('.detailsPage').css('display', 'none'); $('#detailsDetailsPage').css('display', ''); $('#detailsNav li').removeClass('active'); $('#detailsDetailsTab').addClass('active'); }; plugin.showTrackersInDetails = function() { $('.detailsPage').css('display', 'none'); $('#detailsTrackersPage').css('display', ''); $('#detailsNav li').removeClass('active'); $('#detailsTrackers').addClass('active'); this.loadTrackers(); } plugin.showFilesInDetails = function() { $('.detailsPage').css('display', 'none'); $('#detailsFilesPage').css('display', ''); $('#detailsNav li').removeClass('active'); $('#detailsFiles').addClass('active'); this.loadFiles(); } plugin.toogleTrackerInfo = function(s) { this.toogleDisplay($(s).parent().find('div')); } plugin.loadTrackers = function() { if (this.torrent != undefined) { var hash = this.torrent.hash; this.request('?action=gettrackers&hash=' + hash, function(data) { var trackers = data[hash]; if (hash == mobile.torrent.hash) { var trackersHtml = '<div class="panel-group" id="trackersAccordion">'; for (var i = 0; i < trackers.length; i++) { trackersHtml += '<div class="panel panel-default"><div class="panel-heading">' + '<a class="accordion-toggle" data-toggle="collapse" data-parent="#trackersAccordion" href="#tracker' + i + '">' + trackers[i].name + '</a></div>' + '<div id="tracker' + i + '" class="panel-collapse collapse"><div class="panel-body">' + '<table class=" table table-striped"><tbody>' + '<tr><td>' + theUILang.Type + '</td><td>' + theFormatter.trackerType(trackers[i].type) + '</td></tr>' + '<tr><td>' + theUILang.Enabled + '</td><td>' + theFormatter.yesNo(trackers[i].enabled) + '</td></tr>' + '<tr><td>' + theUILang.Group + '</td><td>' + trackers[i].group + '</td></tr>' + '<tr><td>' + theUILang.Seeds + '</td><td>' + trackers[i].seeds + '</td></tr>' + '<tr><td>' + theUILang.Peers + '</td><td>' + trackers[i].peers + '</td></tr>' + '<tr><td>' + theUILang.scrapeDownloaded + '</td><td>' + trackers[i].downloaded + '</td></tr>' + '<tr><td>' + theUILang.scrapeUpdate + '</td><td>' + (trackers[i].last ? theConverter.time($.now() / 1000 - trackers[i].last - theWebUI.deltaTime / 1000, true) : '') + '</td></tr>' + '<tr><td>' + theUILang.trkInterval + '</td><td>' + theConverter.time(trackers[i].interval) + '</td></tr>' + '<tr><td>' + theUILang.trkPrivate + '</td><td>' + theFormatter.yesNo(theWebUI.trkIsPrivate(trackers[i].name)) + '</td></tr>' + '</tbody></table></div></div></div>'; } trackersHtml += '</div>'; $('#detailsTrackersPage').html(trackersHtml); if (!plugin.bootstrapJS) { $('#trackersAccordion a').click(function() { $('#trackersAccordion .in').removeClass('in'); $(this).parent().parent().find('.panel-body').addClass('in'); return false; }); } } }); } }; plugin.files = undefined; plugin.getDir = function(p) { var path = p.split('/'); if ((path[0] == '') && (path.length == 1)) { path = []; } var dir = plugin.files; var realPath = ''; for (var i = 0; i < path.length; i++) { if (path[i] == '') { continue; } if (dir.container[path[i]] != undefined) { dir = dir.container[path[i]]; realPath += '/' + path[i]; if (!dir.directory) { break; } } else { break; } } realPath = realPath.substr(1); return [realPath, dir]; } plugin.getFilesList = function(s) { var ret = ''; for (var name in s) { if (s[name].directory) { ret += this.getFilesList(s[name].container); } else { ret += '&v=' + s[name].id; } } return ret; } plugin.drawFiles = function(p) { var vars = this.getDir(p); var realPath = vars[0]; var dir = vars[1]; var filesHtml = ''; if (!dir.root) { var i = realPath.lastIndexOf('/'); if (i < 0) { i = 0; } var upperDir = realPath.substr(0, i); filesHtml += '<a href="javascript://void();" onclick="mobile.drawFiles(\'' + upperDir + '\');">' + '<i class="glyphicon glyphicon-folder-open icon-black"></i> ..</a><hr>'; } for (var name in dir.container) { filesHtml += '<div>' + '<div class="hiddenPath">' + realPath + '/' + name + '</div>' + '<button onclick="mobile.toogleDisplay($(this).parent().find(\'.prioritySelect\'));" class="btn btn-default btn-sm pull-right"><i class="glyphicon glyphicon-th-list icon-black"></i></button>' if (dir.container[name].directory) { filesHtml += '<a href="javascript://void();" onclick="mobile.drawFiles(\'' + realPath + '/' + name + '\');">' + '<i class="glyphicon glyphicon-folder-open icon-black"></i>&nbsp;' + name + '</a>'; } else { var idName = 'file' + dir.container[name].id; filesHtml += '<a href="javascript://void();" onclick="mobile.toogleDisplay($(\'#' + idName + '\'));">' + '<i class="glyphicon glyphicon-file icon-black"></i>&nbsp;' + name + '</a><div style="display:none;" id="' + idName + '">' + '<table class="table table-striped"><tbody>' + '<tr><td>' + theUILang.Done + '</td><td>' + theConverter.bytes(dir.container[name].done) + '</td></tr>' + '<tr><td>' + theUILang.Size + '</td><td>' + theConverter.bytes(dir.container[name].size) + '</td></tr>' + '</tbody></table></div>'; } filesHtml += '<select class="prioritySelect" style="display:none;">' + '<option disabled ' + ((dir.container[name].priority == -1) ? 'selected' : '') + '></option>' + '<option value="2" ' + ((dir.container[name].priority == 2) ? 'selected' : '') + '>' + theUILang.High_priority + '</option>' + '<option value="1" ' + ((dir.container[name].priority == 1) ? 'selected' : '') + '>' + theUILang.Normal_priority + '</option>' + '<option value="0" ' + ((dir.container[name].priority == 0) ? 'selected' : '') + '>' + theUILang.Dont_download + '</option>' + '</select></div><hr/>'; } $('#detailsFilesPage').html(filesHtml); $('#detailsFilesPage select').change(function() { var newValue = $(this).val(); if (newValue < 0) { return; } var vars = plugin.getDir($(this).parent().find('.hiddenPath').text()); var filesList = ''; if (!vars[1].directory) { filesList = vars[1].id; } else { filesList = plugin.getFilesList(vars[1].container); } plugin.request('?action=setprio&hash=' + plugin.torrent.hash + '&v=' +filesList + '&s=' + newValue); }); } plugin.fillDirectoriesPriority = function(p) { var priority = -2; for (var name in p.container) { if (p.container[name].directory) { this.fillDirectoriesPriority(p.container[name]); } if (priority == -2) { priority = p.container[name].priority; } else if (priority != p.container[name].priority) { priority = -1; } } p.priority = priority; } plugin.loadFiles = function() { if (this.torrent != undefined) { var hash = this.torrent.hash; $('#detailsFilesPage').html(''); this.request('?action=getfiles&hash=' + hash, function(data) { var rawFiles = data[hash]; var files = {root: true, directory: true, priority: -1, container: {}}; for (var i = 0; i < rawFiles.length; i++) { var path = rawFiles[i].name.replace(/^\/|\/$/g, '').split('/'); var currDir = files; for (var j = 0; j < path.length -1; j++) { if (currDir.container[path[j]] == undefined) { currDir.container[path[j]] = {directory: true, root: false, container: {}, priority: -2}; } currDir = currDir.container[path[j]]; } currDir.container[path[path.length - 1]] = {root: false, directory: false, size: rawFiles[i].size, done: rawFiles[i].done, priority: rawFiles[i].priority, id: i }; } plugin.fillDirectoriesPriority(files); mobile.files = files; mobile.drawFiles(''); }); } } plugin.start = function() { if (this.torrent != undefined) { var status = this.torrent.state; if ((!(status & dStatus.started) || (status & dStatus.paused) && !(status & dStatus.checking) && !(status & dStatus.hashing))) { this.request('?action=start&hash=' + this.torrent.hash); } } }; plugin.stop = function() { if (this.torrent != undefined) { var status = this.torrent.state; if ((status & dStatus.started) || (status & dStatus.hashing) || (status & dStatus.checking)) { this.request('?action=stop&hash=' + this.torrent.hash); } } }; plugin.pause = function() { if (this.torrent != undefined) { var status = this.torrent.state; if (((status & dStatus.started) && !(status & dStatus.paused) && !(status & dStatus.checking) && !(status & dStatus.hashing))) { this.request('?action=pause&hash=' + this.torrent.hash); } else if (((status & dStatus.paused) && !(status & dStatus.checking) && !(status & dStatus.hashing))) { this.request('?action=unpause&hash=' + this.torrent.hash); } } }; plugin.recheck = function() { if (this.torrent != undefined) { var status = this.torrent.state; if (!(status & dStatus.checking) && !(status & dStatus.hashing)) { this.request('?action=recheck&hash=' + this.torrent.hash); } } }; plugin.delete = function() { if (this.torrent == undefined) { this.showList(); } else { if ((this.eraseWithDataLoaded) && (this.eraseWithDataDefault != undefined)) { $('#deleteWithData input').prop('checked', this.eraseWithDataDefault); } if (theWebUI.settings["webui.confirm_when_deleting"]) { $('#confimTorrentDelete h5').html('<span id="confirmText">' + theUILang.Rem_torrents_prompt + '</span><hr />' + this.torrent.name); this.showPage('confimTorrentDelete'); } else { this.deleteConfimed(); } } }; plugin.deleteConfimed = function() { if ((this.eraseWithDataLoaded) && ($('#deleteWithData input').prop('checked'))) { this.request('?action=removewithdata&hash=' + this.torrent.hash); } else { this.request('?action=remove&hash=' + this.torrent.hash); } this.torrent = undefined; this.showList(); }; plugin.chooseGetDir = function(path) { $('#dir_edit').val(path); history.go(-1); } plugin.drawGetDir = function(path, first) { $.ajax({ url: 'plugins/_getdir/getdirs.php', data: { 'btn': '', 'edit': '', 'frame_id': '', 'dir': path, 'time': ((new Date()).getTime()) }, success: function(data) { var re = /<td[\s]+code=\'([\S]+?)\'[\s\S]+?>&nbsp;&nbsp;([\s\S]+?)<\/td>/g; var match = null; var html = '<table class="table table-striped"><tbody>' while ((match = re.exec(data)) != null) { if (match[2] == '.') { html = '<h5>' + decodeURIComponent(match[1]) + '</h5>' + '<button class="btn btn-primary" onclick="mobile.chooseGetDir(\'' + decodeURIComponent(match[1]) + '\');">' + theUILang.ok + '</button>' + '<button class="btn btn-default" onclick="history.go(-1);">' + theUILang.Cancel + '</button>' + html; } else { html += '<tr onclick="mobile.drawGetDir(\'' + decodeURIComponent(match[1]) + '\');">' + '<td><i class="glyphicon glyphicon-folder-open icon-black"></i> ' + match[2] + '</td></tr>'; } } html += '</tbody></table>'; $('#getDirList').html(html); if (first === true) { mobile.showPage('getDirList'); } } }); }; plugin.showGetDir = function() { this.drawGetDir('', true); }; plugin.updateLabelDropdown = function () { $('#torrentsLabels ul').css('width', ''); $('#torrentsList .nav > li > ul a').css('white-space',''); var totalWidth = $('#torrentsList .nav').width(); var combinedWidth = $('#torrentsStatus').outerWidth(true); var selfWidth = $('#torrentsLabels ul').width(); var selfExcess = $('#torrentsLabels ul').outerWidth(true) - selfWidth; var diffWidth = totalWidth - combinedWidth - selfExcess; if (diffWidth < selfWidth && selfWidth > 0 && diffWidth > 0) { $('#torrentsLabels ul').width(diffWidth); $('#torrentsList .nav > li > ul a').css('white-space','normal'); } }; plugin.updateTrackerDropdown = function () { $('#torrentsTrackers ul').css('width', ''); $('#torrentsList .nav > li > ul a').css('white-space',''); var combinedWidth = $('#torrentsStatus').outerWidth(true) + $('#torrentsLabels').outerWidth(true) + $('#torrentsTrackers').outerWidth(true); var selfWidth = $('#torrentsTrackers ul').width(); var selfExcess = $('#torrentsTrackers ul').outerWidth(true) - selfWidth; var diffWidth = combinedWidth - selfExcess; if (diffWidth < selfWidth && selfWidth > 0 && diffWidth > 0) { $('#torrentsTrackers ul').width(diffWidth); $('#torrentsList .nav > li > ul a').css('white-space','normal'); } }; plugin.loadRatio = function () { var ratio = thePlugins.get("ratio"); if (ratio.allStuffLoaded) { $('#priority').after('<tr id="ratiogrp"><td></td><td><select id="torrentRatioGrp"></select></td></tr>'); $('#torrentRatioGrp').change(function(){mobile.changeRatioGrp()}); var ratioHTML = '<option value="-1">' + theUILang.mnuRatioUnlimited + '</option>' $.each(theWebUI.ratios, function(i, v) { ratioHTML += '<option value="' + i + '">' + v.name + '</option>'; }); $('#torrentRatioGrp').html(ratioHTML); $('#ratiogrp').children('td:first').text(theUILang.ratio); rTorrentStub.prototype.setratio = function() { for(var i=0; i<this.vs.length; i++) { var wasNo = plugin.getRatioData(this.hashes[i]); if(wasNo!=this.vs[i]) { if(wasNo>=0) { cmd = new rXMLRPCCommand('view.set_not_visible'); cmd.addParameter("string",this.hashes[i]); cmd.addParameter("string","rat_"+wasNo); this.commands.push( cmd ); cmd = new rXMLRPCCommand('d.views.remove'); cmd.addParameter("string",this.hashes[i]); cmd.addParameter("string","rat_"+wasNo); this.commands.push( cmd ); } if(this.vs[i]>=0) { cmd = new rXMLRPCCommand('d.views.push_back_unique'); cmd.addParameter("string",this.hashes[i]); cmd.addParameter("string","rat_"+this.vs[i]); this.commands.push( cmd ); cmd = new rXMLRPCCommand('view.set_visible'); cmd.addParameter("string",this.hashes[i]); cmd.addParameter("string","rat_"+this.vs[i]); this.commands.push( cmd ); } } } } } else { setTimeout(function(){plugin.loadRatio()}, 1000); } }; plugin.loadThrottle = function () { var throttle = thePlugins.get("throttle"); if (throttle.allStuffLoaded) { $('#priority').after('<tr id="throttle"><td></td><td><select id="torrentChannel"></select></td></tr>'); $('#torrentChannel').change(function(){mobile.changeChannel()}); var throttleHTML = '<option value="-1">' + theUILang.mnuUnlimited + '</option>'; $.each(theWebUI.throttles, function(i, v) { throttleHTML += '<option value="' + i + '">' + v.name + '</option>'; }); $('#torrentChannel').html(throttleHTML); $('#throttle').children('td:first').text(theUILang.throttle); rTorrentStub.prototype.setthrottle = function() { for(var i=0; i<this.vs.length; i++) { var status = theWebUI.getStatusIcon(mobile.torrents[this.hashes[i]]); var needRestart = (status[1]==theUILang.Seeding) || (status[1]==theUILang.Downloading); var name = (this.vs[i]>=0) ? "thr_"+this.vs[i] : ""; if(needRestart) { cmd = new rXMLRPCCommand('d.stop'); cmd.addParameter("string",this.hashes[i]); this.commands.push( cmd ); } cmd = new rXMLRPCCommand('d.set_throttle_name'); cmd.addParameter("string",this.hashes[i]); cmd.addParameter("string",name); this.commands.push( cmd ); if(needRestart) { cmd = new rXMLRPCCommand('d.start'); cmd.addParameter("string",this.hashes[i]); this.commands.push( cmd ); } } } } else { setTimeout(function(){plugin.loadThrottle()}, 1000); } }; plugin.loadSeedingTime = function () { var seedingtime = thePlugins.get("seedingtime"); if (seedingtime.allStuffLoaded) { $('#timeElapsed').after('<tr id="seedtime"><td></td><td></td></tr>'); $('#timeElapsed').after('<tr id="dateAdded"><td></td><td></td></tr>'); $('#dateAdded').children('td:first').text(theUILang.Added); $('#seedtime').children('td:first').text(theUILang.seedingTime); } else { setTimeout(function(){plugin.loadSeedingTime()}, 1000); } }; plugin.dynamicSort = function (property) { var sortOrder = 1; if(property[0] === "-") { sortOrder = -1; property = property.substr(1); } return function (a,b) { if (typeof a[property] == 'string' || a[property] instanceof String) { if (parseInt(a[property])) { if (parseInt(b[property])) { var result = (parseInt(a[property]) < parseInt(b[property])) ? -1 : (parseInt(a[property]) > parseInt(b[property])) ? 1 : 0; } else { var result = -1; } } else if (parseInt(b[property])) { var result = 1; } else { var result = (a[property].toLowerCase() < b[property].toLowerCase()) ? -1 : (a[property].toLowerCase() > b[property].toLowerCase()) ? 1 : 0; } } else { var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0; } return result * sortOrder; } } plugin.update = function(singleUpdate) { theWebUI.requestWithTimeout("?list=1&getmsg=1", function(data) { plugin.torrents = data.torrents; plugin.labels = data.labels; plugin.labelIds = {}; plugin.trackerIds = {}; plugin.labelIds[''] = 0; var torrentArray = []; var trackersCount = {}; var trackersMap = {}; var count = Object.keys(plugin.torrents).length; var tul = 0; var tdl = 0; var nextLabelId = 1; var nextTrackerId = 1; var labelsHtml = '<li><a href="javascript://void();" onclick="mobile.filter(mobile.statusFilter.label, this, \'\');">' + theUILang.No_label + '</a></li>'; var trackersHtml = ''; Object.keys(plugin.labels).sort().forEach(function(l) { if (plugin.labelIds[l] == undefined) { plugin.labelIds[l] = nextLabelId++; } labelsHtml += '<li><a href="javascript://void();" onclick="mobile.filter(mobile.statusFilter.label, this, \'' + l + '\');">' + l + ' (' + plugin.labels[l] + ')</a></li>'; }); $('#torrentsLabels ul').html(labelsHtml); if ($('#torrentsLabels ul').is(':visible')) { plugin.updateLabelDropdown(); } var listHtml = '<table class="table table table-striped"><tbody>'; $.each(plugin.torrents, function(n, v){ v.hash = n; torrentArray.push(v); }); torrentArray.sort(plugin.dynamicSort(plugin.sort)); $.each(torrentArray, function(n, v){ var status = theWebUI.getStatusIcon(v); var statusClass = (v.done == 1000) ? 'Completed' : 'Downloading'; var stateClass = (v.ul || v.dl) ? 'Active' : 'Inactive'; var errorClass = (v.state & dStatus.error) ? 'Yes' : 'No'; var percent = v.done / 10; tul += iv(v.ul); tdl += iv(v.dl); listHtml += '<tr id="' + v.hash + '" class="torrentBlock status' + statusClass + ' state' + stateClass + ' error' + errorClass + ' label' + plugin.labelIds[v.label] + '" onclick="mobile.showDetails(this.id);"><td>' + '<h5>' + v.name + '</h5>' + status[1] + ((v.ul) ? ' ���' + theConverter.speed(v.ul) : '') + ((v.dl) ? ' ���' + theConverter.speed(v.dl) : '') + '<div class="progress' + ((v.done == 1000) ? '' : ' active') + '">' + '<div class="progress-bar progress-bar-striped" style="width: ' + percent + '%;">' + percent + '% of ' + theConverter.bytes(v.size,2) + '</div>' + '</div>' + '</td></tr>'; mobile.request('?action=gettrackers&hash=' + v.hash, function(data) { var trackers = data[v.hash]; var uniqueTrackers = []; for (var i = 0; i < trackers.length; i++) { var trackerName = theWebUI.getTrackerName(trackers[i].name); if (trackerName) { if (trackerName in trackersCount) { if ($.inArray(trackerName, uniqueTrackers) == -1) { trackersCount[trackerName]++; } } else { trackersCount[trackerName] = 1; } if (plugin.trackerIds[trackerName] == undefined) { plugin.trackerIds[trackerName] = nextTrackerId++; } if ($.inArray(trackerName, uniqueTrackers) == -1) { uniqueTrackers.push(trackerName); } } } trackersMap[v.hash] = uniqueTrackers; count--; if(count == 0) { Object.keys(trackersCount).sort().forEach(function(t) { trackersHtml += '<li><a href="javascript://void();" onclick="mobile.filter(mobile.statusFilter.tracker, this, \'' + t + '\');">' + t + ' (' + trackersCount[t] + ')</a></li>'; }); $('#torrentsTrackers ul').html(trackersHtml); if ($('#torrentsTrackers ul').is(':visible')) { plugin.updateTrackerDropdown(); } listHtml += '</tbody></table>'; $('#torrentsList #list').html(listHtml); $.each(trackersMap, function(id, ns) { $.each(ns, function(i, n) { $('#'+id).addClass("tracker"+plugin.trackerIds[n]); }); }); $('#torrentsAll > a').text(theUILang.All + ' (' + $('.torrentBlock').length + ')'); $('#torrentsDownloading > a').text(theUILang.Downloading + ' (' + $('.statusDownloading').length + ')'); $('#torrentsCompleted > a').text(theUILang.Finished + ' (' + $('.statusCompleted').length + ')'); $('#torrentsActive > a').text(theUILang.Active + ' (' + $('.stateActive').length + ')'); $('#torrentsInactive > a').text(theUILang.Inactive + ' (' + $('.stateInactive').length + ')'); $('#torrentsError > a').text(theUILang.Error + ' (' + $('.errorYes').length + ')'); plugin.filter(plugin.currFilter, undefined, plugin.navFilter); if (plugin.torrent != undefined) { if (plugin.torrents[plugin.torrent.hash] != undefined) { plugin.torrent = plugin.torrents[plugin.torrent.hash]; plugin.fillDetails(plugin.torrent); } else { plugin.showList(); } } $('#upspeed').text(theConverter.speed(tul)); $('#downspeed').text(theConverter.speed(tdl)); if (!singleUpdate) { setTimeout(function() {mobile.update();}, theWebUI.settings['webui.update_interval']); } } }); }); }, function() { //TODO: Timeout }, function(status,text) { //TODO: Error } ); }; plugin.init = function() { var start = (window.location.href.indexOf('mobile=1') > 0); if ((!start) && this.enableAutodetect) { start = jQuery.browser.mobile; } if (start) { dxSTable.prototype.renameColumn = function(no,name) {} dxSTable.prototype.Sort = function(e) {} dxSTable.prototype.createRow = function(cols, sId, icon, attr) { if(!$type(attr)) attr = []; var tr = $("<tr>").attr( { index: this.rows, title: cols[0] }); if(sId != null) tr.attr("id",sId); var self = this; if(this.colorEvenRows) tr.addClass( (this.rows & 1) ? "odd" : "even" ); tr.mouseclick( function(e) { return(self.selectRow(e, this)); }); if($type(this.ondblclick) == "function") tr.dblclick( function(e) { return(self.ondblclick(this)); }); for(var k in attr) tr.attr(k, attr[k]); var data = this.rowdata[sId].fmtdata; var s = ""; var div; var ret; for(var i = 0; i < this.cols; i++) { var ind = this.colOrder[i]; s+="<td class='stable-"+this.dCont.id+"-col-"+ind+"'"; var span1 = ""; var span2 = ""; if(this.colsdata[i].type==TYPE_PROGRESS) { s+=" rawvalue='"+($type(cols[ind]) ? cols[ind] : "")+"'"; span1 = "<span class='meter-text' style='overflow: visible'>"+escapeHTML(data[ind])+"</span>"; div = "<div class='meter-value' style='float: left; background-color: "+ (new RGBackground()).setGradient(this.prgStartColor,this.prgEndColor,parseFloat(data[ind])).getColor()+ "; width: "+iv(data[ind])+"%"+ "; visibility: "+(iv(data[ind]) ? "visible" : "hidden")+ "'>&nbsp;</div>"; } else div = "<div>"+((String(data[ind]) == "") ? "&nbsp;" : escapeHTML(data[ind]))+"</div>"; if((ind == 0) && (icon != null)) span2 = "<span class='stable-icon "+icon+"'></span>"; if(!this.colsdata[i].enabled && !browser.isIE7x) s+=" style='display: none'"; s+=">"; s+=span1; s+=span2; s+=div; s+="</td>"; } ret = tr.append(s).get(0); //if(!browser.isIE7x) //{ // var _e = this.tBody.getElementsByTagName("colgroup")[0].getElementsByTagName("col"); // for(var i = 0, l = _e.length; i < l; i++) // ret.cells[i].style.textAlign = this.tHeadCols[i].style.textAlign; //} return(ret); } $.each(thePlugins.list, function(i, v) { if (v.name != 'rpc' && v.name != 'httprpc' && v.name != '_getdir' && v.name != 'throttle' && v.name != 'ratio' && v.name != 'erasedata' && v.name != 'seedingtime' && v.name != 'mobile') { v.disable(); } }); this.lastHref = window.location.href; setInterval(function() {plugin.backListener();}, 500); var jQueryVer = jQuery.fn.jquery.split('.'); if ((jQueryVer[0] == 1) && (jQueryVer[1] >= 7)) { this.bootstrapJS = true; } else if (jQueryVer[0] > 1) { this.bootstrapJS = true; //For future =) } $.ajax({ type: 'GET', url: this.path + 'mobile.html', processData: false, error: function(XMLHttpRequest, textStatus, errorThrown) { //TODO: Error }, success: function(data, textStatus) { $('body').html(data); $('link[rel=stylesheet]').remove(); plugin.loadLang(); plugin.loadCSS('css/bootstrap.min'); plugin.loadMainCSS(); $('head').append('<meta name="apple-mobile-web-app-capable" content="yes" />'); if (plugin.bootstrapJS) injectScript(plugin.path+'js/bootstrap.min.js'); if (!plugin.bootstrapJS) { $('#torrentsStatus > a').click(function(){ var menu = $('#torrentsStatus'); if (menu.hasClass('open')) { menu.removeClass('open'); } else { menu.addClass('open'); } }); $('#torrentsStatus > ul').click(function() { $('#torrentsStatus').removeClass('open'); }); $('#torrentsLabels > a').click(function(){ var menu = $('#torrentsLabels'); if (menu.hasClass('open')) { menu.removeClass('open'); } else { menu.addClass('open'); } }); $('#torrentsLabels > ul').click(function() { $('#torrentsLabels').removeClass('open'); }); $('#torrentsTrackers > a').click(function(){ var menu = $('#torrentsTrackers'); if (menu.hasClass('open')) { menu.removeClass('open'); } else { menu.addClass('open'); } }); $('#torrentsTrackers > ul').click(function() { $('#torrentsTrackers').removeClass('open'); }); } $('#torrentsLabels > a').click(function(){ plugin.updateLabelDropdown(); }); $('#torrentsTrackers > a').click(function(){ plugin.updateTrackerDropdown(); }); $('#mainNavbar').addClass('navbar-fixed-bottom'); $('.nav-tabs').addClass('navbar-fixed-top'); $('.torrentControl').css('display', 'none'); $('#dlLimit').change(function(){plugin.setDLLimit();}); $('#ulLimit').change(function(){plugin.setULLimit();}); $('input[id=torrent_file]').change(function() { $('#torrentFileName').val($(this).val()); }); $('#notAddPath').append(' ' + theUILang.Dont_add_tname); $('#startStopped').append(' ' + theUILang.Dnt_start_down_auto); $('#fastResume').append(' ' + theUILang.doFastResume); $('#torrentFileSend').text(theUILang.add_button); $('#torrentPriority').html( '<option value="3">' + theUILang.High_priority + '</option>' + '<option value="2">' + theUILang.Normal_priority + '</option>' + '<option value="1">' + theUILang.Low_priority + '</option>' + '<option value="0">' + theUILang.Dont_download + '</option>' ); $('#torrentPriority').change(function(){mobile.changePriority()}); var makeAddRequest = function(frm) { var s = theURLs.AddTorrentURL+"?"; if($("#torrents_start_stopped").prop("checked")) { s += 'torrents_start_stopped=1&'; } if($("#fast_resume").prop("checked")) { s += 'fast_resume=1&'; } if($("#not_add_path").prop("checked")) { s += 'not_add_path=1&'; } var dir = $.trim($("#dir_edit").val()); if(dir.length) { s += ('dir_edit='+encodeURIComponent(dir)+'&'); } var lbl = $.trim($("#tadd_label").val()); if(lbl.length) { s += ('label='+encodeURIComponent(lbl)); } frm.action = s; return(true); } $("#addTorrentFile").submit(function() { if(!$("#torrent_file").val().match(".torrent")) { plugin.showAlert(theUILang.Not_torrent_file,"alert-danger"); return(false); } plugin.createiFrame(); return(makeAddRequest(this)); }); $("#addTorrentUrl").submit(function() { plugin.createiFrame(); return(makeAddRequest(this)); }); if (thePlugins.isInstalled('erasedata')) { $('#confimTorrentDelete h5').after( '<div class="checkbox"><label" id="deleteWithData">' + '<input type="checkbox"> ' + theUILang.Delete_data + '</label></div>'); plugin.eraseWithDataLoaded = true; } if (thePlugins.isInstalled('throttle')) { plugin.throttleLoaded = true; plugin.loadThrottle(); } if (thePlugins.isInstalled('ratio')) { plugin.ratioGroupsLoaded = true; plugin.loadRatio(); } if (thePlugins.isInstalled('_getdir')) { plugin.getDirLoaded = true; $('#dirEditBlock').append('<input type="button" class="btn btn-default btn-sm" id="showGetDir" type="button" onclick="mobile.showGetDir();" value="..."></input>'); } if (thePlugins.isInstalled('seedingtime')) { plugin.seedingtimeLoaded = true; plugin.loadSeedingTime(); } plugin.update(); } }); } else { this.disable(); } }; plugin.onLangLoaded = function() { $('#torrentsStatus > a > span').html(theUILang.All); $('#torrentsLabels > a > span').html(theUILang.Labels); $('#torrentsTrackers > a > span').html(theUILang.Trackers); $('#detailsDetailsTab a').text(theUILang.General); $('#detailsTrackers a').text(theUILang.Trackers); $('#detailsFiles a').text(theUILang.Files); $('#torrentDetails table tr').each(function(n, v) { $(v).children('td:first').text(theUILang[detailsIdToLangId[v.id]]); }); $('#dlLimit').parent().children('label').children('h5').text(theUILang.Glob_max_downl); $('#ulLimit').parent().children('label').children('h5').text(theUILang.Global_max_upl); $('#speedLimitsOk').text(theUILang.ok); $('#speedLimitsCancel').text(theUILang.Cancel); $('#torrentFile').text(theUILang.Torrent_file+':'); $('#addUrl').text(theUILang.add_url); $('#deleteOk').text(theUILang.ok); $('#deleteCancel').text(theUILang.Cancel); $('#sortAsc').append(' ' + theUILang.acs); $('#sortDesc').append(' ' + theUILang.decs); $('#sortOption').parent().children('label').children('h5').text(theUILang.SortTorrents); $('#sortOk').text(theUILang.ok); $('#sortCancel').text(theUILang.Cancel); }; /** * jQuery.browser.mobile (http://detectmobilebrowser.com/) * * jQuery.browser.mobile will be true if the browser is a mobile device * **/ (function(a){(jQuery.browser=jQuery.browser||{}).mobile=/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))})(navigator.userAgent||navigator.vendor||window.opera); if ((plugin.tabletsDetect) && (!jQuery.browser.mobile)) { (function(a){(jQuery.browser=jQuery.browser||{}).mobile=/android|ipad|playbook|silk/i.test(a)})(navigator.userAgent||navigator.vendor||window.opera); } mobile = plugin; plugin.init(); })();(function () { var plugin = new rPlugin( 'chat',2,'ScarS','The plug-in allows users to communicate with other users on the same rutorrent.',256,'' ); plugin.chatList = {"main_chat":{"newChat":false,"disabled":false}};plugin.settings = {"popup":1,"pm":1,"aInterval":1000,"iInterval":10000,"smileys":1,"smileySet":2,"format":"D\/M\/Y h:m:s","lastLine":[]};plugin.listInterval = 10000;plugin.timeFix = (new Date().getTime()) - 1424701406636;plugin.loadMainCSS(); plugin.loadLang(); plugin.addZero = function(num) { if (num >= 10) return(num); else return('0' + String(num)); } plugin.parseText = function(text) { text = text.replace(/&(?!\w+([;\s]|$))/g, "&amp;"); text = text.replace(/</g, "&lt;").replace(/>/g, "&gt;"); if (plugin.settings["smileys"]) { text = text.replace(/&gt;:\)|&gt;:-\)/i, "<span id='devil" + plugin.settings["smileySet"] + "'></span>"); text = text.replace(/:\(|:-\(/i, "<span id='frown" + plugin.settings["smileySet"] + "'></span>"); text = text.replace(/:O|:-O/i, "<span id='shocked" + plugin.settings["smileySet"] + "'></span>"); text = text.replace(/;\)|;-\)/i, "<span id='wink" + plugin.settings["smileySet"] + "'></span>"); text = text.replace(/X\)|X-\)/i, "<span id='angry" + plugin.settings["smileySet"] + "'></span>"); text = text.replace(/:\||:-\|/i, "<span id='straight" + plugin.settings["smileySet"] + "'></span>"); text = text.replace(/(:\/|:-\/)[^\/]/i, "<span id='slant" + plugin.settings["smileySet"] + "'></span>"); text = text.replace(/:D|:-D/i, "<span id='grin" + plugin.settings["smileySet"] + "'></span>"); text = text.replace(/:P|:-P/i, "<span id='tongue" + plugin.settings["smileySet"] + "'></span>"); text = text.replace(/:'\(|:'-\(/i, "<span id='sad" + plugin.settings["smileySet"] + "'></span>"); text = text.replace(/&gt;\.&lt;/i, "<span id='wince" + plugin.settings["smileySet"] + "'></span>"); text = text.replace(/:\)|:-\)/i, "<span id='smile" + plugin.settings["smileySet"] + "'></span>"); text = text.replace(/8\)|8-\)|B\)|B-\)/i, "<span id='cool" + plugin.settings["smileySet"] + "'></span>"); text = text.replace(/&lt;3/i, "<span id='love" + plugin.settings["smileySet"] + "'></span>"); } var pattern = /(https?:\/\/|www\.)((([a-z\d]([a-z\d-]*[a-z\d])*)\.)+[a-z]{2,}|((\d{1,3}\.){3}\d{1,3}))(\:\d+)?(\/[-a-z\d%_.~+]*)*(\?[;&a-z\d%_.~+=-]*)?(\#[-a-z\d_]*)?/gi; var matches = text.match(pattern); if (matches == null) return(text); for (var i = 0; i < matches.length; i++) { var replace = new RegExp(matches[i]); if (!matches[i].match(/http:\/\//)) var url = "http://" + matches[i]; else var url = matches[i]; text = text.replace(replace, "<a href='" + url + "' target='_blank'>" + matches[i] + "</a>"); } return(text); } theWebUI.showChat = function() { plugin.active = true; theDialogManager.hide("stg"); theDialogManager.toggle("tchat"); $("#chatMessage").focus(); $("#chatarea")[0].scrollTop = $("#chatarea")[0].scrollHeight; } plugin.getChat = function() { if (plugin.msgTimeout) { window.clearTimeout(plugin.msgTimeout); plugin.msgTimeout = null; } theWebUI.request("?action=getchat", [plugin.updateChat,plugin], true); } plugin.updateChat = function(data) { if (data.error) log("Chat plugin: " + data.error); else if (data.chat != plugin.currentChat) return(false); else { var s = ""; for (var i = 0; i < data.lines.length; i++) { var dateTime = new Date(parseInt(data.lines[i].dt) + plugin.timeFix); var displayDT = ""; for (var j = 0; j < plugin.settings["format"].length; j++) { switch (plugin.settings["format"].charAt(j)) { case "D": displayDT += plugin.addZero(dateTime.getDate()); break; case "M": displayDT += plugin.addZero(dateTime.getMonth() + 1); break; case "Y": displayDT += plugin.addZero(dateTime.getFullYear()); break; case "h": displayDT += plugin.addZero(dateTime.getHours()); break; case "m": displayDT += plugin.addZero(dateTime.getMinutes()); break; case "s": displayDT += plugin.addZero(dateTime.getSeconds()); break; case ".": case "-": case "/": case ":": case " ": displayDT += plugin.settings["format"].charAt(j); break; } } if (displayDT != "") s += "<i>" + displayDT + "</i> - "; s += "<strong>" + data.lines[i].user + "</strong>:<br />" + plugin.parseText(data.lines[i].msg) + "<br />"; } if (s != "") { $("#chatarea").append(s); $("#chatarea")[0].scrollTop = $("#chatarea")[0].scrollHeight; if (plugin.settings["popup"] && !plugin.active && (plugin.lastLine[plugin.currentChat] > 0 || plugin.settings["lastLine"][plugin.currentChat] == undefined || (plugin.lastLine[plugin.currentChat] + i) > plugin.settings["lastLine"][plugin.currentChat])) { theDialogManager.show("tchat"); $("#chatMessage").focus(); $("#chatarea")[0].scrollTop = $("#chatarea")[0].scrollHeight; plugin.active = true; } } plugin.lastLine[plugin.currentChat] += i; if (plugin.active) { plugin.msgTimeout = window.setTimeout(plugin.getChat, plugin.settings["aInterval"]); if (plugin.lastLine[plugin.currentChat] != plugin.settings["lastLine"][plugin.currentChat]) { plugin.settings["lastLine"][plugin.currentChat] = plugin.lastLine[plugin.currentChat]; theWebUI.request("?action=setchat", [plugin.checkSuccess,plugin], true); } } else plugin.msgTimeout = window.setTimeout(plugin.getChat, plugin.settings["iInterval"]); } } plugin.getList = function() { theWebUI.request("?action=getchatlist", [plugin.updateList,plugin], true); } plugin.updateList = function(data) { if (data.error) log("Chat plugin: " + data.error); else { var chats = 0; var options = ""; var newLines = new Array(); for (key in data.chatList) { if (data.chatList[key].newChat) newLines.push(key); var addClass = ""; if (data.chatList[key].newChat && data.chatList[key].disabled) addClass = " class='newchat nopm'"; else if (data.chatList[key].newChat) addClass = " class='newchat'"; else if (data.chatList[key].disabled) addClass = " class='nopm'"; chats++; options += "<option value='" + key + "'" + addClass + (key == plugin.currentChat ? " selected='selected'" : "") + ">" + (key == "main_chat" ? theUILang.chatEverybody : key) + "</option>"; } $("#chatselect").html(options); $("#chatselect").removeAttr("style"); if (chats > 20) $("#chatselect").attr("style", "width='80px;'"); if (!plugin.active && newLines.length > 0) { plugin.currentChat = newLines[0]; plugin.lastLine[newLines[0]] = 0; $("#chatarea").html(""); $("#chatselect option:selected").removeAttr("selected"); $("#chatselect option[value='" + newLines[0] + "']").removeClass("newchat").attr("selected", "selected"); } plugin.listTimeout = window.setTimeout(plugin.getList, plugin.listInterval); } } theWebUI.sendChat = function() { if ($("#chatMessage").val() == "") return(false); theWebUI.request("?action=sendchat", [plugin.checkSuccess,plugin], true); $("#chatMessage").val(""); } theWebUI.clearChatConfirmed = function() { if ($("#chatarea").html() == "") return(false); $("#chatarea").html(""); theWebUI.request("?action=clearchat", [plugin.checkSuccess,plugin], true); plugin.lastLine[plugin.currentChat] = 0; } plugin.checkSuccess = function(data) { if (data.error) log("Chat plugin: " + data.error); else if (data.errors) for (var i = 0; i < data.errors.length; i++) log("Chat plugin: " + data.errors[i].error + data.errors[i].file + (data.errors[i].user ? (theUILang.chatForUser + data.errors[i].user) : "")); } rTorrentStub.prototype.getchat = function() { this.content = "action=getchat&chat=" + plugin.currentChat + "&line=" + plugin.lastLine[plugin.currentChat]; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/chat/action.php"; this.dataType = "json"; } rTorrentStub.prototype.getchatlist = function() { this.content = "action=getlist"; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/chat/action.php"; this.dataType = "json"; } rTorrentStub.prototype.sendchat = function() { this.content = "action=add&chat=" + plugin.currentChat + "&message=" + encodeURIComponent($("#chatMessage").val()); this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/chat/action.php"; this.dataType = "json"; } rTorrentStub.prototype.clearchat = function() { this.content = "action=clear&chat=" + plugin.currentChat; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/chat/action.php"; this.dataType = "json"; } theWebUI.chatPrompt = function() { var options = [ { val: theUILang.chatTemporarily, func: "$(\"#chatarea\").html(\"\")" }, { val: theUILang.chatPermanently, func: "theWebUI.clearChatConfirmed()" }, { val: theUILang.Cancel } ]; plugin.prompt(theUILang.chatClearPrompt, theUILang.chatClearPromptText, options); } plugin.onLangLoaded = function() { this.addButtonToToolbar("chat", theUILang.mnu_chat, "theWebUI.showChat()", "settings"); this.addSeparatorToToolbar("settings"); var chats = 0; var options = ""; var newLines = new Array(); plugin.lastLine = new Array(); for (key in plugin.chatList) { if (plugin.chatList[key].newChat) newLines.push(key); var addClass = ""; if (plugin.chatList[key].newChat && plugin.chatList[key].disabled) addClass = " class='newchat nopm'"; else if (plugin.chatList[key].newChat) addClass = " class='newchat'"; else if (plugin.chatList[key].disabled) addClass = " class='nopm'"; chats++; plugin.lastLine[key] = 0; options += "<option value='" + key + "'" + addClass + ">" + (key == "main_chat" ? theUILang.chatEverybody : key) + "</option>"; } if (newLines.length > 0) { options = options.replace("value='" + newLines[0] + "'", "value='" + newLines[0] + "' selected='selected'"); plugin.currentChat = newLines[0]; } else { options = options.replace("value='main_chat'", "value='main_chat' selected='selected'"); plugin.currentChat = 'main_chat'; } var chatList = ""; if (plugin.settings["pm"]) { chatList = ""+ "<div id='chatusers'>"+ "<fieldset>"+ "<legend>" + theUILang.chatList + "</legend>"+ "<div id='userlist'>"+ "<select id='chatselect' name='users' multiple='multiple'" + (chats > 20 ? " style='width='80px;'" : "") + ">"+ options+ "</select>"+ "</div>"+ "</fieldset>"+ "</div>"; } theDialogManager.make("tchat", theUILang.chat, chatList+ "<div id='chatmessages'>"+ "<fieldset>"+ "<legend>" + theUILang.chatMessages + " &#8211; <a href='javascript://void();' onclick='theWebUI.chatPrompt()'>" + theUILang.chatClear + "</a></legend>"+ "<div id='chatarea' class='smileysContainer'></div>"+ "</fieldset>"+ "<fieldset>"+ "<legend>" + theUILang.chatAdd + (plugin.settings["smileys"] ? " &#8211; <a href='javascript://void();' onclick='theDialogManager.show(\"chatSmileys\")'>" + theUILang.chatSmileys.toLowerCase() + "</a>" : "") + "</legend>"+ "<input type='text' name='chatMessage' id='chatMessage'/> <input type='button' value='" + theUILang.chatSend + "' class='Button' onclick='theWebUI.sendChat()'/>"+ "</fieldset>"+ "</div>" ); if (plugin.settings["pm"]) { $("#chatselect").change(function() { var value = $(this).val(); if (value.length != 1) { var options = [ { val: theUILang.ok } ]; plugin.prompt(theUILang.chatError, theUILang.chatListPromptText, options); return(false); } var option = $("option:selected", this); option.removeClass("newchat"); plugin.currentChat = value; $("#chatarea").html(""); if (value == "main_chat") { $("#tchat-header").text(theUILang.chat); $("#chatMessage").removeAttr("disabled"); $("#chatMessage").removeAttr("style"); $("#chatMessage").focus(); } else { if (option.attr("class") == "nopm") { $("#tchat-header").text(theUILang.chatWith + " " + value + " (" + theUILang.chatDisabled + ")"); $("#chatMessage").attr("disabled", "disabled"); $("#chatMessage").attr("style", "background-color: #D0D0D0;"); $(this).blur(); } else { $("#tchat-header").text(theUILang.chatWith + " " + value); $("#chatMessage").removeAttr("disabled"); $("#chatMessage").removeAttr("style"); $("#chatMessage").focus(); } } plugin.lastLine[value] = 0; plugin.getChat(); }); } $("#chatMessage").keydown(function(event) { if ((event.which && event.which == 13) || (event.keyCode && event.keyCode == 13)) { theWebUI.sendChat(); } }); theDialogManager.setHandler("tchat", "afterHide", function() { plugin.active = false; }); if (plugin.settings["smileys"]) { theDialogManager.make("chatSmileys", theUILang.chatSmileys, "<table class='smileysContainer'>"+ "<tr>"+ "<td><span id='frown" + plugin.settings["smileySet"] + "' title=':('></span></td>"+ "<td><span id='shocked" + plugin.settings["smileySet"] + "' title=':o'></span></td>"+ "<td><span id='wink" + plugin.settings["smileySet"] + "' title=';)'></span></td>"+ "<td><span id='angry" + plugin.settings["smileySet"] + "' title='X)'></span></td>"+ "<td><span id='straight" + plugin.settings["smileySet"] + "' title=':|'></span></td>"+ "</tr>"+ "<tr>"+ "<td><span id='slant" + plugin.settings["smileySet"] + "' title=':/'></span></td>"+ "<td><span id='grin" + plugin.settings["smileySet"] + "' title=':D'></span></td>"+ "<td><span id='tongue" + plugin.settings["smileySet"] + "' title=':P'></span></td>"+ "<td><span id='sad" + plugin.settings["smileySet"] + "' title=\":'(\"></span></td>"+ "<td><span id='wince" + plugin.settings["smileySet"] + "' title='>.<'></span></td>"+ "</tr>"+ "<tr>"+ "<td><span id='smile" + plugin.settings["smileySet"] + "' title=':)'></span></td>"+ "<td><span id='cool" + plugin.settings["smileySet"] + "' title='8)'></span></td>"+ "<td><span id='devil" + plugin.settings["smileySet"] + "' title='>:)'></span></td>"+ "<td><span id='love" + plugin.settings["smileySet"] + "' title='<3'></span></td>"+ "<td></td>"+ "</tr>"+ "</table>" ); $("table.smileysContainer tr td span").each(function() { $(this).click(function() { $("#chatMessage").val($("#chatMessage").val() + " " + this.title); }); }); theDialogManager.setHandler("chatSmileys", "afterHide", function() { $("#chatMessage").focus(); }); } if (plugin.canChangeOptions()) { this.attachPageToOptions( $("<div>").attr("id", "st_chat").html( "<fieldset>"+ "<legend>" + theUILang.chatSettings + "</legend>"+ "<div class='op50l'>"+ "<input type='checkbox' id='chat.popup' " + (plugin.settings["popup"] ? "checked='checked' " : "") + "/> <label for='chat.popup'>" + theUILang.chatPopup + "</label>"+ "</div>"+ "<div class='op50l algnright'>"+ "<label for='chat.ainterval'>" + theUILang.chatActive + "</label><input type='text' id='chat.ainterval' class='Textbox' size='1' value='" + (plugin.settings["aInterval"] / 1000) + "' />s"+ "</div>"+ "<div class='op50l'>"+ "<input type='checkbox' id='chat.pm' " + (plugin.settings["pm"] ? "checked='checked' " : "") + "/> <label for='chat.pm'>" + theUILang.chatPMs + "*</label>"+ "</div>"+ "<div class='op50l algnright'>"+ "<label for='chat.iinterval'>" + theUILang.chatInactive + "</label><input type='text' id='chat.iinterval' class='Textbox' size='1' value='" + (plugin.settings["iInterval"] / 1000) + "' />s"+ "</div>"+ "<div class='op100l'>"+ "<label for='chat.format'>" + theUILang.chatFormat + "</label><input type='text' id='chat.format' class='Textbox' size='10' value='" + plugin.settings["format"] + "' />"+ "</div>"+ "<div class='op100l'>"+ theUILang.chatFormatHelp+ "</div>"+ "</fieldset>"+ "<fieldset>"+ "<legend>" + theUILang.chatSmileys + "</legend>"+ "<div class='op50l'>"+ "<input type='checkbox' id='chat.smileys' " + (plugin.settings["smileys"] ? "checked='checked' " : "") + "/><label for='chat.smileys'>" + theUILang.chatShowSmileys + "*</label>"+ "</div>"+ "<div class='op50l algnright'>"+ "<label for='chat.smileyset'>" + theUILang.chatSmileySet + "</label><select id='chat.smileyset'>"+ "<option value='1'" + (plugin.settings["smileySet"] == 1 ? " selected='selected'" : "") + ">" + theUILang.chatSmileyRound + "</option>"+ "<option value='2'" + (plugin.settings["smileySet"] == 2 ? " selected='selected'" : "") + ">" + theUILang.chatSmileySquare + "</option>"+ "</select>"+ "</div>"+ "</fieldset>"+ "<div>"+ "&ensp;* " + theUILang.chatRefresh+ "</div>" )[0], theUILang.chat); theDialogManager.setHandler("stg", "beforeShow", function() { theDialogManager.hide("tchat"); if (plugin.msgTimeout) { window.clearTimeout(plugin.msgTimeout); plugin.msgTimeout = null; } }); theDialogManager.setHandler("stg", "afterHide", function() { plugin.getChat(); }); } theDialogManager.make("chatPrompt", "", "<div id='chatPrompt-content' class='content'></div>"+ "<div id='chatPrompt-buttons' class='aright buttons-list'></div>", true); if (plugin.settings["pm"]) plugin.listTimeout = window.setTimeout(plugin.getList, plugin.listInterval); plugin.refreshOnUpdate = false; plugin.getChat(); } plugin.onRemove = function() { theDialogManager.hide("tchat"); this.removeSeparatorFromToolbar("settings"); this.removeButtonFromToolbar("chat"); if (plugin.canChangeOptions()) this.removePageFromOptions("st_chat"); if (plugin.msgTimeout) { window.clearTimeout(plugin.msgTimeout); plugin.msgTimeout = null; } if (plugin.listTimeout) { window.clearTimeout(plugin.listTimeout); plugin.listTimeout = null; } plugin.active = false; } rTorrentStub.prototype.setchat = function() { this.content = "action=settings"; this.content += "&popup=" + ($($$("chat.popup")).attr("checked") ? 1 : 0); this.content += "&pm=" + ($($$("chat.pm")).attr("checked") ? 1 : 0); this.content += "&aInterval=" + $($$("chat.ainterval")).val(); this.content += "&iInterval=" + $($$("chat.iinterval")).val(); this.content += "&smileys=" + ($($$("chat.smileys")).attr("checked") ? 1 : 0); this.content += "&smileySet=" + $($$("chat.smileyset")).val(); this.content += "&format=" + $($$("chat.format")).val(); for (var chat in plugin.settings["lastLine"]) this.content += "&lastLine[" + chat + "]=" + plugin.settings["lastLine"][chat]; this.contentType = "application/x-www-form-urlencoded"; this.mountPoint = "plugins/chat/action.php"; this.dataType = "json"; } plugin.updateSettings = function(data) { if (data.error) { log("Chat plugin: " + data.error); if (data.popup) { theDialogManager.show("stg"); var options = [ { val: theUILang.ok } ]; plugin.prompt(theUILang.chatError, data.error, options); } } else { plugin.settings = data; if (plugin.refreshOnUpdate) theWebUI.reload(); } } plugin.prompt = function(title, message, options) { var buttons = ""; for (var i = 0; i < options.length; i++) buttons += "<input type='button' class='Button' value='" + options[i].val + "' onclick='" + (options[i].func != undefined ? options[i].func + ";" : "") + "theDialogManager.hide(\"chatPrompt\"); return(false);' />"; $("#chatPrompt-header").html(title); $("#chatPrompt-content").html(message); $("#chatPrompt-buttons").html(buttons); theDialogManager.show("chatPrompt"); } plugin.setSettings = theWebUI.setSettings; theWebUI.setSettings = function() { plugin.setSettings.call(this); var update = false; if ($($$("chat.popup")).attr("checked") && !plugin.settings["popup"] || !$($$("chat.popup")).attr("checked") && plugin.settings["popup"]) update = true; if ($($$("chat.pm")).attr("checked") && !plugin.settings["pm"] || !$($$("chat.pm")).attr("checked") && plugin.settings["pm"]) { plugin.refreshOnUpdate = true; update = true; } if ($($("chat.ainterval")).val() != plugin.settings["aInterval"]) update = true; if ($($("chat.iinterval")).val() != plugin.settings["iInterval"]) update = true; if ($($$("chat.format")).val() != plugin.settings["format"]) update = true; if ($($$("chat.smileys")).attr("checked") && !plugin.settings["smileys"] || !$($$("chat.smileys")).attr("checked") && plugin.settings["smileys"]) { plugin.refreshOnUpdate = true; update = true; } if ($($$("chat.smileyset")).val() != plugin.settings["smileySet"]) update = true; if (update) theWebUI.request("?action=setchat", [plugin.updateSettings,plugin], true); } })();::::::::::::::
2015-02-23 19:04:09 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/ModMobSupport.json
2015-02-23 19:04:09 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/NBTStripper.json
2015-02-23 11:11:19 [FINE] [ForgeModLoader] Identified an FMLMod type mod com.github.AbrarSyed.secretroomsmod.common.SecretRooms
2015-02-23 18:19:05 [INFOS] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
git clone https://gist.github.com/9bdc50271afc49d33e35.git ./map
20:38:02 [INFO] Loaded plugin ServerListPlus version 3.3.2 by Minecrell <https://github.com/Minecrell>
20:38:03 [INFO] Enabled plugin ServerListPlus version 3.3.2 by Minecrell <https://github.com/Minecrell>
https://github.com/BlueVertigo/indigoskyline
        classpath 'com.github.jtakakura:gradle-robovm-plugin:0.0.10'
2015-02-23 16:12:34 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
https://github.com/xavierxzj/SpartanWarsTool#::::::::::::::
https://github.com/Tudi/NetworkImageProcessing
2015-02-22 14:53:40 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
   downloading stable branch from github
2015-02-23 09:08:31 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/src/main/resources/assets/morph/mod/ModMobSupport.json
( Please submit this report to https://github.com/TechnicPack/TechnicLauncher/issues )
androick 	5.35048d7 	A python tool to help in forensics analysis on android. 	https://github.com/Flo354/Androick
android-udev-rules 	135.d5aeca6 	Android udev rules. 	https://github.com/bbqlinux/android-udev-rules
arpwner 	26.f300fdf 	GUI-based python tool for arp posioning and dns poisoning attacks. 	https://github.com/ntrippar/ARPwner
azazel 	10.401e3aa 	A userland rootkit based off of the original LD_PRELOAD technique from Jynx rootkit. 	https://github.com/chokepoint/azazel
backcookie 	44.cbf5b8b 	Small backdoor using cookie. 	https://github.com/mrjopino/backcookie
backdoor-factory 	118.6237b9f 	Patch win32/64 binaries with shellcode. 	https://github.com/secretsquirrel/the-backdoor-factory
backfuzz 	36.8e54ed6 	A network protocol fuzzing toolkit. 	https://github.com/localh0t/backfuzz
bamf-framework 	35.30d2b4b 	A modular framework designed to be a platform to launch attacks against botnets. 	https://github.com/bwall/BAMF
bbqsql 	1.2 	SQL injection exploitation tool. 	https://github.com/neohapsis/bbqsql
bdfproxy 	58.79edcb2 	Patch Binaries via MITM: BackdoorFactory + mitmProxy 	https://github.com/secretsquirrel/BDFProxy
beeswarm 	1154.29273e6 	Honeypot deployment made easy http://www.beeswarm-ids.org/ 	https://github.com/honeynet/beeswarm/
beleth 	36.0963699 	A Multi-threaded Dictionary based SSH cracker. 	https://github.com/chokepoint/Beleth
binwally 	4.0aabd8b 	Binary and Directory tree comparison tool using the Fuzzy Hashing concept (ssdeep). 	https://github.com/bmaia/binwally
birp 	60.1d7c49f 	A tool that will assist in the security assessment of mainframe applications served over TN3270. 	https://github.com/sensepost/birp
bluebox-ng 	82.22fd93e 	A GPL VoIP/UC vulnerability scanner. 	https://github.com/jesusprubio/bluebox-ng
bowcaster 	0.1 	This framework, implemented in Python, is intended to aid those developing exploits by providing useful set of tools and modules, such as payloads, encoders, connect-back servers, etc. Currently the framework is focused on the MIPS CPU architecture, but the design is intended to be modular enough to support arbitrary architectures. 	https://github.com/zcutlip/bowcaster
bulk-extractor 	1.5.5 	Bulk Email and URL extraction tool. 	https://github.com/simsong/bulk_extractor
buttinsky 	138.1a2a1b2 	Provide an open source framework for automated botnet monitoring. 	https://github.com/buttinsky/buttinsky
bytecode-viewer 	79.bde746b 	A Java 8/Android APK Reverse Engineering Suite. 	https://github.com/Konloch/bytecode-viewer
cangibrina 	87.fcbc952 	Dashboard Finder. 	https://github.com/fnk0c/cangibrina
cansina 	109.be98c12 	A python-based Web Content Discovery Tool. 	https://github.com/deibit/cansina
cdpsnarf 	0.1.6 	Cisco discovery protocol sniffer. 	https://github.com/Zapotek/cdpsnarf
cecster 	5.15544cb 	A tool to perform security testing against the HDMI CEC (Consumer Electronics Control) and HEC (HDMI Ethernet Channel) protocols 	https://github.com/nccgroup/CECster
centry 	72.6de2868 	Cold boot & DMA protection 	https://github.com/0xPoly/Centry
chapcrack 	17.ae2827f 	A tool for parsing and decrypting MS-CHAPv2 network handshakes. 	https://github.com/moxie0/chapcrack
cheetah 	19.a937193 	Complete penetration testing suite (port scanning, brute force attacks, services discovery, common vulnerabilities searching, reporting etc.) 	https://github.com/bl4de/Cheetah
chromefreak 	22.336e323 	A Cross-Platform Forensic Framework for Google Chrome 	http://osandamalith.github.io/ChromeFreak/
ciphertest 	14.7f49ea7 	A better SSL cipher checker using gnutls. 	https://github.com/OpenSecurityResearch/ciphertest
ciphr 	105.db79691 	A CLI tool for encoding, decoding, encryption, decryption, and hashing streams of data. 	https://github.com/frohoff/ciphr
cisco-snmp-enumeration 	2.e9b1f93 	Automated Cisco SNMP Enumeration, Brute Force, Configuration Download and Password Cracking. 	https://github.com/nccgroup/cisco-snmp-enumeration
cisco-snmp-slap 	5.daf0589 	IP address spoofing tool in order to bypass an ACL protecting an SNMP service on Cisco IOS devices. 	https://github.com/nccgroup/cisco-snmp-slap
cisco5crack 	2.c4b228c 	Crypt and decrypt the cisco enable 5 passwords. 	https://github.com/madrisan/cisco7crack
cisco7crack 	2.f1c21dd 	Crypt and decrypt the cisco enable 7 passwords. 	https://github.com/madrisan/cisco7crack
climber 	23.f614304 	Check UNIX/Linux systems for privilege escalation. 	https://github.com/raffaele-forte/climber
clusterd 	129.0f04a49 	Automates the fingerprinting, reconnaissance, and exploitation phases of an application server attack. 	https://github.com/hatRiot/clusterd
crackhor 	2.ae7d83f 	A Password cracking utility. 	https://github.com/CoalfireLabs/crackHOR
crackle 	39.3e93196 	Crack and decrypt BLE encryption 	https://github.com/mikeryan/crackle/
crackserver 	33.e5763ab 	An XMLRPC server for password cracking. 	https://github.com/averagesecurityguy/crack
create_ap 	117.3460580 	This script creates a NATed or Bridged WiFi Access Point. 	https://github.com/oblique/create_ap
creds 	17.1ec8297 	Harvest FTP/POP/IMAP/HTTP/IRC credentials along with interesting data from each of the protocols. 	https://github.com/DanMcInerney/creds.py
creepy 	137.9f60449 	A geolocation information gatherer. Offers geolocation information gathering through social networking platforms. 	http://github.com/ilektrojohn/creepy.git
crowbar 	39.839c62b 	A brute forcing tool that can be used during penetration tests. It is developed to support protocols that are not currently supported by thc-hydra and other popular brute forcing tools. 	https://github.com/galkan/crowbar
crypthook 	17.0728cd1 	TCP/UDP symmetric encryption tunnel wrapper. 	https://github.com/chokepoint/CryptHook
damm 	28.9af34b4 	Differential Analysis of Malware in Memory. 	https://github.com/504ensicsLabs/DAMM
darkmysqli 	1.6 	Multi-Purpose MySQL Injection Tool 	https://github.com/BlackArch/darkmysqli
dbd 	1.50 	A Netcat-clone, designed to be portable and offer strong encryption. It runs on Unix-like operating systems and on Microsoft Win32. 	https://github.com/gitdurandal/dbd
depdep 	2.0 	A merciless sentinel which will seek sensitive files containing critical info leaking through your network. 	https://github.com/galkan/depdep
detect-it-easy 	32.bfbeac1 	A program for determining types of files. 	https://github.com/horsicq/Detect-It-Easy
device-pharmer 	35.c1d449e 	Opens 1K+ IPs or Shodan search results and attempts to login. 	https://github.com/DanMcInerney/device-pharmer
dhcpig 	69.cc4109a 	Enumerates hosts, subdomains, and emails from a given domain using google 	https://github.com/kamorin/DHCPig
dirs3arch 	130.8f37c7d 	HTTP(S) directory/file brute forcer. 	https://github.com/maurosoria/dirs3arch
dns-reverse-proxy 	11.ef9d062 	A reverse DNS proxy written in Go. 	https://github.com/StalkR/dns-reverse-proxy
dns-spoof 	12.3918a10 	Yet another DNS spoof utility. 	https://github.com/maurotfilho/dns-spoof
dnsbrute 	2.b1dc84a 	Multi-theaded DNS bruteforcing, average speed 80 lookups/second with 40 threads. 	https://github.com/d4rkcat/dnsbrute
dnsrecon 	0.8.9 	Python script for enumeration of hosts, subdomains and emails from a given domain using google. 	https://github.com/darkoperator/dnsrecon
doona 	127.06cd178 	A fork of the Bruteforce Exploit Detector Tool (BED). 	https://github.com/wireghoul/doona
dpscan 	0.1 	Drupal Vulnerabilty Scanner. 	https://github.com/insaneisnotfree/Blue-Sky-Information-Security
dscanner 	715.63ba816 	Swiss-army knife for D source code. 	https://github.com/Hackerpilot/Dscanner
dsd 	84.60807e0 	Digital Speech Decoder 	https://github.com/szechyjs/dsd
dumb0 	19.1493e74 	A simple tool to dump users in popular forums and CMS. 	https://github.com/0verl0ad/Dumb0
dump1090 	386.bff92c4 	A simple Mode S decoder for RTLSDR devices. 	https://github.com/MalcolmRobb/dump1090
dvcs-ripper 	12.b4dc17a 	Rip web accessible (distributed) version control systems: SVN/GIT/... 	https://github.com/kost/dvcs-ripper
easy-creds 	3.9 	A bash script that leverages ettercap and other tools to obtain credentials. 	https://github.com/brav0hax/easy-creds
easyda 	7.0867f9b 	Easy Windows Domain Access Script. 	https://github.com/nccgroup/easyda
elite-proxy-finder 	44.29143ad 	Finds public elite anonymity proxies and concurrently tests them. 	https://github.com/DanMcInerney/elite-proxy-finder
enum-shares 	7.97cba5a 	Tool that enumerates shared folders across the network and under a custom user account. 	https://github.com/dejanlevaja/enum_shares
ettercap 	0.8.1 	A network sniffer/interceptor/logger for ethernet LANs - console 	http://ettercap.github.com/ettercap/
extracthosts 	14.ec8b89c 	Extracts hosts (IP/Hostnames) from files. 	https://github.com/bwall/ExtractHosts
eyewitness 	308.db7cb97 	Designed to take screenshots of websites, provide some server header info, and identify default credentials if possible. 	https://github.com/ChrisTruncer/EyeWitness
facebot 	23.57f6025 	A facebook profile and reconnaissance system. 	https://github.com/pun1sh3r/facebot
facebrute 	7.ece355b 	This script tries to guess passwords for a given facebook account using a list of passwords (dictionary). 	https://github.com/emerinohdz/FaceBrute
fakedns 	36.90bd7e1 	A regular-expression based python MITM DNS server with correct DNS request passthrough and "Not Found" responses. 	https://github.com/Crypt0s/FakeDns
fakenetbios 	7.b83701e 	A family of tools designed to simulate Windows hosts (NetBIOS) on a LAN. 	https://github.com/mubix/FakeNetBIOS
fang 	16.b5cb86d 	A multi service threaded MD5 cracker. 	https://github.com/evilsocket/fang
fbht 	53.9e515ef 	A Facebook Hacking Tool 	https://github.com/chinoogawa/fbht-linux
fbid 	11.b8106f8 	Show info about the author by facebook photo url. 	https://github.com/guelfoweb/fbid
fernmelder 	6.c6d4ebe 	Asynchronous mass DNS scanner. 	https://github.com/stealth/fernmelder
filibuster 	161.37b7f9c 	A Egress filter mapping application with additional functionality. 	https://github.com/subinacls/Filibuster
firstexecution 	6.a275793 	A Collection of different ways to execute code outside of the expected entry points. 	https://github.com/nccgroup/firstexecution
flowinspect 	94.01c8921 	A network traffic inspection tool. 	https://github.com/7h3rAm/flowinspect
fpdns 	20130404 	Program that remotely determines DNS server versions. 	https://github.com/kirei/fpdns
fraud-bridge 	10.775c563 	ICMP and DNS tunneling via IPv4 and IPv6. 	https://github.com/stealth/fraud-bridge
frisbeelite 	1.2 	A GUI-based USB device fuzzer. 	https://github.com/nccgroup/FrisbeeLite
fuzzap 	14.f13932c 	A python script for obfuscating wireless networks. 	https://github.com/lostincynicism/FuzzAP
ghost-py 	0.1b3 	Webkit based webclient (relies on PyQT). 	http://jeanphix.github.com/Ghost.py/
goldeneye 	16.7a38fe9 	A HTTP DoS test tool. Attack Vector exploited: HTTP Keep Alive + NoCache. 	https://github.com/jseidl/GoldenEye
golismero 	2.0 	Opensource web security testing framework. 	https://github.com/golismero/golismero
googlesub 	1.2 	A python script to find domains by using google dorks. 	https://github.com/zombiesam/googlesub
hasere 	1.0 	Discover the vhosts using google and bing. 	https://github.com/galkan/hasere
hasher 	33.17592ed 	A tool that allows you to quickly hash plaintext strings, or compare hashed values with a plaintext locally. 	https://github.com/ChrisTruncer/Hasher
hashfind 	8.e9a9a14 	A tool to search files for matching password hash types and other interesting data. 	https://github.com/rurapenthe/hashfind
hashid 	315.3f9cddf 	Software to identify the different types of hashes used to encrypt data. 	https://github.com/psypanda/hashID
hashpump 	34.0b3c286 	A tool to exploit the hash length extension attack in various hashing algorithms. 	https://github.com/bwall/HashPump
hashtag 	0.41 	A python script written to parse and identify password hashes. 	https://github.com/SmeegeSec/HashTag
haystack 	1035.ac2ffa4 	A Python framework for finding C structures from process memory - heap analysis - Memory structures forensics. 	https://github.com/trolldbois/python-haystack
hdcp-genkey 	18.e8d342d 	Generate HDCP source and sink keys from the leaked master key. 	https://github.com/rjw57/hdcp-genkey
hdmi-sniff 	5.f7fbc0e 	HDMI DDC (I2C) inspection tool. It is designed to demonstrate just how easy it is to recover HDCP crypto keys from HDMI devices. 	https://github.com/ApertureLabsLtd/hdmi-sniff
honeyd 	1.6.7 	A small daemon that creates virtual hosts on a network. 	https://github.com/DataSoft/Honeyd/
hpfeeds 	138.249b2f7 	Honeynet Project generic authenticated datafeed protocol. 	https://github.com/rep/hpfeeds
hqlmap 	35.081395e 	A tool to exploit HQL Injections. 	https://github.com/PaulSec/HQLmap
htrosbif 	134.9dc3f86 	Active HTTP server fingerprinting and recon tool. 	https://github.com/lkarsten/htrosbif
htshells 	760b5e9 	Self contained web shells and other attacks via .htaccess files. 	https://github.com/wireghoul/htshells
hulk 	11.a9b9ad4 	A webserver DoS tool (Http Unbearable Load King) ported to Go with some additional features. 	https://github.com/grafov/hulk
ibrute 	12.3a6a11e 	An AppleID password bruteforce tool. It uses Find My Iphone service API, where bruteforce protection was not implemented. 	https://github.com/hackappcom/ibrute/
imagejs 	48.1faf262 	Small tool to package javascript into a valid image file. 	https://github.com/jklmnn/imagejs
interrogate 	0.0.4 	A proof-of-concept tool for identification of cryptographic keys in binary material (regardless of target operating system), first and foremost for memory dump analysis and forensic usage. 	https://github.com/carmaa/interrogate
intersect 	2.5 	Post-exploitation framework 	https://github.com/ohdae/Intersect.5
iosforensic 	1.0 	iOS forensic tool https://www.owasp.org/index.php/Projects/OWASP_iOSForensic 	https://github.com/Flo354/iOSForensic
ip-https-tools 	5.b22e2b3 	Tools for the IP over HTTPS (IP-HTTPS) Tunneling Protocol. 	https://github.com/takeshixx/ip-https-tools
ircsnapshot 	93.9ba3c6c 	Tool to gather information from IRC servers. 	https://github.com/bwall/ircsnapshot
jadx 	0.5.4 	Dex to Java command line and GUI decompiler tool that produces Java source code from Android Dex and APK files. 	https://github.com/skylot/jadx
jboss-autopwn 	1.3bc2d29 	A JBoss script for obtaining remote shell access. 	https://github.com/SpiderLabs/jboss-autopwn
jigsaw 	1.3 	A simple ruby script for enumerating information about a company's employees. It is useful for Social Engineering or Email Phishing. 	https://github.com/pentestgeek/jigsaw
js-beautify 	1.5.4 	This little beautifier will reformat and reindent bookmarklets, ugly JavaScript, unpack scripts packed by Dean Edward?s popular packer, as well as deobfuscate scripts processed by javascriptobfuscator.com. 	https://github.com/einars/js-beautify
junkie 	1338.baa4524 	A modular packet sniffer and analyzer. 	https://github.com/securactive/junkie
jwscan 	6.b0306f0 	Scanner for Jar to EXE wrapper like Launch4j, Exe4j, JSmooth, Jar2Exe. 	https://github.com/katjahahn/JWScan
kalibrate-rtl 	11.aae11c8 	Fork of http://thre.at/kalibrate/ for use with rtl-sdr devices. 	https://github.com/steve-m/kalibrate-rtl
kautilya 	0.5.5 	Pwnage with Human Interface Devices using Teensy++2.0 and Teensy 3.0 devices. 	https://github.com/samratashok/Kautilya/releases
kippo 	0.9 	A medium interaction SSH honeypot designed to log brute force attacks and most importantly, the entire shell interaction by the attacker. 	https://github.com/desaster/kippo
knock 	27.b1acf04 	Subdomain scanner. 	https://github.com/guelfoweb/knock
laf 	12.7a456b3 	Login Area Finder: scans host/s for login panels. 	https://github.com/takeshixx/laf
lanmap2 	124.4f8afed 	Passive network mapping tool 	http://github.com/rflynn/lanmap2
lans 	164.36797ad 	A Multithreaded asynchronous packet parsing/injecting arp spoofer. 	https://github.com/DanMcInerney/LANs.py
lbmap 	145.93e6b71 	Proof of concept scripts for advanced web application fingerprinting, presented at OWASP AppSecAsia 2012. 	https://github.com/wireghoul/lbmap
ldap-brute 	21.acc06e3 	A semi fast tool to bruteforce values of LDAP injections over HTTP. 	https://github.com/droope/ldap-brute
leroy-jenkins 	0.r3.bdc3965 	A python tool that will allow remote execution of commands on a Jenkins server and its nodes. 	https://github.com/captainhooligan/Leroy-Jenkins
levye 	84.5406303 	A brute force tool which is support sshkey, vnckey, rdp, openvpn. 	https://github.com/galkan/levye
liffy 	63.238ce6d 	A Local File Inclusion Exploitation tool. 	https://github.com/rotlogix/liffy
linenum 	18.b4c2541 	Scripted Local Linux Enumeration & Privilege Escalation Checks 	https://github.com/rebootuser/LinEnum
linset 	9.8746b1f 	Evil Twin Attack Bash script - An automated WPA/WPA2 hacker. 	https://github.com/vk496/linset
linux-exploit-suggester 	32.9db2f5a 	A Perl script that tries to suggest exploits based OS version number. 	https://github.com/PenturaLabs/Linux_Exploit_Suggester
lisa.py 	28.5b3156b 	An Exploit Dev Swiss Army Knife. 	https://github.com/ant4g0nist/lisa.py
lte-cell-scanner 	57.5fa3df8 	LTE SDR cell scanner optimized to work with very low performance RF front ends (8bit A/D, 20dB noise figure). 	https://github.com/Evrytania/LTE-Cell-Scanner
luyten 	0.4.4 	An Open Source Java Decompiler Gui for Procyon. 	https://github.com/deathmarine/Luyten
maclookup 	0.3 	Lookup MAC addresses in the IEEE MA-L/OUI public listing. 	https://github.com/paraxor/maclookup
maltrieve 	175.8c68c7e 	Originated as a fork of mwcrawler. It retrieves malware directly from the sources as listed at a number of sites. 	https://github.com/technoskald/maltrieve
marc4dasm 	6.f11860f 	This python-based tool is a disassembler for the Atmel MARC4 (a 4 bit Harvard micro). 	https://github.com/ApertureLabsLtd/marc4dasm
masscan 	391.a60cc70 	TCP port scanner, spews SYN packets asynchronously, scanning entire Internet in under 5 minutes. 	https://github.com/robertdavidgraham/masscan
meterssh 	10.ebb6f4e 	A way to take shellcode, inject it into memory then tunnel whatever port you want to over SSH to mask any type of communications as a normal SSH connection. 	https://github.com/trustedsec/meterssh
mikrotik-npk 	7.88d7e4b 	Python tools for manipulating Mikrotik NPK format. 	https://github.com/kost/mikrotik-npk
mitmer 	22.b01c7fe 	A man-in-the-middle and phishing attack tool that steals the victim's credentials of some web services like Facebook. 	https://github.com/husam212/MITMer
mitmf 	186.3f6bbb8 	A Framework for Man-In-The-Middle attacks written in Python. 	https://github.com/byt3bl33d3r/MITMf
mkbrutus 	1.0.2 	Password bruteforcer for MikroTik devices or boxes running RouterOS. 	http://mkbrutusproject.github.io/MKBRUTUS/
moloch 	0.9.2 	An open source large scale IPv4 full PCAP capturing, indexing and database system. 	https://github.com/aol/moloch
mptcp-abuse 	6.b0eeb27 	A collection of tools and resources to explore MPTCP on your network. Initially released at Black Hat USA 2014. 	https://github.com/Neohapsis/mptcp-abuse
multitun 	43.9804513 	Tunnel arbitrary traffic through an innocuous WebSocket. 	https://github.com/covertcodes/multitun
mwebfp 	16.a800b98 	Mass Web Fingerprinter. 	https://github.com/falcon-lnhg/mwebfp
mysql2sqlite 	14.e5b2c31 	Converts a mysqldump file into a Sqlite 3 compatible file. 	https://gist.github.com/esperlu/943776
nacker 	23.b67bb39 	A tool to circumvent 802.1x Network Access Control on a wired LAN. 	https://github.com/carmaa/nacker
neighbor-cache-fingerprinter 	83.f1e596f 	An ARP based Operating System version scanner. 	https://github.com/PherricOxide/Neighbor-Cache-Fingerprinter
netcommander 	1.3 	An easy-to-use arp spoofing tool. 	https://github.com/evilsocket/netcommander
network-app-stress-tester 	19.df75391 	Network Application Stress Testing Yammer. 	https://github.com/PherricOxide/Network-App-Stress-Tester
nfspy 	1.0 	A Python library for automating the falsification of NFS credentials when mounting an NFS share. 	https://github.com/bonsaiviking/NfSpy
nimbostratus 	54.c7c206f 	Tools for fingerprintinging and exploiting Amazon cloud infrastructures. 	https://github.com/andresriancho/nimbostratus
nomorexor 	0.1 	Tool to help guess a files 256 byte XOR key by using frequency analysis 	https://github.com/hiddenillusion/NoMoreXOR
onionshare 	440.e78e21a 	Securely and anonymously share a file of any size. 	https://github.com/micahflee/onionshare/
opensvp 	64.56b2b8f 	A security tool implementing "attacks" to be able to the resistance of firewall to protocol level attack. 	https://github.com/regit/opensvp
osueta 	65.90323e2 	A simple Python script to exploit the OpenSSH User Enumeration Timing Attack. 	https://github.com/c0r3dump3d/osueta
owasp-bywaf 	26.e730d1b 	A web application penetration testing framework (WAPTF). 	https://github.com/depasonico/OWASP-ByWaf
packetsender 	7.4a9afa6 	An open source utility to allow sending and receiving TCP and UDP packets. 	https://github.com/dannagle/PacketSender
pacumen 	1.92a0884 	Packet Acumen - Analyse encrypted network traffic and more (side-channel attacks). 	https://github.com/bniemczyk/pacumen
panhunt 	26.cd58866 	Searches for credit card numbers (PANs) in directories. 	https://github.com/Dionach/PANhunt
panoptic 	179.770bc70 	A tool that automates the process of search and retrieval of content for common log and config files through LFI vulnerability. 	https://github.com/lightos/Panoptic
parsero 	56.fc5f7ec 	A robots.txt audit tool. 	https://github.com/behindthefirewalls/Parsero
passcracking 	20131214 	A little python script for sending hashes to passcracking.com and milw0rm 	http://github.com/jensp/passcracking
passhunt 	5.332f374 	Search drives for documents containing passwords. 	https://github.com/Dionach/PassHunt
passivedns 	1.1.3 	A network sniffer that logs all DNS server replies for use in a passive DNS setup. 	https://github.com/gamelinux/passivedns
pastenum 	0.4.1 	Search Pastebins for content, fork from nullthreat corelan pastenum2 	http://github.com/shadowbq/pastenum
patator 	86.5c3cb0a 	A multi-purpose bruteforcer. 	https://github.com/lanjelot/patator
pcredz 	29.05ae40f 	A tool that extracts credit card numbers, NTLM(DCE-RPC, HTTP, SQL, LDAP, etc), Kerberos (AS-REQ Pre-Auth etype 23), HTTP Basic, SNMP, POP, SMTP, FTP, IMAP, and more from a pcap file or from a live interface. 	https://github.com/lgandx/PCredz
peda 	51.327db44 	Python Exploit Development Assistance for GDB. 	https://github.com/longld/peda
peframe 	81.0c4a0d5 	Tool to perform static analysis on (portable executable) malware. 	https://github.com/guelfoweb/peframe
pemcrack 	10.34b0f85 	Cracks SSL PEM files that hold encrypted private keys. Brute forces or dictionary cracks. 	https://github.com/robertdavidgraham/pemcrack
pgdbf 	94.baa1d95 	Convert XBase / FoxPro databases to PostgreSQL 	https://github.com/kstrauser/pgdbf
phemail 	27.7ae21f2 	A python open source phishing email tool that automates the process of sending phishing emails as part of a social engineering test. 	https://github.com/Dionach/PhEmail
php-rfi-payload-decoder 	30.bd42caa 	Decode and analyze RFI payloads developed in PHP. 	https://github.com/bwall/PHP-RFI-Payload-Decoder
phpstress 	5.f987a7e 	A PHP denial of service / stress test for Web Servers running PHP-FPM or PHP-CGI. 	https://github.com/nightlionsecurity/phpstress
pip3line 	30.eae2260 	The Swiss army knife of byte manipulation. 	https://github.com/nccgroup/pip3line
plown 	13.ccf998c 	A security scanner for Plone CMS. 	https://github.com/unweb/plown
pompem 	77.4e77ffd 	A python exploit tool finder. 	https://github.com/rfunix/Pompem
powersploit 	247.8b6f759 	A PowerShell Post-Exploitation Framework. 	https://github.com/mattifestation/PowerSploit
praeda 	37.093d1c0 	An automated data/information harvesting tool designed to gather critical information from various embedded devices. 	https://github.com/percx/Praeda
prometheus 	175.497b2ce 	A Firewall analyzer written in ruby 	https://github.com/averagesecurityguy/prometheus
proxychains-ng 	4.8.1 	A hook preloader that allows to redirect TCP traffic of existing dynamically linked programs through one or more SOCKS or HTTP proxies 	https://github.com/rofl0r/proxychains
pshitt 	21.85cde65 	A lightweight fake SSH server designed to collect authentication data sent by intruders. 	https://github.com/regit/pshitt
pwntools 	2.1.3 	The CTF framework used by #Gallopsled in every CTF. 	https://github.com/Gallopsled/pwntools
pyexfil 	36.978ec43 	A couple of beta stage tools for data exfiltration. 	https://github.com/ytisf/PyExfil
pyfiscan 	1169.6dc0110 	Free web-application vulnerability and version scanner. 	https://github.com/fgeek/pyfiscan
python2-binaryornot 	0.3.0 	Ultra-lightweight pure Python package to check if a file is binary or text. 	https://github.com/audreyr/binaryornot
python2-yara 	3.3.0 	A malware identification and classification tool. 	https://github.com/plusvic/yara
redpoint 	109.0405b90 	Digital Bond's ICS Enumeration Tools. 	https://github.com/digitalbond/Redpoint3
regeorg 	26.22fb8a9 	The successor to reDuh, pwn a bastion webserver and create SOCKS proxies through the DMZ. Pivot and pwn. 	https://github.com/sensepost/reGeorg
responder 	117.6c7a5dd 	A LLMNR and NBT-NS poisoner, with built-in HTTP/SMB/MSSQL/FTP/LDAP rogue authentication server supporting NTLMv1/NTLMv2/LMv2, Extended Security NTLMSSP and Basic HTTP authentication. 	https://github.com/SpiderLabs/Responder/
ridenum 	39.ebbfaca 	A null session RID cycle attack for brute forcing domain controllers. 	https://github.com/trustedsec/ridenum
ropgadget 	5.3 	Lets you search your gadgets on your binaries (ELF format) to facilitate your ROP exploitation. 	https://github.com/JonathanSalwan/ROPgadget
ropper 	91.212d5da 	It can show information about files in different file formats and you can find gadgets to build rop chains for different architectures. For disassembly ropper uses the awesome Capstone Framework. 	https://github.com/sashs/Ropper
roputils 	124.5ab25f5 	A Return-oriented Programming toolkit. 	https://github.com/inaz2/roputils
rpdscan 	2.a71b0f3 	Remmina Password Decoder and scanner. 	https://github.com/freakyclown/RPDscan
rtlamr 	197.03369d1 	An rtl-sdr receiver for smart meters operating in the 900MHz ISM band. 	https://github.com/bemasher/rtlamr/
rtlizer 	34.33e31ba 	Simple spectrum analyzer. 	https://github.com/csete/rtlizer
rtlsdr-scanner 	862.2831e0e 	A cross platform Python frequency scanning GUI for the OsmoSDR rtl-sdr library. 	https://github.com/EarToEarOak/RTLSDR-Scanner
ruby-ronin 	1.5.0 	A Ruby platform for exploit development and security research. 	http://ronin-ruby.github.io/
ruby-ronin-support 	0.5.1 	A support library for Ronin. 	http://ronin-ruby.github.io/
ruby-uri-query_params 	0.7.0 	Access the query parameters of a URI, just like in PHP. 	http://github.com/postmodern/uri-query_params
samydeluxe 	2.2ed1bac 	Automatic samdump creation script. 	http://github.com/jensp/samydeluxe
sandy 	6.531ab16 	An open-source Samsung phone encryption assessment framework 	https://github.com/donctl/sandy
sasm 	3.1.0 	A simple crossplatform IDE for NASM, MASM, GAS and FASM assembly languages. 	https://github.com/Dman95/SASM
sb0x 	19.04f40fe 	A simple and Lightweight framework for Penetration testing. 	https://github.com/levi0x0/sb0x-project
scout2 	208.aaf57b8 	Security auditing tool for AWS environments. 	http://isecpartners.github.io/Scout2/
scrape-dns 	58.3df392f 	Searches for interesting cached DNS entries. 	https://github.com/304GEEK/Scrape-DNS
sees 	67.cd741aa 	Increase the success rate of phishing attacks by sending emails to company users as if they are coming from the very same company's domain. 	https://github.com/galkan/sees/
sergio-proxy 	0.2.1 	A multi-threaded transparent HTTP proxy for manipulating web traffic 	https://github.com/darkoperator/dnsrecon
shellme 	3.8c7919d 	Because sometimes you just need shellcode and opcodes quickly. This essentially just wraps some nasm/objdump calls into a neat script. 	https://github.com/hatRiot/shellme
shellnoob 	2.1 	A toolkit that eases the writing and debugging of shellcode 	https://github.com/reyammer/shellnoob
shocker 	52.4c9df3a 	A tool to find and exploit servers vulnerable to Shellshock. 	https://github.com/nccgroup/shocker
shodan 	1.2.4 	Python library for Shodan (https://developer.shodan.io). 	http://github.com/achillean/shodan-python
sipshock 	6.1d636ab 	A scanner for SIP proxies vulnerable to Shellshock. 	https://github.com/zaf/sipshock
skyjack 	7.5f7a25e 	Takes over Parrot drones, deauthenticating their true owner and taking over control, turning them into zombie drones under your own control. 	https://github.com/samyk/skyjack
skypefreak 	30.14a81cb 	A Cross Platform Forensic Framework for Skype. 	http://osandamalith.github.io/SkypeFreak/
smartphone-pentest-framework 	100.399e6ce 	Repository for the Smartphone Pentest Framework (SPF). 	https://github.com/georgiaw/Smartphone-Pentest-Framework
smbexec 	148.7827616 	A rapid psexec style attack with samba tools. 	https://github.com/pentestgeek/smbexec
snapception 	8.c156f9e 	Intercept and decrypt all snapchats received over your network. 	https://github.com/thebradbain/snapception
snmp-brute 	11.180075b 	SNMP brute force, enumeration, CISCO config downloader and password cracking script. 	https://github.com/SECFORCE/SNMP-Brute
snoopy-ng 	93.e305420 	A distributed, sensor, data collection, interception, analysis, and visualization framework. 	https://github.com/sensepost/snoopy-ng
spiga 	7240.3a804ac 	Configurable web resource scanner 	https://github.com/getdual/scripts-n-tools/blob/master/spiga.py
spipscan 	69.4ad3235 	SPIP (CMS) scanner for penetration testing purpose written in Python. 	https://github.com/PaulSec/SPIPScan
sploitctl 	35.23a18ca 	Fetch, install and search exploit archives from exploit sites like exploit-db and packetstorm. 	https://github.com/BlackArch/sploitctl
sploitego 	153.d9568dc 	Maltego Penetration Testing Transforms. 	https://github.com/allfro/sploitego
ssh-user-enum 	5.3d83131 	SSH User Enumeration Script in Python Using The Timing Attack. 	https://github.com/nccgroup/ssh-user-enum
sshscan 	7401.3bfd4ae 	A horizontal SSH scanner that scans large swaths of IPv4 space for a single SSH user and pass. 	https://github.com/getdual/scripts-n-tools/blob/master/sshscan.py
sshuttle 	198.9ce2fa0 	Transparent proxy server that works as a poor man's VPN. Forwards all TCP packets over ssh (and even DNS requests when using --dns option). Doesn't require admin privileges on the server side. 	https://github.com/apenwarr/sshuttle
ssl-phuck3r 	2.0 	All in one script for Man-In-The-Middle attacks. 	https://github.com/zombiesam/ssl_phuck3r
sslcaudit 	522.5b6be3e 	Utility to perform security audits of SSL/TLS clients. 	https://github.com/grwl/sslcaudit
sslnuke 	5.c5faeaa 	Transparent proxy that decrypts SSL traffic and prints out IRC messages. 	https://github.com/jtripper/sslnuke
sslscan 	239.1328b49 	Tests SSL/TLS enabled services to discover supported cipher suites. 	https://github.com/DinoTools/sslscan
sslyze 	0.10 	Python tool for analyzing the configuration of SSL servers and for identifying misconfigurations. 	https://github.com/nabla-c0d3/sslyze/
stackflow 	2.2af525d 	Universal stack-based buffer overfow exploitation tool. 	https://github.com/d4rkcat/stackflow
starttls-mitm 	7.b257756 	A mitm proxy that will transparently proxy and dump both plaintext and TLS traffic. 	https://github.com/ipopov/starttls-mitm
subbrute 	58.ff00d72 	A python subdomain bruteforce tool for pentesters. 	https://github.com/TheRook/subbrute
sulley 	1.0.cb5e62c 	A pure-python fully automated and unattended fuzzing framework. 	https://github.com/OpenRCE/sulley/
svn-extractor 	28.3af00fb 	A simple script to extract all web resources by means of .SVN folder exposed over network. 	https://github.com/anantshri/svn-extractor
tckfc 	21.a32167e 	TrueCrypt key file cracker. 	https://github.com/Octosec/tckfc
tekdefense-automater 	58.a034193 	IP URL and MD5 OSINT Analysis 	https://github.com/1aN0rmus/TekDefense-Automater
tilt 	90.2bc2ef2 	An easy and simple tool implemented in Python for ip reconnaissance, with reverse ip lookup. 	https://github.com/AeonDave/tilt
tinfoleak 	3.6469eb3 	Get detailed information about a Twitter user activity. 	https://github.com/technoskald/tinfoleak/
tlsenum 	75.6618285 	A command line tool to enumerate TLS cipher-suites supported by a server. 	https://github.com/Ayrx/tlsenum
tlspretense 	0.6.2 	SSL/TLS client testing framework 	https://github.com/iSECPartners/tlspretense
topera 	19.3e230fd 	An IPv6 security analysis toolkit, with the particularity that their attacks can't be detected by Snort. 	https://github.com/toperaproject/topera
tsh-sctp 	2.850a2da 	An open-source UNIX backdoor. 	https://github.com/infodox/tsh-sctp
tunna 	14.953f745 	a set of tools which will wrap and tunnel any TCP communication over HTTP. It can be used to bypass network restrictions in fully firewalled environments. 	https://github.com/SECFORCE/Tunna
uefi-firmware-parser 	103.9d4d220 	Parse BIOS/Intel ME/UEFI firmware related structures: Volumes, FileSystems, Files, etc 	https://github.com/theopolis/uefi-firmware-parser
ufonet 	12.dc92621 	A tool designed to launch DDoS attacks against a target, using 'Open Redirect' vectors on third party web applications, like botnet. 	https://github.com/epsylon/ufonet
umap 	25.3ad8121 	The USB host security assessment tool. 	https://github.com/nccgroup/umap
unibrute 	1.b3fb4b7 	Multithreaded SQL union bruteforcer. 	https://github.com/GDSSecurity/Unibrute
unicorn 	12.fd8cd18 	A simple tool for using a PowerShell downgrade attack and inject shellcode straight into memory. 	https://github.com/trustedsec/unicorn
upnp-pentest-toolkit 	1.1 	UPnP Pentest Toolkit for Windows. 	https://github.com/nccgroup/UPnP-Pentest-Toolkit
usernamer 	7.813139d 	Pentest Tool to generate usernames/logins based on supplied names. 	https://github.com/jseidl/usernamer
v3n0m 	77.cdaf14e 	Popular linux version of Balthazar/NovaCygni's 'v3n0m' scanner. Searches 18k+ dorks over 13 search engines. 	https://github.com/v3n0m-Scanner/V3n0M-Scanner
vane 	1853.9cea741 	A vulnerability scanner which checks the security of WordPress installations using a black box approach. 	https://github.com/delvelabs/vane
vbrute 	1.11dda8b 	Virtual hosts brute forcer. 	https://github.com/nccgroup/vbrute
vega 	1.0 	An open source platform to test the security of web applications 	https://github.com/subgraph/Vega/wiki
veil 	307.63130a3 	A tool designed to generate metasploit payloads that bypass common anti-virus solutions. 	https://github.com/veil-evasion/Veil
viper 	633.e35789e 	A Binary analysis framework. 	https://github.com/botherder/viper
vlan-hopping 	14.b944d17 	Easy 802.1Q VLAN Hopping 	https://github.com/nccgroup/vlan-hopping
waidps 	16.ff8d270 	Wireless Auditing, Intrusion Detection & Prevention System. 	https://github.com/SYWorks/waidps
webhandler 	321.bcd2263 	A handler for PHP system functions & also an alternative 'netcat' handler. 	https://github.com/lnxg33k/webhandler
webpwn3r 	35.3fb27bb 	A python based Web Applications Security Scanner. 	https://github.com/zigoo0/webpwn3r
webrute 	3.3 	Web server directory brute forcer. 	https://github.com/BlackArch/webrute
webshells 	1.c6a790b 	Web Backdoors. 	https://github.com/BlackArch/webshells
websockify 	0.6.0 	WebSocket to TCP proxy/bridge. 	http://github.com/kanaka/websockify
weevely 	1.1 	Stealth tiny web shell 	http://epinna.github.io/Weevely/
wfuzz 	32.db8d1f6 	Utility to bruteforce web applications to find their not linked resources. 	https://github.com/xmendez/wfuzz
wifi-monitor 	0.r22.71340a3 	Prints the IPs on your local network that're sending the most packets 	https://github.com/DanMcInerney/wifi-monitor
wificurse 	0.3.9 	WiFi jamming tool. 	https://github.com/oblique/wificurse
wifijammer 	52.20c9b70 	A python script to continuosly jam all wifi clients within range. 	https://github.com/DanMcInerney/wifijammer
wifiphisher 	71.dc13fe8 	Fast automated phishing attacks against WPA networks. 	https://github.com/sophron/wifiphisher
wifitap 	2b16088 	WiFi injection tool through tun/tap device. 	https://github.com/GDSSecurity/wifitap
wig 	365.e56b2bf 	WebApp Information Gatherer. 	https://github.com/jekyc/wig
wikigen 	8.348aa99 	A script to generate wordlists out of wikipedia pages. 	https://github.com/zombiesam/wikigen
wireless-ids 	24.b132071 	Ability to detect suspicious activity such as (WEP/WPA/WPS) attack by sniffing the air for wireless packets. 	https://github.com/SYWorks/wireless-ids
wordpot 	37.e42eeda 	A Wordpress Honeypot. 	https://github.com/gbrindisi/wordpot
wpa-bruteforcer 	4.d5f8586 	Attacking WPA/WPA encrypted access point without client. 	https://github.com/SYWorks/wpa-bruteforcer
wpbf 	7.11b6ac1 	Multithreaded WordPress brute forcer. 	https://github.com/dejanlevaja/wpbf
xcavator 	5.bd9e2d8 	Man-In-The-Middle and phishing attack tool that steals the victim's credentials of some web services like Facebook. 	https://github.com/nccgroup/xcavator
xortool 	0.96 	A tool to analyze multi-byte xor cipher. 	https://github.com/hellman/xortool/
xssless 	35.9eee648 	An automated XSS payload generator written in python. 	https://github.com/mandatoryprogrammer/xssless
xssscan 	17.7f1ea90 	Command line tool for detection of XSS attacks in URLs. Based on ModSecurity rules from OWASP CRS. 	https://github.com/gwroblew/detectXSSlib
xsssniper 	0.9 	An automatic XSS discovery tool 	https://github.com/gbrindisi/xsssniper
xssya 	13.15ebdfe 	A Cross Site Scripting Scanner & Vulnerability Confirmation. 	https://github.com/yehia-mamdouh/XSSYA
yaaf 	7.4d6273a 	Yet Another Admin Finder. 	https://github.com/Plasticoo/YAAF
yara 	3.3.0 	A malware identification and classification tool. 	https://plusvic.github.io/yara/
zackattack 	5.1f96c14 	A new tool set to do NTLM Authentication relaying unlike any other tool currently out there. 	https://github.com/urbanesec/ZackAttack/
2015-02-23 00:23:14 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/ModMobSupport.json
2015-02-23 00:23:14 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/NBTStripper.json
2015-02-23 00:28:54 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/ModMobSupport.json
2015-02-23 00:28:54 [INFO] [STDERR] java.io.FileNotFoundException: https://raw.githubusercontent.com/iChun/Morph/master/assets/morph/mod/NBTStripper.json
// @namespace     github.com/karlding
Fetching 'php' from git://github.com/acfreitas/php-cookbook.git (at master)
Using php (1.5.0) from git://github.com/acfreitas/php-cookbook.git (at master)
git clone git://github.com/libretro/Genesis-Plus-GX.git
git clone git://github.com/libretro/picodrive
git clone git://github.com/libretro/gambatte-libretro
git clone git://github.com/libretro/vba-next
git clone git://github.com/libretro/vbam-libretro
git clone git://github.com/libretro/gpsp
git clone git://github.com/libretro/libretro-fceumm
git clone git://github.com/kode54/QuickNES_Core
git clone git://github.com/libretro/nestopia
git clone git://github.com/libretro/bnes-libretro
git clone git://github.com/libretro/fceu-next.git
git clone git://github.com/libretro/snes9x
git clone git://github.com/libretro/snes9x-next
git clone git://github.com/joolswills/snes9x-rpi.git
git clone git://github.com/libretro/bsnes-libretro
git clone git://github.com/libretro/bsnes-mercury
git clone git://github.com/rmaz/ARMSNES-libretro
git clone git://github.com/joolswills/pisnes.git
git clone git://github.com/libretro/pocketsnes-libretro
git clone git://github.com/libretro/fba-libretro
git clone git://github.com/joolswills/pifba
[15:45:30] [Client thread/INFO] [Waila]: Trying to reflect com.github.abrarsyed.secretroomsmod.client.waila.WailaProvider register
java.io.FileNotFoundException: https://raw.githubusercontent.com/CoFH/ThermalExpansion/master/VERSION
[03:08:57] [Client thread/INFO] [STDERR]: [java.lang.Throwable$WrappedPrintStream:println:-1]: java.io.FileNotFoundException: http://raw.githubusercontent.com/MrTJP/ProjectRed/master/resources/Changelog
    // https://cloudkidstudio.github.io/PixiParticlesEditor/
C:\Users\awefawef\.cargo\registry\src\github.com-1ecc6299db9ec823\unicase-0.0
C:\Users\awefawef\.cargo\registry\src\github.com-1ecc6299db9ec823\unicase-0.0
C:\Users\awefawef\.cargo\registry\src\github.com-1ecc6299db9ec823\rustc-seria
C:\Users\awefawef\.cargo\registry\src\github.com-1ecc6299db9ec823\rustc-seria
C:\Users\awefawef\.cargo\registry\src\github.com-1ecc6299db9ec823\rustc-seria
C:\Users\awefawef\.cargo\registry\src\github.com-1ecc6299db9ec823\rustc-seria
import pygithub3
from github3 import login
def connect_to_github():
    gh,repo,branch = connect_to_github()
    gh,repo,branch = connect_to_github()
Forge Mod Loader (FML) | Version: 7.10.85.1277 | Loaded From forge-1.7.10-10.13.2.1277-universal.jar on 1.7.10-10.13.2.1277 | Website: https://github.com/MinecraftForge/FML/wiki
BetterChests (BetterChests) | Version: 1.1.1.8 | Loaded From BetterChests-1.7.10-1.1.1.8.jar on mods | Website: https://github.com/Aroma1997/BetterChests
Forge Multipart (ForgeMultipart) | Version: 1.1.0.314 | Loaded From ForgeMultipart-1.7.10-1.1.0.314-universal.jar on 1.7.10 | Website: https://github.com/Chicken-Bones/ForgeMultipart
Compact Machines (CompactMachines) | Version: 1.7.10-1.13 | Loaded From compactmachines-1.7.10-1.13.jar on mods | Website: https://github.com/thraaawn/CompactMachines
Cookie Core (cookiecore) | Version: 1.3.0 | Loaded From cookiecore-1.3.0.jar on mods | Website: https://github.com/Ephys/CookieCore/releases
EnderTech (EnderTech) | Version: 1.7.10-0.3.0.364 | Loaded From EnderTech-1.7.10-0.3.0.364.jar on mods | Website: https://github.com/Drayshak/EnderTech
ExtraCells (extracells) | Version: 2.2.24 | Loaded From ExtraCells-1.7.10-2.2.24b44.jar on mods | Website: http://m3gafr3ak.github.io/ExtraCells/
Flaxbeard's Steam Power (Steamcraft) | Version: 0.27.3 | Loaded From Flaxbeard'sSteamPower-1.7.10-0.27.3.jar on mods | Website: https://github.com/Flaxbeard/Flaxbeards-Steam-Power
INpureCore (inpure|core) | Version: 1.7.10R1.0.0B7 | Loaded From INpureCore-[1.7.10]1.0.0B7-19.jar on mods | Website: https://github.com/INpureProjects
Inventory Tweaks (inventorytweaks) | Version: 1.58-147-645ca10 | Loaded From InventoryTweaks-1.58-147.jar on mods | Website: https://github.com/Kobata/inventory-tweaks
Mantle (Mantle) | Version: 1.7.10-0.3.2.jenkins184 | Loaded From Mantle-1.7.10-0.3.2.jar on mods | Website: https://github.com/SlimeKnights/Mantle
QuarryPlus (QuarryPlus) | Version: 2.0.1 | Loaded From QuarryPlus-1.7.10-2.0.1.jar on mods | Website: https://github.com/yogpstop/QuarryPlus
Tails (Tails) | Version: 1.7.10-1.2.3 | Loaded From Tails-1.7.10-1.2.3.jar on mods | Website: https://github.com/kihira
Thaumic Exploration (ThaumicExploration) | Version: 0.6.0 | Loaded From ThaumicExploration-1.7.10-1.1-34.jar on mods | Website: https://github.com/Flaxbeard/Thaumic_Exploration
Minecraft Multipart Plugin (McMultipart) | Version: 1.1.0.314 | Loaded From ForgeMultipart-1.7.10-1.1.0.314-universal.jar on 1.7.10 | Website: https://github.com/Chicken-Bones/ForgeMultipart
Forge Microblocks (ForgeMicroblock) | Version: 1.1.0.314 | Loaded From ForgeMultipart-1.7.10-1.1.0.314-universal.jar on 1.7.10 | Website: https://github.com/Chicken-Bones/ForgeMultipart
 
Nombre d'occurrences de github dans le(s) fichier(s) : 
1026
